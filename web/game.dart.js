// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {'': function ListIterator(i, list) {
  this.i = i;
  this.list = list;
},
 'super': 'Object',
 get$hasNext: function() {
  return $.lt(this.i, this.list.length);
},
 next$0: function() {
  var value, t1;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  value = this.list[this.i];
  t1 = this.i;
  if (typeof t1 !== 'number')
    return this.next$0$bailout0(1, t1, value);
  this.i = t1 + 1;
  return value;
},
 next$0$bailout0: function(state0, t1, value) {
  this.i = $.add(t1, 1);
  return value;
}
};

$$.Closure = {'': function Closure() {
},
 'super': 'Object',
 toString$0: function() {
  return "Closure";
}
};

$$.Dynamic_ = {'': function Dynamic_() {
},
 'super': 'Object'
};

$$.Null = {'': function Null() {
},
 'super': 'Object'
};

$$.CastErrorImplementation = {'': function CastErrorImplementation(actualType, expectedType) {
  this.actualType = actualType;
  this.expectedType = expectedType;
},
 'super': 'Object',
 toString$0: function() {
  return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
}
};

$$.MetaInfo = {'': function MetaInfo(_tag, _tags, _liblib0$_set) {
  this._tag = _tag;
  this._tags = _tags;
  this._liblib0$_set = _liblib0$_set;
},
 'super': 'Object',
 get$_tag: function() { return this._tag; },
 get$_liblib0$_set: function() { return this._liblib0$_set; },
 _liblib0$_set$2: function(arg0, arg1) {
  return this._liblib0$_set.call$2(arg0, arg1);
}
};

$$.JSSyntaxRegExp = {'': function JSSyntaxRegExp(_liblib0$_pattern, _multiLine, _ignoreCase) {
  this._liblib0$_pattern = _liblib0$_pattern;
  this._multiLine = _multiLine;
  this._ignoreCase = _ignoreCase;
},
 'super': 'Object',
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = m.index;
  t1 = $.getInterceptor$JSStringJSArray(m).operator$index$1(m, 0);
  t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 get$pattern: function() {
  return this._liblib0$_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true
};

$$._MatchImplementation = {'': function _MatchImplementation(pattern, str, start, end, _groups) {
  this.pattern = pattern;
  this.str = str;
  this.start = start;
  this.end = end;
  this._groups = _groups;
},
 'super': 'Object',
 get$pattern: function() { return this.pattern; },
 start$1: function(arg0) {
  return this.start.call$1(arg0);
},
 operator$index$1: function(index) {
  var t1 = this._groups;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout0(1, index, t1);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout0: function(state0, index, t1) {
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
}
};

$$._AllMatchesIterable = {'': function _AllMatchesIterable(_re, _str) {
  this._re = _re;
  this._str = _str;
},
 'super': 'Object',
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {'': function _AllMatchesIterator(_re, _str, _liblib0$_next, _done) {
  this._re = _re;
  this._str = _str;
  this._liblib0$_next = _liblib0$_next;
  this._done = _done;
},
 'super': 'Object',
 get$_liblib0$_next: function() { return this._liblib0$_next; },
 set$_liblib0$_next: function(v) { this._liblib0$_next = v; },
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  var next = this._liblib0$_next;
  this._liblib0$_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._liblib0$_next == null))
    return true;
  this._liblib0$_next = this._re.firstMatch$1(this._str);
  if (this._liblib0$_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.StringMatch = {'': function StringMatch(start, str, pattern) {
  this.start = start;
  this.str = str;
  this.pattern = pattern;
},
 'super': 'Object',
 get$pattern: function() { return this.pattern; },
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
},
 start$1: function(arg0) {
  return this.start.call$1(arg0);
}
};

$$._DateImpl = {'': function _DateImpl(millisecondsSinceEpoch, isUtc) {
  this.millisecondsSinceEpoch = millisecondsSinceEpoch;
  this.isUtc = isUtc;
},
 'super': 'Object',
 get$millisecondsSinceEpoch: function() { return this.millisecondsSinceEpoch; },
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 compareTo$1: function(other) {
  var t1 = this.millisecondsSinceEpoch;
  return $.getInterceptor$JSStringJSNumber(t1).compareTo$1(t1, other.get$millisecondsSinceEpoch());
},
 get$hashCode: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1, t2, t3, y, m, d, h, min, sec, ms;
  t1 = new $._DateImpl_toString_fourDigits();
  t2 = new $._DateImpl_toString_threeDigits();
  t3 = new $._DateImpl_toString_twoDigits();
  y = t1.call$1(this.get$year());
  m = t3.call$1(this.get$month());
  d = t3.call$1(this.get$day());
  h = t3.call$1(this.get$hour());
  min = t3.call$1(this.get$minute());
  sec = t3.call$1(this.get$second());
  ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
  else
    return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
},
 add$1: function(duration) {
  var ms, t2;
  ms = this.millisecondsSinceEpoch;
  if (typeof ms !== 'number')
    return this.add$1$bailout1(1, duration, ms);
  t2 = duration.get$inMilliseconds();
  if (typeof t2 !== 'number')
    return this.add$1$bailout1(2, ms, t2);
  return $.Date_Date$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
},
 add$1$bailout1: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      ms = env1;
      duration = env0;
      break;
    case 2:
      t2 = env1;
      ms = env0;
      break;
  }
  switch (state0) {
    case 0:
      ms = this.millisecondsSinceEpoch;
    case 1:
      state0 = 0;
      t2 = duration.get$inMilliseconds();
    case 2:
      var ms, duration, t2;
      state0 = 0;
      return $.Date_Date$fromMillisecondsSinceEpoch($.add(ms, t2), this.isUtc);
  }
},
 difference$1: function(other) {
  return $.Duration$(0, 0, $.sub(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch()), 0, 0);
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 _DateImpl$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.getInterceptor$JSNumber(t1).abs$0(t1), 8640000000000000))
    throw $.$$throw($.ArgumentError$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.ArgumentError$(t1));
},
 is$Date: true
};

$$.Duration = {'': function Duration(inMilliseconds) {
  this.inMilliseconds = inMilliseconds;
},
 'super': 'Object',
 get$inMilliseconds: function() { return this.inMilliseconds; },
 get$inHours: function() {
  return $.tdiv(this.inMilliseconds, 3600000);
},
 get$inMinutes: function() {
  return $.tdiv(this.inMilliseconds, 60000);
},
 get$inSeconds: function() {
  return $.tdiv(this.inMilliseconds, 1000);
},
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Duration))
    return false;
  return $.eq(this.inMilliseconds, other.inMilliseconds);
},
 get$hashCode: function() {
  var t1 = this.inMilliseconds;
  return $.getInterceptor(t1).get$hashCode(t1);
},
 compareTo$1: function(other) {
  var t1 = this.inMilliseconds;
  return $.getInterceptor$JSStringJSNumber(t1).compareTo$1(t1, other.get$inMilliseconds());
},
 toString$0: function() {
  var t1, t2, t3, t4, twoDigitMinutes, t5, twoDigitSeconds, threeDigitMs;
  t1 = new $.Duration_toString_threeDigits();
  t2 = new $.Duration_toString_twoDigits();
  t3 = this.inMilliseconds;
  if ($.ltB(t3, 0))
    return "-" + $.S($.Duration$(0, 0, $.neg(t3), 0, 0));
  t4 = this.get$inMinutes();
  twoDigitMinutes = t2.call$1($.getInterceptor$JSNumber(t4).remainder$1(t4, 60));
  t5 = this.get$inSeconds();
  twoDigitSeconds = t2.call$1($.getInterceptor$JSNumber(t5).remainder$1(t5, 60));
  threeDigitMs = t1.call$1($.getInterceptor$JSNumber(t3).remainder$1(t3, 1000));
  return $.S(this.get$inHours()) + ":" + $.S(twoDigitMinutes) + ":" + $.S(twoDigitSeconds) + "." + $.S(threeDigitMs);
},
 is$Duration: true
};

$$.NullThrownError = {'': function NullThrownError() {
},
 'super': 'Object',
 toString$0: function() {
  return "Throw of null.";
}
};

$$.ArgumentError = {'': function ArgumentError(message) {
  this.message = message;
},
 'super': 'Object',
 get$message: function() { return this.message; },
 toString$0: function() {
  if (!(this.get$message() == null))
    return "Illegal argument(s): " + $.S(this.get$message());
  return "Illegal argument(s)";
}
};

$$.RangeError = {'': function RangeError(message) {
  this.message = message;
},
 'super': 'ArgumentError',
 toString$0: function() {
  return "RangeError: " + $.S(this.message);
}
};

$$.NoSuchMethodError = {'': function NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, _existingArgumentNames) {
  this._receiver = _receiver;
  this._memberName = _memberName;
  this._arguments = _arguments;
  this._namedArguments = _namedArguments;
  this._existingArgumentNames = _existingArgumentNames;
},
 'super': 'Object',
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  t1.i_1 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_1, t2.length); t1.i_1 = $.add(t1.i_1, 1)) {
    if ($.gtB(t1.i_1, 0)) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    t5 = t1.i_1;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.Error_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  t3 = t1.sb_0;
  actualParameters = $.getInterceptor(t3).toString$0(t3);
  t1.sb_0 = $.StringBuffer_StringBuffer("");
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_0;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_0;
    t4 = $.getInterceptor$JSArray(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  t1 = t1.sb_0;
  formalParameters = $.getInterceptor(t1).toString$0(t1);
  t1 = this._memberName;
  return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_0 = $.StringBuffer_StringBuffer("");
      t1.i_1 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (t3 = $.getInterceptor$JSStringJSArray(t2); $.ltB(t1.i_1, t3.get$length(t2)); t1.i_1 = $.add(t1.i_1, 1)) {
          if ($.gtB(t1.i_1, 0)) {
            t4 = t1.sb_0;
            $.getInterceptor$JSArray(t4).add$1(t4, ", ");
          }
          t4 = t1.sb_0;
          $.getInterceptor$JSArray(t4).add$1(t4, $.Error_safeToString(t3.operator$index$1(t2, t1.i_1)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, t4, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
      else {
        t3 = t1.sb_0;
        actualParameters = $.getInterceptor(t3).toString$0(t3);
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        for (t3 = $.getInterceptor$JSStringJSArray(t2), i = 0; $.ltB(i, t3.get$length(t2)); ++i) {
          if (i > 0) {
            t4 = t1.sb_0;
            $.getInterceptor$JSArray(t4).add$1(t4, ", ");
          }
          t4 = t1.sb_0;
          $.getInterceptor$JSArray(t4).add$1(t4, t3.operator$index$1(t2, i));
        }
        t1 = t1.sb_0;
        formalParameters = $.getInterceptor(t1).toString$0(t1);
        t1 = this._memberName;
        return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
      }
  }
}
};

$$.UnsupportedError = {'': function UnsupportedError(message) {
  this.message = message;
},
 'super': 'Object',
 get$message: function() { return this.message; },
 toString$0: function() {
  return "Unsupported operation: " + $.S(this.get$message());
}
};

$$.UnimplementedError = {'': function UnimplementedError(message) {
  this.message = message;
},
 'super': 'Object',
 get$message: function() { return this.message; },
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
}
};

$$.StateError = {'': function StateError(message) {
  this.message = message;
},
 'super': 'Object',
 get$message: function() { return this.message; },
 toString$0: function() {
  return "Bad state: " + $.S(this.get$message());
}
};

$$.StackOverflowError = {'': function StackOverflowError() {
},
 'super': 'Object',
 toString$0: function() {
  return "Stack Overflow";
}
};

$$.RuntimeError = {'': function RuntimeError(message) {
  this.message = message;
},
 'super': 'Object',
 toString$0: function() {
  return "RuntimeError: " + this.message;
}
};

$$._ExceptionImplementation = {'': function _ExceptionImplementation(message) {
  this.message = message;
},
 'super': 'Object',
 toString$0: function() {
  var t1 = this.message;
  if (t1 == null)
    return "Exception";
  return "Exception: " + $.S(t1);
}
};

$$.FormatException = {'': function FormatException(message) {
  this.message = message;
},
 'super': 'Object',
 toString$0: function() {
  return "FormatException: " + $.S(this.message);
}
};

$$.IllegalJSRegExpException = {'': function IllegalJSRegExpException(_pattern, _errmsg) {
  this._pattern = _pattern;
  this._errmsg = _errmsg;
},
 'super': 'Object',
 toString$0: function() {
  return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
}
};

$$._HashMapImpl = {'': function _HashMapImpl(_keys, _values, _loadLimit, _numberOfEntries, _numberOfDeleted) {
  this._keys = _keys;
  this._values = _values;
  this._loadLimit = _loadLimit;
  this._numberOfEntries = _numberOfEntries;
  this._numberOfDeleted = _numberOfDeleted;
},
 'super': 'Object',
 _probeForAdding$1: function(key) {
  var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CONSTANT2)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForAdding$1$bailout: function(state0, key, t1) {
  var hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  hash = $.and(t1, this._keys.length - 1);
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CONSTANT2)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  hash = $.and($.getInterceptor(key).get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = this._numberOfEntries + 1;
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, t1, t2, i, key, value, newIndex, t3;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv(newCapacity * 3, 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $.List_List(newCapacity);
  this._values = $.List_List(newCapacity);
  for (t1 = oldKeys.length, t2 = oldValues.length, i = 0; i < capacity; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CONSTANT2)
      continue;
    if (i >= t2)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t3 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = key;
    t3 = this._values;
    if (newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CONSTANT2)
    this._numberOfEntries = this._numberOfEntries + 1;
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 putIfAbsent$2: function(key, ifAbsent) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  }
  value = ifAbsent.call$0();
  this.operator$indexSet$2(key, value);
  return value;
},
 remove$1: function(key) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = this._numberOfEntries - 1;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CONSTANT2;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return this._numberOfEntries === 0;
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CONSTANT2)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $.List_List(8);
  this._values = $.List_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {'': function _DeletedKeySentinel() {
},
 'super': 'Object'
};

$$._KeyValuePair = {'': function _KeyValuePair(key, value) {
  this.key = key;
  this.value = value;
},
 'super': 'Object',
 get$key: function() { return this.key; },
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
};

$$._LinkedHashMapImpl = {'': function _LinkedHashMapImpl(_list, _map) {
  this._list = _list;
  this._map = _map;
},
 'super': 'Object',
 operator$indexSet$2: function(key, value) {
  var t1;
  if (this._map.containsKey$1(key) === true) {
    t1 = this._map;
    $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key).get$element().set$value(value);
  } else {
    this._list.addLast$1($._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var t1, entry;
  t1 = this._map;
  entry = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 putIfAbsent$2: function(key, ifAbsent) {
  var value = this.operator$index$1(key);
  if (this.operator$index$1(key) == null && this._map.containsKey$1(key) !== true) {
    value = ifAbsent.call$0();
    this.operator$indexSet$2(key, value);
  }
  return value;
},
 forEach$1: function(f) {
  this._list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  var t1 = this._map;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  this._list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {'': function Object() {
},
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.DoubleLinkedQueueEntry = {'': function DoubleLinkedQueueEntry(_previous, _next, _element) {
  this._previous = _previous;
  this._next = _next;
  this._element = _element;
},
 'super': 'Object',
 set$_previous: function(v) { this._previous = v; },
 get$_next: function() { return this._next; },
 set$_next: function(v) { this._next = v; },
 get$_element: function() { return this._element; },
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {'': function _DoubleLinkedQueueEntrySentinel(_previous, _next, _element) {
  this._previous = _previous;
  this._next = _next;
  this._element = _element;
},
 'super': 'DoubleLinkedQueueEntry',
 remove$0: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {'': function DoubleLinkedQueue(_sentinel) {
  this._sentinel = _sentinel;
},
 'super': 'Object',
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._sentinel.prepend$1(t2);
  }
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_0 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_0;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 every$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) !== true)
      return false;
  }
  return true;
},
 map$1: function(f) {
  var other, entry, t1, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (t1 = $.getInterceptor$JSArray(other); !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    t1.addLast$1(other, f.call$1(entry.get$_element()));
  }
  return other;
},
 filter$1: function(f) {
  var other, entry, t1, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (t1 = $.getInterceptor$JSArray(other); !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      t1.addLast$1(other, entry.get$_element());
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {'': function _DoubleLinkedQueueIterator(_sentinel, _currentEntry) {
  this._sentinel = _sentinel;
  this._currentEntry = _currentEntry;
},
 'super': 'Object',
 get$hasNext: function() {
  var t1, t2;
  t1 = this._currentEntry.get$_next();
  t2 = this._sentinel;
  return !(t1 == null ? t2 == null : t1 === t2);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$.SequenceIterator = {'': function SequenceIterator(_sequence, _position) {
  this._sequence = _sequence;
  this._position = _position;
},
 'super': 'Object',
 get$hasNext: function() {
  var t1, t2;
  t1 = this._position;
  t2 = this._sequence;
  return $.lt(t1, $.getInterceptor$JSStringJSArray(t2).get$length(t2));
},
 next$0: function() {
  var t1, t3, t4;
  if (this.get$hasNext() === true) {
    t1 = this._sequence;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.next$0$bailout1(1, t1);
    t3 = $.getInterceptor$JSStringJSArray(t1);
    t4 = this._position;
    if (typeof t4 !== 'number')
      return this.next$0$bailout1(2, t1, t4, t3);
    this._position = t4 + 1;
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t1.length)
      throw $.ioore(t4);
    return t1[t4];
  }
  throw $.$$throw($.StateError$("No more elements"));
},
 next$0$bailout1: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env2;
      t4 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      var t1, t3, t4;
      if (state0 === 2 || state0 === 1 || state0 === 0 && this.get$hasNext() === true)
        switch (state0) {
          case 0:
            t1 = this._sequence;
          case 1:
            state0 = 0;
            t3 = $.getInterceptor$JSStringJSArray(t1);
            t4 = this._position;
          case 2:
            state0 = 0;
            this._position = $.add(t4, 1);
            return t3.operator$index$1(t1, t4);
        }
      throw $.$$throw($.StateError$("No more elements"));
  }
}
};

$$._StringBufferImpl = {'': function _StringBufferImpl(_buffer, _length) {
  this._buffer = _buffer;
  this._length = _length;
},
 'super': 'Object',
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return $.eq(this._length, 0);
},
 add$1: function(obj) {
  var str, t1, t3;
  str = $.getInterceptor(obj).toString$0(obj);
  if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
    return this;
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, str);
  t1 = this._length;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, str, t1);
  t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
  if (typeof t3 !== 'number')
    return this.add$1$bailout(2, t3, t1);
  this._length = t1 + t3;
  return this;
},
 add$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      str = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      str = $.getInterceptor(obj).toString$0(obj);
      if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
        return this;
      t1 = this._buffer;
      $.getInterceptor$JSArray(t1).add$1(t1, str);
      t1 = this._length;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
    case 2:
      var str, t1, t3;
      state0 = 0;
      this._length = $.add(t1, t3);
      return this;
  }
},
 addAll$1: function(objects) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(objects).iterator$0(objects); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  this._buffer = $.List_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  var t1, result;
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
    return "";
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1)) {
    t1 = this._buffer;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, 0);
  }
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ObjectInterceptor = {'': function ObjectInterceptor() {
},
 'super': 'Object',
 toString$0: function(receiver) {
  return receiver.toString$0();
},
 add$1: function(receiver, a0) {
  return receiver.add$1(a0);
},
 map$1: function(receiver, a0) {
  return receiver.map$1(a0);
},
 iterator$0: function(receiver) {
  return receiver.iterator$0();
},
 charCodeAt$1: function(receiver, a0) {
  return receiver.charCodeAt$1(a0);
},
 replaceAll$2: function(receiver, a0, a1) {
  return receiver.replaceAll$2(a0, a1);
},
 get$length: function(receiver) {
  return receiver.get$length();
},
 addLast$1: function(receiver, a0) {
  return receiver.addLast$1(a0);
},
 indexOf$2: function(receiver, a0, a1) {
  return receiver.indexOf$2(a0, a1);
},
 insertRange$3: function(receiver, a0, a1, a2) {
  return receiver.insertRange$3(a0, a1, a2);
},
 clear$0: function(receiver) {
  return receiver.clear$0();
},
 substring$1: function(receiver, a0) {
  return receiver.substring$1(a0);
},
 contains$2: function(receiver, a0, a1) {
  return receiver.contains$2(a0, a1);
},
 toInt$0: function(receiver) {
  return receiver.toInt$0();
},
 floor$0: function(receiver) {
  return receiver.floor$0();
},
 operator$index$1: function(receiver, a0) {
  return receiver.operator$index$1(a0);
},
 substring$2: function(receiver, a0, a1) {
  return receiver.substring$2(a0, a1);
},
 addAll$1: function(receiver, a0) {
  return receiver.addAll$1(a0);
},
 removeLast$0: function(receiver) {
  return receiver.removeLast$0();
},
 set$length: function(receiver, value) {
  return receiver.set$length(value);
},
 removeRange$2: function(receiver, a0, a1) {
  return receiver.removeRange$2(a0, a1);
},
 abs$0: function(receiver) {
  return receiver.abs$0();
},
 filter$1: function(receiver, a0) {
  return receiver.filter$1(a0);
},
 get$isInfinite: function(receiver) {
  return receiver.get$isInfinite();
},
 get$hashCode: function(receiver) {
  return receiver.get$hashCode();
},
 forEach$1: function(receiver, a0) {
  return receiver.forEach$1(a0);
},
 every$1: function(receiver, a0) {
  return receiver.every$1(a0);
},
 truncate$0: function(receiver) {
  return receiver.truncate$0();
},
 contains$1: function(receiver, a0) {
  return receiver.contains$1(a0);
},
 indexOf$1: function(receiver, a0) {
  return receiver.indexOf$1(a0);
},
 get$isNaN: function(receiver) {
  return receiver.get$isNaN();
},
 remainder$1: function(receiver, a0) {
  return receiver.remainder$1(a0);
},
 get$isNegative: function(receiver) {
  return receiver.get$isNegative();
},
 sort$1: function(receiver, a0) {
  return receiver.sort$1(a0);
},
 get$isEmpty: function(receiver) {
  return receiver.get$isEmpty();
},
 allMatches$1: function(receiver, a0) {
  return receiver.allMatches$1(a0);
},
 ceil$0: function(receiver) {
  return receiver.ceil$0();
},
 endsWith$1: function(receiver, a0) {
  return receiver.endsWith$1(a0);
},
 toStringAsFixed$1: function(receiver, a0) {
  return receiver.toStringAsFixed$1(a0);
},
 removeAt$1: function(receiver, a0) {
  return receiver.removeAt$1(a0);
},
 compareTo$1: function(receiver, a0) {
  return receiver.compareTo$1(a0);
}
};

$$.JSFunction = {'': function JSFunction() {
},
 'super': 'Object',
 toString$0: function(receiver) {
  return "Closure";
}
};

$$.JSBool = {'': function JSBool() {
},
 'super': 'Object',
 toString$0: function(receiver) {
  return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver ? 519018 : 218159;
},
 is$bool: true
};

$$.JSNull = {'': function JSNull() {
},
 'super': 'Object',
 toString$0: function(receiver) {
  return "null";
},
 get$hashCode: function(receiver) {
  return 0;
}
};

$$.JSArray = {'': function JSArray() {
},
 'super': 'Object',
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, "add");
  receiver.push(value);
},
 removeAt$1: function(receiver, index) {
  if (!(typeof index === 'number' && Math.floor(index) === index))
    throw $.$$throw($.ArgumentError$(index));
  if (index < 0 || index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  $.checkGrowable(receiver, "removeAt");
  return receiver.splice(index, 1)[0];
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, "removeLast");
  if (receiver.length === 0)
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 filter$1: function(receiver, f) {
  return $.Collections_filter(receiver, [], f);
},
 addAll$1: function(receiver, collection) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;)
    $.CONSTANT1.add$1(receiver, t1.next$0());
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, "addLast");
  receiver.push(value);
},
 clear$0: function(receiver) {
  this.set$length(receiver, 0);
},
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 map$1: function(receiver, f) {
  return $.Collections_map(receiver, [], f);
},
 insertRange$3: function(receiver, start, length$, initialValue) {
  return $.listInsertRange(receiver, start, length$, initialValue);
},
 removeRange$2: function(receiver, start, length$) {
  var receiverLength, t1, t2;
  $.checkGrowable(receiver, "removeRange");
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.RangeError$value(t1));
  t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.CONSTANT1.set$length(receiver, t2);
},
 every$1: function(receiver, f) {
  return $.Collections_every(receiver, f);
},
 sort$1: function(receiver, compare) {
  $.checkMutable(receiver, "sort");
  if (compare == null)
    compare = $.Comparable_compare;
  $.coreSort(receiver, compare);
},
 indexOf$2: function(receiver, element, start) {
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  return $.Arrays_indexOf(receiver, element, start, receiver.length);
},
 indexOf$1: function($receiver, element) {
  return this.indexOf$2($receiver, element, 0);
},
 contains$1: function(receiver, other) {
  var i;
  for (i = 0; i < receiver.length; ++i)
    if ($.eqB(other, receiver[i]))
      return true;
  return false;
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 toString$0: function(receiver) {
  return $.Collections_collectionToString(receiver);
},
 iterator$0: function(receiver) {
  return $.ListIterator$(receiver);
},
 get$hashCode: function(receiver) {
  return $.Primitives_objectHashCode(receiver);
},
 get$length: function(receiver) {
  return receiver.length;
},
 set$length: function(receiver, newLength) {
  if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
    throw $.$$throw($.ArgumentError$(newLength));
  if (newLength < 0)
    throw $.$$throw($.RangeError$value(newLength));
  $.checkGrowable(receiver, "set length");
  receiver.length = newLength;
},
 operator$index$1: function(receiver, index) {
  if (!(typeof index === 'number' && Math.floor(index) === index))
    throw $.$$throw($.ArgumentError$(index));
  if (index >= receiver.length || index < 0)
    throw $.$$throw($.RangeError$value(index));
  return receiver[index];
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSNumber = {'': function JSNumber() {
},
 'super': 'Object',
 compareTo$1: function(receiver, b) {
  var bIsNegative;
  if (!(typeof b === 'number'))
    throw $.$$throw($.ArgumentError$(b));
  if (receiver < b)
    return -1;
  else if (receiver > b)
    return 1;
  else if (receiver === b) {
    if (receiver === 0) {
      bIsNegative = $.CONSTANT4.get$isNegative(b);
      if ($.eqB(this.get$isNegative(receiver), bIsNegative))
        return 0;
      if (this.get$isNegative(receiver) === true)
        return -1;
      return 1;
    }
    return 0;
  } else if (this.get$isNaN(receiver) === true) {
    if ($.CONSTANT4.get$isNaN(b) === true)
      return 0;
    return 1;
  } else
    return -1;
},
 get$isNegative: function(receiver) {
  return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
},
 get$isNaN: function(receiver) {
  return isNaN(receiver);
},
 remainder$1: function(receiver, b) {
  $.checkNull(b);
  return receiver % b;
},
 abs$0: function(receiver) {
  return Math.abs(receiver);
},
 toInt$0: function(receiver) {
  var truncated;
  if (this.get$isNaN(receiver) === true)
    throw $.$$throw($.FormatException$("NaN"));
  if (this.get$isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$("Infinity"));
  truncated = this.truncate$0(receiver);
  return truncated == -0.0 ? 0 : truncated;
},
 ceil$0: function(receiver) {
  return Math.ceil(receiver);
},
 floor$0: function(receiver) {
  return Math.floor(receiver);
},
 get$isInfinite: function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
},
 truncate$0: function(receiver) {
  return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
},
 toStringAsFixed$1: function(receiver, fractionDigits) {
  var result;
  $.checkNum(fractionDigits);
  result = receiver.toFixed(fractionDigits);
  if (receiver === 0 && this.get$isNegative(receiver) === true)
    return "-" + result;
  return result;
},
 toString$0: function(receiver) {
  if (receiver === 0 && (1 / receiver) < 0)
    return "-0.0";
  else
    return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver & 536870911;
}
};

$$.JSInt = {'': function JSInt() {
},
 'super': 'JSNumber'
};

$$.JSDouble = {'': function JSDouble() {
},
 'super': 'JSNumber'
};

$$.JSString = {'': function JSString() {
},
 'super': 'Object',
 charCodeAt$1: function(receiver, index) {
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if (index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 allMatches$1: function(receiver, str) {
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
},
 endsWith$1: function(receiver, other) {
  var otherLength, t1;
  $.checkString(other);
  otherLength = other.length;
  t1 = receiver.length;
  if (otherLength > t1)
    return false;
  return other === this.substring$1(receiver, t1 - otherLength);
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = receiver.length;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, receiver.length))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($receiver, startIndex) {
  return this.substring$2($receiver, startIndex, null);
},
 indexOf$2: function(receiver, other, start) {
  $.checkNull(other);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (start < 0)
    return -1;
  return receiver.indexOf(other, start);
},
 indexOf$1: function($receiver, other) {
  return this.indexOf$2($receiver, other, 0);
},
 contains$2: function(receiver, other, startIndex) {
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
},
 contains$1: function($receiver, other) {
  return this.contains$2($receiver, other, 0);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 compareTo$1: function(receiver, other) {
  var t1;
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (receiver === other)
    t1 = 0;
  else
    t1 = receiver < other ? -1 : 1;
  return t1;
},
 toString$0: function(receiver) {
  return receiver;
},
 get$hashCode: function(receiver) {
  var hash, i, hash0, hash1;
  for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
},
 get$length: function(receiver) {
  return receiver.length;
},
 operator$index$1: function(receiver, index) {
  if (!(typeof index === 'number' && Math.floor(index) === index))
    throw $.$$throw($.ArgumentError$(index));
  if (index >= receiver.length || index < 0)
    throw $.$$throw($.RangeError$value(index));
  return receiver[index];
},
 is$String: true
};

$$._Audio = {'': function _Audio(_audioLoader, _buffers) {
  this._audioLoader = _audioLoader;
  this._buffers = _buffers;
},
 'super': 'Object',
 get$completedBytes: function() {
  var t1 = this._audioLoader;
  if (t1 == null)
    return 0;
  else
    return t1.get$completedBytes();
},
 get$totalBytes: function() {
  var t1 = this._audioLoader;
  if (t1 == null)
    return 0;
  else
    return t1.get$totalBytes();
},
 get$done: function() {
  var t1 = this._audioLoader;
  if (t1 == null)
    return true;
  else
    return $.eq(t1.get$state(), "loaded");
},
 get$_audioContext: function() {
  var t1 = this._audioLoader;
  if (!(t1 == null))
    return t1.get$context();
  else
    return;
},
 _onLoad$1: function(args) {
  var t1, t2, t4, t3, t5;
  t1 = $.CONSTANT1.iterator$0($.CONSTANT);
  t2 = this._buffers;
  if (typeof t2 !== 'object' || t2 === null || (t2.constructor !== Array || !!t2.immutable$list) && !t2.is$JavaScriptIndexingBehavior())
    return this._onLoad$1$bailout(1, t2, t1);
  t4 = this._audioLoader;
  for (; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    t5 = t4.getResource$1($._Audio__getAudioPath(t3));
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    t2[t3] = t5;
  }
},
 _onLoad$1$bailout: function(state0, t2, t1) {
  var t4, t3;
  t4 = this._audioLoader;
  for (; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    $.indexSet(t2, t3, t4.getResource$1($._Audio__getAudioPath(t3)));
  }
},
 get$_onLoad: function() {
  return new $.BoundClosure(this, '_onLoad$1');
},
 _playAudio$1: function(name$) {
  switch (name$) {
    case "Pop":
      name$ = "Pop" + $.S($.rnd().nextInt$1(8));
      break;
    case "Bomb":
      name$ = "Bomb" + $.S($.rnd().nextInt$1(4));
      break;
  }
  this._playAudioCore$1(name$);
},
 get$_playAudio: function() {
  return new $.BoundClosure(this, '_playAudio$1');
},
 _playAudioCore$1: function(name$) {
  var source, t1;
  if (!(this.get$_audioContext() == null)) {
    source = this.get$_audioContext().createBufferSource$0();
    t1 = this._buffers;
    source.set$buffer($.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, name$));
    source.connect$3(this.get$_audioContext().get$destination(), 0, 0);
    source.start$1(0);
  }
},
 _Audio$_internal$1: function(_audioLoader) {
  var t1, t2;
  t1 = this._audioLoader;
  t2 = t1.get$progress();
  $.getInterceptor$JSArray(t2).add$1(t2, $._onProgress);
  t2 = t1.get$loaded();
  $.getInterceptor$JSArray(t2).add$1(t2, $._onLoaded);
  t2 = t1.get$loaded();
  $.getInterceptor$JSArray(t2).add$1(t2, this.get$_onLoad());
  t2 = $.GameAudio_audioEvent();
  $.getInterceptor$JSArray(t2).add$1(t2, this.get$_playAudio());
  t1.load$0();
}
};

$$.BodyElementEvents = {'': function BodyElementEvents(_ptr) {
  this._ptr = _ptr;
},
 'super': 'ElementEvents',
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
},
 get$popState: function() {
  return this.operator$index$1("popstate");
},
 get$resize: function() {
  return this.operator$index$1("resize");
}
};

$$.DocumentEvents = {'': function DocumentEvents(_ptr) {
  this._ptr = _ptr;
},
 'super': 'ElementEvents'
};

$$.ElementEvents = {'': function ElementEvents(_ptr) {
  this._ptr = _ptr;
},
 'super': 'Events',
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$click: function() {
  return this.operator$index$1("click");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
},
 get$mouseDown: function() {
  return this.operator$index$1("mousedown");
},
 get$mouseMove: function() {
  return this.operator$index$1("mousemove");
},
 get$mouseOut: function() {
  return this.operator$index$1("mouseout");
},
 get$mouseUp: function() {
  return this.operator$index$1("mouseup");
},
 get$touchMove: function() {
  return this.operator$index$1("touchmove");
}
};

$$.Events = {'': function Events(_ptr) {
  this._ptr = _ptr;
},
 'super': 'Object',
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {'': function EventListenerList(_ptr, _type) {
  this._ptr = _ptr;
  this._type = _type;
},
 'super': 'Object',
 add$2: function(listener, useCapture) {
  this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener, false);
},
 remove$2: function(listener, useCapture) {
  this._ptr.$$dom_removeEventListener$3(this._type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener, false);
}
};

$$.FrameSetElementEvents = {'': function FrameSetElementEvents(_ptr) {
  this._ptr = _ptr;
},
 'super': 'ElementEvents',
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
},
 get$popState: function() {
  return this.operator$index$1("popstate");
},
 get$resize: function() {
  return this.operator$index$1("resize");
}
};

$$.HttpRequestEvents = {'': function HttpRequestEvents(_ptr) {
  this._ptr = _ptr;
},
 'super': 'Events',
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
},
 get$loadEnd: function() {
  return this.operator$index$1("loadend");
},
 get$progress: function() {
  return this.operator$index$1("progress");
}
};

$$.HttpRequestUploadEvents = {'': function HttpRequestUploadEvents(_ptr) {
  this._ptr = _ptr;
},
 'super': 'Events',
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
},
 get$loadEnd: function() {
  return this.operator$index$1("loadend");
},
 get$progress: function() {
  return this.operator$index$1("progress");
}
};

$$.InputElementEvents = {'': function InputElementEvents(_ptr) {
  this._ptr = _ptr;
},
 'super': 'ElementEvents'
};

$$.LocalWindowEvents = {'': function LocalWindowEvents(_ptr) {
  this._ptr = _ptr;
},
 'super': 'Events',
 get$abort: function() {
  return this.operator$index$1("abort");
},
 get$click: function() {
  return this.operator$index$1("click");
},
 get$error: function() {
  return this.operator$index$1("error");
},
 get$keyDown: function() {
  return this.operator$index$1("keydown");
},
 get$load: function() {
  return this.operator$index$1("load");
},
 load$0: function() {
  return this.get$load().call$0();
},
 get$mouseDown: function() {
  return this.operator$index$1("mousedown");
},
 get$mouseMove: function() {
  return this.operator$index$1("mousemove");
},
 get$mouseOut: function() {
  return this.operator$index$1("mouseout");
},
 get$mouseUp: function() {
  return this.operator$index$1("mouseup");
},
 get$popState: function() {
  return this.operator$index$1("popstate");
},
 get$progress: function() {
  return this.operator$index$1("progress");
},
 get$resize: function() {
  return this.operator$index$1("resize");
},
 get$touchMove: function() {
  return this.operator$index$1("touchmove");
}
};

$$.MediaElementEvents = {'': function MediaElementEvents(_ptr) {
  this._ptr = _ptr;
},
 'super': 'ElementEvents',
 get$progress: function() {
  return this.operator$index$1("progress");
}
};

$$._DOMWindowCrossFrame = {'': function _DOMWindowCrossFrame(_window) {
  this._window = _window;
},
 'super': 'Object',
 get$history: function() {
  return $._HistoryCrossFrame__createSafe(this._window.history);
},
 get$location: function() {
  return $._LocationCrossFrame__createSafe(this._window.location);
},
 get$parent: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.parent);
},
 get$top: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.top);
}
};

$$._LocationCrossFrame = {'': function _LocationCrossFrame(_location) {
  this._location = _location;
},
 'super': 'Object',
 get$_location: function() { return this._location; },
 is$Location: function() { return true; }
};

$$._HistoryCrossFrame = {'': function _HistoryCrossFrame(_history) {
  this._history = _history;
},
 'super': 'Object'
};

$$._LocationWrapper = {'': function _LocationWrapper(_ptr) {
  this._ptr = _ptr;
},
 'super': 'Object',
 get$hash: function() {
  return $._LocationWrapper__get(this._ptr, "hash");
},
 get$href: function() {
  return $._LocationWrapper__get(this._ptr, "href");
},
 assign$1: function(url) {
  return this._ptr.assign(url);
},
 replace$1: function(url) {
  return this._ptr.replace(url);
},
 toString$0: function() {
  return this._ptr.toString();
},
 is$Location: function() { return true; }
};

$$.FixedSizeListIterator = {'': function FixedSizeListIterator(_liblib$_length, _array, _pos) {
  this._liblib$_length = _liblib$_length;
  this._array = _array;
  this._pos = _pos;
},
 'super': '_VariableSizeListIterator',
 get$hasNext: function() {
  return $.gt(this._liblib$_length, this._pos);
}
};

$$._VariableSizeListIterator = {'': function _VariableSizeListIterator() {
},
 'super': 'Object',
 get$hasNext: function() {
  var t1 = this._array;
  return $.gt($.getInterceptor$JSStringJSArray(t1).get$length(t1), this._pos);
},
 next$0: function() {
  var t1, t3, t4;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  t4 = this._pos;
  if (typeof t4 !== 'number')
    return this.next$0$bailout(2, t4, t3, t1);
  this._pos = t4 + 1;
  if (t4 !== (t4 | 0))
    throw $.iae(t4);
  if (t4 < 0 || t4 >= t1.length)
    throw $.ioore(t4);
  return t1[t4];
},
 next$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      t4 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$hasNext() !== true)
        throw $.$$throw($.StateError$("No more elements"));
      t1 = this._array;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      t4 = this._pos;
    case 2:
      var t1, t3, t4;
      state0 = 0;
      this._pos = $.add(t4, 1);
      return t3.operator$index$1(t1, t4);
  }
}
};

$$._Random = {'': function _Random() {
},
 'super': 'Object',
 nextInt$1: function(max) {
  if (max < 0)
    throw $.$$throw($.ArgumentError$("negative max: " + $.S(max)));
  if (max > 4294967295)
    max = 4294967295;
  return (Math.random() * max) >>> 0;
}
};

$$.AudioContextEvents = {'': function AudioContextEvents(_ptr) {
  this._ptr = _ptr;
},
 'super': 'Events'
};

$$.Tuple = {'': function Tuple(item1, item2) {
  this.item1 = item1;
  this.item2 = item2;
},
 'super': 'Object',
 get$item1: function() { return this.item1; },
 get$item2: function() { return this.item2; },
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.item1, other.get$item1()) && $.eqB(this.item2, other.get$item2());
},
 toString$0: function() {
  return "{item1: " + $.S(this.item1) + ", item2: " + $.S(this.item2) + "}";
},
 get$hashCode: function() {
  return $.Util_getHashCode([this.item1, this.item2]);
}
};

$$.Attachable = {'': function Attachable() {
},
 'super': 'Object'
};

$$.AttachableObject = {'': function AttachableObject() {
},
 'super': 'DisposableImpl',
 _addHandler$2: function(property, watcher) {
  var handle;
  this.validateNotDisposed$0();
  handle = this._eventHandlers.putIfAbsent$2(property, new $.AttachableObject__addHandler_anon());
  return $.getInterceptor$JSArray(handle).add$1(handle, watcher);
},
 _fireEvent$2: function(attachable, args) {
  var t1, handle;
  this.validateNotDisposed$0();
  t1 = this._eventHandlers;
  handle = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, attachable);
  if (!(handle == null))
    handle.fireEvent$1(args);
},
 _set$2: function(key, value) {
  this.validateNotDisposed$0();
  $.indexSet(this._propertyValues, key, value);
  this._fireChange$1(key);
},
 get$_set: function() {
  return new $.BoundClosure1(this, '_set$2');
},
 _isSet$1: function(key) {
  this.validateNotDisposed$0();
  return this._propertyValues.containsKey$1(key);
},
 _remove$1: function(key) {
  this.validateNotDisposed$0();
  if (this._isSet$1(key) === true) {
    this._propertyValues.remove$1(key);
    this._fireChange$1(key);
  }
},
 _getValueOrUndefined$3: function(key, obj, ifAbsent) {
  var t1, value;
  this.validateNotDisposed$0();
  if (this._isSet$1(key) === true) {
    t1 = this._propertyValues;
    return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key);
  } else if (!(ifAbsent == null)) {
    value = ifAbsent.call$1(obj);
    this._set$2(key, value);
    return value;
  } else
    return $.CONSTANT8;
},
 _fireChange$1: function(key) {
  var t1, handle;
  this.validateNotDisposed$0();
  t1 = this._eventHandlers;
  handle = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key);
  if (!(handle == null))
    handle.fireEvent$1(key);
}
};

$$.AttachedEvent = {'': function AttachedEvent(name) {
  this.name = name;
},
 'super': 'Attachable',
 addHandler$2: function(obj, handler) {
  return obj._addHandler$2(this, handler);
},
 fireEvent$2: function(obj, args) {
  return obj._fireEvent$2(this, args);
}
};

$$.Property = {'': function Property(defaultValue, name) {
  this.defaultValue = defaultValue;
  this.name = name;
},
 'super': 'Attachable',
 get$2: function(obj, ifAbsent) {
  var coreValue = this.getCore$2(obj, ifAbsent);
  if (!(coreValue === $.CONSTANT8))
    return coreValue;
  else
    return this.defaultValue;
},
 get$1: function(obj) {
  return this.get$2(obj, null);
},
 getCore$2: function(obj, ifAbsent) {
  return obj._getValueOrUndefined$3(this, obj, ifAbsent);
},
 set$2: function(obj, value) {
  obj._set$2(this, value);
},
 clear$1: function(obj) {
  return obj._remove$1(this);
},
 addHandler$2: function(obj, handler) {
  return obj._addHandler$2(this, handler);
},
 toString$0: function() {
  return "Property '" + $.S(this.name) + "'";
}
};

$$._UndefinedValue = {'': function _UndefinedValue() {
},
 'super': 'Object'
};

$$.Array2d = {'': function Array2d(width, height, _source) {
  this.width = width;
  this.height = height;
  this._source = _source;
},
 'super': 'ListBase',
 get$width: function() { return this.width; },
 get$height: function() { return this.height; },
 get$length: function() {
  var t1 = this._source;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  var t1 = this._source;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout2(1, t1, index);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout2: function(state0, t1, index) {
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
},
 operator$indexSet$2: function(index, value) {
  $.indexSet(this._source, index, value);
},
 get$2: function(x, y) {
  return this.operator$index$1(this._getIndex$2(x, y));
},
 set$3: function(x, y, value) {
  this.operator$indexSet$2(this._getIndex$2(x, y), value);
},
 getAdjacentIndices$2: function(x, y) {
  var adj, k, t1, t2, t3, j, t4;
  if (typeof x !== 'number')
    return this.getAdjacentIndices$2$bailout(1, x, y);
  if (typeof y !== 'number')
    return this.getAdjacentIndices$2$bailout(1, x, y);
  adj = $.List_List(null);
  for (k = $.max(0, y - 1), t1 = this.width, t2 = x + 2, t3 = x - 1; k < $.min(this.height, y + 2); ++k)
    for (j = $.max(0, t3), t4 = !(k === y); j < $.min(t1, t2); ++j)
      if (!(j === x) || t4)
        adj.push(this._getIndex$2(j, k));
  return adj;
},
 getAdjacentIndices$2$bailout: function(state0, x, y) {
  var adj, k, t1, j, t2;
  adj = $.List_List(null);
  for (k = $.max(0, $.sub(y, 1)), t1 = this.width; k < $.min(this.height, $.add(y, 2)); ++k)
    for (j = $.max(0, $.sub(x, 1)), t2 = !(k === y); j < $.min(t1, $.add(x, 2)); ++j)
      if (!(j === x) || t2)
        adj.push(this._getIndex$2(j, k));
  return adj;
},
 getCoordinate$1: function(index) {
  var t1;
  if (typeof index !== 'number')
    return this.getCoordinate$1$bailout(1, index);
  t1 = this.width;
  if (typeof t1 !== 'number')
    return this.getCoordinate$1$bailout(2, index, t1);
  return $.Tuple$($.mod(index, t1), $.tdiv(index, t1));
},
 getCoordinate$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      index = env0;
      break;
    case 2:
      t1 = env1;
      index = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = this.width;
    case 2:
      var index, t1;
      state0 = 0;
      return $.Tuple$($.mod(index, t1), $.tdiv(index, t1));
  }
},
 _getIndex$2: function(x, y) {
  return $.add(x, $.mul(y, this.width));
},
 Array2d$wrap$2: function(width, source) {
  var t1, t2;
  $.requireArgumentNotNull(width, "width");
  $.requireArgumentNotNull(source, "source");
  $.requireArgument($.ge(width, 0), "width", "width must be non-zero");
  t1 = $.eqB(width, 0);
  t2 = this._source;
  if (t1)
    $.requireArgument($.eq($.getInterceptor$JSStringJSArray(t2).get$length(t2), 0), "width", "width must be greater than zero if the source is non-empty");
  else {
    t1 = $.getInterceptor$JSStringJSArray(t2);
    $.requireArgument($.gt(t1.get$length(t2), 0), "source", "if width is non-zero, source must be non-empty");
    $.requireArgument($.eq($.mod(t1.get$length(t2), width), 0), "width", "width must evenly divide the source");
  }
}
};

$$.Enumerable = {'': function Enumerable() {
},
 'super': 'Object',
 every$1: function(f) {
  var t1;
  $.requireArgumentNotNull(f, "f");
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
},
 contains$1: function(item) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), item))
      return true;
  return false;
},
 get$isEmpty: function() {
  return this.some$1(new $.Enumerable_isEmpty_anon()) !== true;
},
 some$1: function(f) {
  var t1;
  $.requireArgumentNotNull(f, "f");
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
},
 join$1: function(separator) {
  var sb, t1, t2, t3;
  sb = $.StringBuffer_StringBuffer("");
  for (t1 = this.iterator$0(), t2 = $.getInterceptor$JSStringJSArray(sb); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    if ($.gtB(t2.get$length(sb), 0))
      t2.add$1(sb, separator);
    t2.add$1(sb, t3);
  }
  return $.getInterceptor(sb).toString$0(sb);
},
 join$0: function() {
  return this.join$1(", ");
},
 map$1: function(f) {
  $.requireArgumentNotNull(f, "f");
  return $._FuncEnumerable$(this, new $.Enumerable_map_anon(f));
},
 filter$1: function(f) {
  $.requireArgumentNotNull(f, "f");
  return $._FuncEnumerable$(this, new $.Enumerable_filter_anon(f));
},
 firstOrDefault$2: function(f, defaultValue) {
  var iter;
  if (f == null)
    f = new $.Enumerable_firstOrDefault_anon();
  iter = $._WhereIterator$(this.iterator$0(), f);
  if (iter.get$hasNext() !== true)
    return defaultValue;
  return iter.next$0();
},
 firstOrDefault$1: function(f) {
  return this.firstOrDefault$2(f, null);
},
 single$1: function(f) {
  var iter, value;
  if (f == null)
    f = new $.Enumerable_single_anon();
  iter = $._WhereIterator$(this.iterator$0(), f);
  if (iter.get$hasNext() !== true)
    throw $.$$throw($.CONSTANT10);
  value = iter.next$0();
  if (iter.get$hasNext() === true)
    throw $.$$throw($.CONSTANT11);
  return value;
},
 toReadOnlyCollection$0: function() {
  return $.ReadOnlyCollection$(this);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 toList$0: function() {
  return $.List_List$from(this);
},
 selectNumbers$1: function(f) {
  $.requireArgumentNotNull(f, "f");
  return $._FuncNumEnumerable$(this, new $.Enumerable_selectNumbers_anon(f));
},
 toString$0: function() {
  return "[" + $.S(this.join$0()) + "]";
},
 is$Enumerable: true
};

$$._SimpleEnumerable = {'': function _SimpleEnumerable(_source) {
  this._source = _source;
},
 'super': 'Enumerable',
 iterator$0: function() {
  var t1 = this._source;
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
}
};

$$._FuncEnumerable = {'': function _FuncEnumerable(_source, _func) {
  this._source = _source;
  this._func = _func;
},
 'super': 'Enumerable',
 _func$1: function(arg0) {
  return this._func.call$1(arg0);
},
 iterator$0: function() {
  return this._func$1(this._source.iterator$0());
}
};

$$._SelectIterator = {'': function _SelectIterator(_source, _func) {
  this._source = _source;
  this._func = _func;
},
 'super': 'Object',
 _func$1: function(arg0) {
  return this._func.call$1(arg0);
},
 get$hasNext: function() {
  return this._source.get$hasNext();
},
 next$0: function() {
  return this._func$1(this._source.next$0());
}
};

$$._WhereIterator = {'': function _WhereIterator(_source, _func, _liblib1$_next, _current) {
  this._source = _source;
  this._func = _func;
  this._liblib1$_next = _liblib1$_next;
  this._current = _current;
},
 'super': 'Object',
 get$_liblib1$_next: function() { return this._liblib1$_next; },
 set$_liblib1$_next: function(v) { this._liblib1$_next = v; },
 _func$1: function(arg0) {
  return this._func.call$1(arg0);
},
 get$hasNext: function() {
  if (this._liblib1$_next == null) {
    this._liblib1$_next = false;
    for (var t1 = this._source; t1.get$hasNext() === true;) {
      this._current = t1.next$0();
      if (this._func$1(this._current) === true) {
        this._liblib1$_next = true;
        break;
      }
    }
  }
  return this._liblib1$_next;
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._liblib1$_next = null;
  return this._current;
}
};

$$.IndexIterator = {'': function IndexIterator(_indexer, _liblib1$_length, _liblib1$_pos) {
  this._indexer = _indexer;
  this._liblib1$_length = _liblib1$_length;
  this._liblib1$_pos = _liblib1$_pos;
},
 'super': 'Object',
 get$hasNext: function() {
  return $.gt(this._liblib1$_length, this._liblib1$_pos);
},
 next$0: function() {
  var t1;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._liblib1$_pos;
  if (typeof t1 !== 'number')
    return this.next$0$bailout2(1, t1);
  this._liblib1$_pos = t1 + 1;
  return this._indexer$1(t1);
},
 next$0$bailout2: function(state0, t1) {
  this._liblib1$_pos = $.add(t1, 1);
  return this._indexer$1(t1);
},
 _indexer$1: function(arg0) {
  return this._indexer.call$1(arg0);
},
 IndexIterator$2: function(length$, indexer) {
  $.requireArgumentNotNull(this._indexer, "_indexer");
}
};

$$.ListBase = {'': function ListBase() {
},
 'super': 'Enumerable',
 iterator$0: function() {
  return $.IndexIterator$(this.get$length(), new $.ListBase_iterator_anon(this));
},
 forEach$1: function(f) {
  var i;
  for (i = 0; $.ltB(i, this.get$length()); ++i)
    f.call$1(this.operator$index$1(i));
},
 every$1: function(f) {
  var i;
  for (i = 0; $.ltB(i, this.get$length()); ++i)
    if (f.call$1(this.operator$index$1(i)) !== true)
      return false;
  return true;
},
 some$1: function(f) {
  var i;
  for (i = 0; $.ltB(i, this.get$length()); ++i)
    if (f.call$1(this.operator$index$1(i)) === true)
      return true;
  return false;
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 indexOf$2: function(element, start) {
  var i, t1;
  if (typeof start !== 'number')
    return this.indexOf$2$bailout(1, element, start);
  i = start;
  while (true) {
    t1 = this.get$length();
    if (typeof t1 !== 'number')
      return this.indexOf$2$bailout(2, element, t1, i);
    if (!(i < t1))
      break;
    if ($.eqB(this.operator$index$1(i), element))
      return i;
    ++i;
  }
  return -1;
},
 indexOf$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      start = env1;
      element = env0;
      break;
    case 2:
      i = env2;
      t1 = env1;
      element = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      i = start;
    case 2:
      var start, element, i, t1;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t1 = this.get$length();
            case 2:
              state0 = 0;
              if (!$.ltB(i, t1))
                break L0;
              if ($.eqB(this.operator$index$1(i), element))
                return i;
              i = $.add(i, 1);
          }
      return -1;
  }
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 is$Collection: function() { return true; }
};

$$.NumberEnumerable = {'': function NumberEnumerable() {
},
 'super': 'Enumerable',
 sum$0: function() {
  var t1, theSum, t2;
  for (t1 = this.iterator$0(), theSum = 0; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null)
      throw $.$$throw($.CONSTANT30);
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    theSum += t2;
  }
  return theSum;
}
};

$$._FuncNumEnumerable = {'': function _FuncNumEnumerable(_source, _func) {
  this._source = _source;
  this._func = _func;
},
 'super': 'NumberEnumerable',
 _func$1: function(arg0) {
  return this._func.call$1(arg0);
},
 iterator$0: function() {
  return this._func$1(this._source.iterator$0());
}
};

$$._RangeEnumerable = {'': function _RangeEnumerable(_start, _count) {
  this._start = _start;
  this._count = _count;
},
 'super': 'NumberEnumerable',
 iterator$0: function() {
  return $._RangeIterator$(this._start, this._count);
}
};

$$._RangeIterator = {'': function _RangeIterator(_start, _count, _current) {
  this._start = _start;
  this._count = _count;
  this._current = _current;
},
 'super': 'Object',
 get$hasNext: function() {
  return $.lt(this._current, this._count);
},
 next$0: function() {
  var t1, t3, val;
  t1 = this._start;
  if (typeof t1 !== 'number')
    return this.next$0$bailout3(1, t1);
  t3 = this._current;
  if (typeof t3 !== 'number')
    return this.next$0$bailout3(2, t1, t3);
  val = t1 + t3;
  this._current = t3 + 1;
  return val;
},
 next$0$bailout3: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
    case 3:
      val = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._start;
    case 1:
      state0 = 0;
      t3 = this._current;
    case 2:
      state0 = 0;
      val = $.add(t1, t3);
      t3 = this._current;
    case 3:
      var t1, t3, val;
      state0 = 0;
      this._current = $.add(t3, 1);
      return val;
  }
}
};

$$.ReadOnlyCollection = {'': function ReadOnlyCollection(_items) {
  this._items = _items;
},
 'super': 'ListBase',
 get$length: function() {
  return this._items.length;
},
 operator$index$1: function(index) {
  var t1 = this._items;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
}
};

$$.DisposedError = {'': function DisposedError(message) {
  this.message = message;
},
 'super': 'Object',
 get$message: function() { return this.message; }
};

$$.DisposableImpl = {'': function DisposableImpl() {
},
 'super': 'Object',
 validateNotDisposed$0: function() {
  if (this._disposed)
    throw $.$$throw($.CONSTANT9);
}
};

$$.EventArgs = {'': function EventArgs() {
},
 'super': 'Object'
};

$$.EventHandle = {'': function EventHandle(_handlers, _disposed) {
  this._handlers = _handlers;
  this._disposed = _disposed;
},
 'super': 'DisposableImpl',
 fireEvent$1: function(args) {
  var t1 = this._handlers;
  if (!(t1 == null))
    $.getInterceptor$JSArray(t1).forEach$1(t1, new $.EventHandle_fireEvent_anon(args));
},
 add$1: function(handler) {
  var id, t1;
  id = $.GlobalId_GlobalId();
  if (this._handlers == null)
    this._handlers = $.HashMap_HashMap();
  t1 = this._handlers;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.add$1$bailout0(1, handler, t1, id);
  if (id !== (id | 0))
    throw $.iae(id);
  if (id < 0 || id >= t1.length)
    throw $.ioore(id);
  t1[id] = handler;
  return id;
},
 add$1$bailout0: function(state0, handler, t1, id) {
  $.indexSet(t1, id, handler);
  return id;
},
 remove$1: function(id) {
  var t1 = this._handlers;
  if (!(t1 == null))
    return !(t1.remove$1(id) == null);
  else
    return false;
}
};

$$.DetailedArgumentError = {'': function DetailedArgumentError(argument, details) {
  this.argument = argument;
  this.details = details;
},
 'super': 'Object',
 get$message: function() {
  return "Illegal argument: \"" + $.S(this.argument) + "\" -- " + $.S(this.details);
},
 toString$0: function() {
  return this.get$message();
},
 DetailedArgumentError$2: function(argument, details) {
  $.requireArgumentNotNullOrEmpty(this.argument, "argument");
  $.requireArgumentNotNullOrEmpty(this.details, "details");
}
};

$$.InvalidOperationError = {'': function InvalidOperationError(message) {
  this.message = message;
},
 'super': 'Object'
};

$$.NullArgumentError = {'': function NullArgumentError(argument, details) {
  this.argument = argument;
  this.details = details;
},
 'super': 'DetailedArgumentError'
};

$$.GlobalId = {'': function GlobalId(id, _hashCode) {
  this.id = id;
  this._hashCode = _hashCode;
},
 'super': 'Object',
 get$id: function() { return this.id; },
 compareTo$1: function(other) {
  var t1 = this.id;
  return $.getInterceptor$JSStringJSNumber(t1).compareTo$1(t1, other.get$id());
},
 get$hashCode: function() {
  return this._hashCode;
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$id(), this.id);
}
};

$$.AffineTransform = {'': function AffineTransform(_m00, _m10, _m01, _m11, _m02, _m12) {
  this._m00 = _m00;
  this._m10 = _m10;
  this._m01 = _m01;
  this._m11 = _m11;
  this._m02 = _m02;
  this._m12 = _m12;
},
 'super': 'Object',
 get$_m00: function() { return this._m00; },
 get$_m10: function() { return this._m10; },
 get$_m01: function() { return this._m01; },
 get$_m11: function() { return this._m11; },
 get$_m02: function() { return this._m02; },
 get$_m12: function() { return this._m12; },
 get$scaleX: function() {
  return this._m00;
},
 get$scaleY: function() {
  return this._m11;
},
 get$translateX: function() {
  return this._m02;
},
 get$translateY: function() {
  return this._m12;
},
 get$shearX: function() {
  return this._m01;
},
 get$shearY: function() {
  return this._m10;
},
 get$determinant: function() {
  return $.sub($.mul(this._m00, this._m11), $.mul(this._m01, this._m10));
},
 scale$2: function(sx, sy) {
  this._m00 = $.mul(this._m00, sx);
  this._m10 = $.mul(this._m10, sx);
  this._m01 = $.mul(this._m01, sy);
  this._m11 = $.mul(this._m11, sy);
  return this;
},
 concatenate$1: function(tx) {
  var m0, m1, m00, m10;
  m0 = this._m00;
  m1 = this._m01;
  this._m00 = $.add($.mul(tx.get$_m00(), m0), $.mul(tx.get$_m10(), m1));
  this._m01 = $.add($.mul(tx.get$_m01(), m0), $.mul(tx.get$_m11(), m1));
  this._m02 = $.add(this._m02, $.add($.mul(tx.get$_m02(), m0), $.mul(tx.get$_m12(), m1)));
  m00 = this._m10;
  m10 = this._m11;
  this._m10 = $.add($.mul(tx.get$_m00(), m00), $.mul(tx.get$_m10(), m10));
  this._m11 = $.add($.mul(tx.get$_m01(), m00), $.mul(tx.get$_m11(), m10));
  this._m12 = $.add(this._m12, $.add($.mul(tx.get$_m02(), m00), $.mul(tx.get$_m12(), m10)));
  return this;
},
 get$concatenate: function() {
  return new $.BoundClosure(this, 'concatenate$1');
},
 rotate$3: function(theta, x, y) {
  return this.concatenate$1($.AffineTransform_AffineTransform$fromRotate(theta, x, y));
},
 translate$2: function(dx, dy) {
  this._m02 = $.add(this._m02, $.add($.mul(dx, this._m00), $.mul(dy, this._m01)));
  this._m12 = $.add(this._m12, $.add($.mul(dx, this._m10), $.mul(dy, this._m11)));
  return this;
},
 setToScale$2: function(sx, sy) {
  return this.setTransform$6(sx, 0, 0, sy, 0, 0);
},
 setToRotation$3: function(theta, x, y) {
  var cos, sin;
  cos = $.cos(theta);
  sin = $.sin(theta);
  return this.setTransform$6(cos, sin, -sin, cos, x - x * cos + y * sin, y - x * sin - y * cos);
},
 setToTranslation$2: function(dx, dy) {
  return this.setTransform$6(1, 0, 0, 1, dx, dy);
},
 setTransform$6: function(m00, m10, m01, m11, m02, m12) {
  this._m00 = m00;
  this._m10 = m10;
  this._m01 = m01;
  this._m11 = m11;
  this._m02 = m02;
  this._m12 = m12;
  return this;
},
 transformCoordinate$1: function(point) {
  return $.Coordinate$($.add($.add($.mul(point.get$x(), this._m00), $.mul(point.get$y(), this._m01)), this._m02), $.add($.add($.mul(point.get$x(), this._m10), $.mul(point.get$y(), this._m11)), this._m12));
},
 createInverse$0: function() {
  var det = this.get$determinant();
  return $.AffineTransform$($.div(this._m11, det), $.div($.neg(this._m10), det), $.div($.neg(this._m01), det), $.div(this._m00, det), $.div($.sub($.mul(this._m01, this._m12), $.mul(this._m11, this._m02)), det), $.div($.sub($.mul(this._m10, this._m02), $.mul(this._m00, this._m12)), det));
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this._m00, other.get$_m00()) && $.eqB(this._m01, other.get$_m01()) && $.eqB(this._m02, other.get$_m02()) && $.eqB(this._m10, other.get$_m10()) && $.eqB(this._m11, other.get$_m11()) && $.eqB(this._m12, other.get$_m12());
},
 toString$0: function() {
  var t1 = $.$$([this.get$scaleX(), this.get$shearY(), this.get$shearX(), this.get$scaleY(), this.get$translateX(), this.get$translateY()]);
  return $.Strings_join($.getInterceptor$JSArray(t1).map$1(t1, new $.AffineTransform_toString_anon()).toList$0(), ", ");
}
};

$$.Coordinate = {'': function Coordinate(x, y) {
  this.x = x;
  this.y = y;
},
 'super': 'Object',
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 get$isValid: function() {
  return $.isValidNumber(this.x) && $.isValidNumber(this.y);
},
 operator$sub$1: function(other) {
  return $.Vector$($.sub(this.x, other.get$x()), $.sub(this.y, other.get$y()));
},
 operator$add$1: function(other) {
  return $.Coordinate$($.add(this.x, other.get$x()), $.add(this.y, other.get$y()));
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.x, other.get$x()) && $.eqB(this.y, other.get$y());
},
 toString$0: function() {
  return "{x:" + $.S(this.x) + ", y:" + $.S(this.y) + "}";
}
};

$$.Box = {'': function Box(left, top, width, height) {
  this.left = left;
  this.top = top;
  this.width = width;
  this.height = height;
},
 'super': 'Object',
 get$left: function() { return this.left; },
 get$top: function() { return this.top; },
 get$width: function() { return this.width; },
 get$height: function() { return this.height; },
 get$topLeft: function() {
  return $.Coordinate$(this.left, this.top);
},
 get$size: function() {
  return $.Size$(this.width, this.height);
},
 get$isValid: function() {
  return this.get$topLeft().get$isValid() === true && this.get$size().get$isValid() === true;
},
 contains$1: function(point) {
  var t1, t2;
  t1 = point.get$x();
  t2 = this.left;
  if ($.geB(t1, t2))
    if ($.leB(point.get$x(), $.add(t2, this.width))) {
      t1 = point.get$y();
      t2 = this.top;
      t1 = $.geB(t1, t2) && $.leB(point.get$y(), $.add(t2, this.height));
    } else
      t1 = false;
  else
    t1 = false;
  return t1;
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$left(), this.left) && $.eqB(other.get$top(), this.top) && $.eqB(other.get$width(), this.width) && $.eqB(other.get$height(), this.height);
},
 toString$0: function() {
  return "Location: " + $.S(this.get$topLeft()) + ", Size: " + $.S(this.get$size());
},
 get$hashCode: function() {
  return $.Util_getHashCode([this.left, this.top, this.width, this.height]);
}
};

$$.Size = {'': function Size(width, height) {
  this.width = width;
  this.height = height;
},
 'super': 'Object',
 get$width: function() { return this.width; },
 get$height: function() { return this.height; },
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.width, other.get$width()) && $.eqB(this.height, other.get$height());
},
 get$area: function() {
  return $.mul(this.width, this.height);
},
 isEmpty$0: function() {
  return $.eq(this.get$area(), 0);
},
 get$isEmpty: function() {
  return new $.BoundClosure0(this, 'isEmpty$0');
},
 get$isValid: function() {
  var t1, t2;
  t1 = this.width;
  if ($.isValidNumber(t1)) {
    t2 = this.height;
    t1 = $.isValidNumber(t2) && $.geB(t1, 0) && $.geB(t2, 0);
  } else
    t1 = false;
  return t1;
},
 scale$1: function(magnitude) {
  return $.Size$($.mul(this.width, magnitude), $.mul(this.height, magnitude));
},
 operator$mul$1: function(magnitude) {
  return this.scale$1(magnitude);
},
 toString$0: function() {
  return "(" + $.S(this.width) + " x " + $.S(this.height) + ")";
}
};

$$.Vector = {'': function Vector(x, y) {
  this.x = x;
  this.y = y;
},
 'super': 'Coordinate',
 get$length: function() {
  var t1, t2;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  return $.sqrt($.add(t1, $.mul(t2, t2)));
},
 operator$add$1: function(other) {
  return $.Vector$($.add(this.x, other.get$x()), $.add(this.y, other.get$y()));
},
 operator$mul$1: function(magnitude) {
  return this.scale$1(magnitude);
},
 scale$1: function(magnitude) {
  return $.Vector$($.mul(this.x, magnitude), $.mul(this.y, magnitude));
}
};

$$._ResourceEntry = {'': function _ResourceEntry(url, _resource, _blobUrl, _total, _completed) {
  this.url = url;
  this._resource = _resource;
  this._blobUrl = _blobUrl;
  this._total = _total;
  this._completed = _completed;
},
 'super': 'Object',
 get$url: function() { return this.url; },
 get$totalBytes: function() {
  return this._total;
},
 get$completedBytes: function() {
  return this._completed;
},
 setResource$1: function(resource) {
  this._resource = resource;
},
 updateProgress$2: function(completed, total) {
  var changed;
  if (!$.eqB(this._completed, completed)) {
    this._completed = completed;
    changed = true;
  } else
    changed = false;
  if (!$.eqB(this._total, total)) {
    this._total = total;
    changed = true;
  }
  return changed;
},
 get$completed: function() {
  return !(this._resource == null);
},
 get$resource: function() {
  return this._resource;
},
 matchesBlobUrl$1: function(blobUrl) {
  return $.eq(blobUrl, this._blobUrl);
},
 getBlobUrl$1: function(blob) {
  this._blobUrl = $.Url_createObjectUrl(blob);
  if (this._blobUrl == null)
    this._blobUrl = this.url;
  return this._blobUrl;
},
 revokeBlobUrl$0: function() {
  $.Url_revokeObjectUrl(this._blobUrl);
}
};

$$.AudioLoader = {'': function AudioLoader(context, _entries, _loadedEvent, _progressEvent, _liblib5$_state) {
  this.context = context;
  this._entries = _entries;
  this._loadedEvent = _loadedEvent;
  this._progressEvent = _progressEvent;
  this._liblib5$_state = _liblib5$_state;
},
 'super': 'ResourceLoader',
 get$context: function() { return this.context; },
 _doLoad$1: function(blobUrl) {
  var arrayBufferRequest, t1;
  arrayBufferRequest = $.HttpRequest_HttpRequest();
  arrayBufferRequest.open$3("GET", blobUrl, true);
  arrayBufferRequest.set$responseType("arraybuffer");
  t1 = arrayBufferRequest.get$on().get$load();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.AudioLoader__doLoad_anon(blobUrl, arrayBufferRequest, this));
  t1 = arrayBufferRequest.get$on().get$error();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.AudioLoader__doLoad_anon0(blobUrl, this));
  arrayBufferRequest.send$0();
},
 _onAudioLoadError$3: function(blobUrl, description, error) {
  $.print(["Error!", description, error]);
  this._loadResourceFailed$1(blobUrl);
},
 _saveBuffer$2: function(blobUrl, buffer) {
  if (buffer == null)
    this._onAudioLoadError$3(blobUrl, "null buffer", "");
  this._loadResourceSucceed$2(blobUrl, buffer);
}
};

$$.ImageLoader = {'': function ImageLoader(_entries, _loadedEvent, _progressEvent, _liblib5$_state) {
  this._entries = _entries;
  this._loadedEvent = _loadedEvent;
  this._progressEvent = _progressEvent;
  this._liblib5$_state = _liblib5$_state;
},
 'super': 'ResourceLoader',
 _doLoad$1: function(blobUrl) {
  var img, t1;
  img = $.ImageElement_ImageElement(null, blobUrl, null);
  t1 = img.get$on().get$load();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.ImageLoader__doLoad_anon(blobUrl, img, this));
}
};

$$.ResourceLoader = {'': function ResourceLoader() {
},
 'super': 'Object',
 get$state: function() {
  return this._liblib5$_state;
},
 get$loaded: function() {
  return this._loadedEvent;
},
 get$progress: function() {
  return this._progressEvent;
},
 getResource$1: function(url) {
  return this._getByUrl$1(url).get$resource();
},
 get$completedBytes: function() {
  return this._entries.selectNumbers$1(new $.ResourceLoader_completedBytes_anon()).sum$0();
},
 get$totalBytes: function() {
  return this._entries.selectNumbers$1(new $.ResourceLoader_totalBytes_anon()).sum$0();
},
 load$0: function() {
  this._liblib5$_state = "loading";
  for (var t1 = this._entries, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    this._httpLoad$1(t1.next$0().get$url());
},
 get$load: function() {
  return new $.BoundClosure0(this, 'load$0');
},
 _loadResourceFailed$1: function(blobUrl) {
  var e = this._getByBlobUrl$1(blobUrl);
  $.print(["failled to load resources with blobUrl", e.get$url()]);
  e.revokeBlobUrl$0();
},
 _loadResourceSucceed$2: function(blobUrl, resource) {
  var entry, t1;
  entry = this._getByBlobUrl$1(blobUrl);
  entry.revokeBlobUrl$0();
  entry.setResource$1(resource);
  t1 = this._entries;
  if ($.getInterceptor$JSArray(t1).every$1(t1, new $.ResourceLoader__loadResourceSucceed_anon()) === true) {
    this._liblib5$_state = "loaded";
    this._loadedEvent.fireEvent$1($.CONSTANT12);
  }
},
 _getByUrl$1: function(url) {
  return this._entries.single$1(new $.ResourceLoader__getByUrl_anon(url));
},
 _getByBlobUrl$1: function(blobUrl) {
  return this._entries.single$1(new $.ResourceLoader__getByBlobUrl_anon(blobUrl));
},
 _httpLoad$1: function(url) {
  var request, e, t1;
  request = $.HttpRequest_HttpRequest();
  e = this._getByUrl$1(url);
  t1 = request.get$on().get$abort();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.ResourceLoader__httpLoad_anon(this, e));
  t1 = request.get$on().get$error();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.ResourceLoader__httpLoad_anon0(this, e));
  t1 = request.get$on().get$loadEnd();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.ResourceLoader__httpLoad_anon1(this, e));
  t1 = request.get$on().get$progress();
  $.getInterceptor$JSArray(t1).add$1(t1, new $.ResourceLoader__httpLoad_anon2(this, e));
  request.open$2("GET", url);
  request.set$responseType("blob");
  request.send$0();
},
 _onLoadEnd$2: function(entry, args) {
  var request = args.get$currentTarget();
  if ($.eqB(request.get$status(), 200))
    this._doLoad$1(entry.getBlobUrl$1(request.get$response()));
  else
    this._onError$2(entry, args);
},
 _onError$2: function(entry, args) {
  throw $.$$throw("wtf?");
},
 _onProgress$2: function(entry, args) {
  if (entry.updateProgress$2(args.get$loaded(), args.get$totalSize()) === true)
    this._progressEvent.fireEvent$1($.CONSTANT12);
}
};

$$.TextureAnimationThing = {'': function TextureAnimationThing(_textureData, _requests, _transforms, _invalidatedEventHandle, _cacheCanvas, _width, _height, _alpha, _cacheEnabled, _lastDrawTime, _parent, _propertyValues, _eventHandlers, _disposed) {
  this._textureData = _textureData;
  this._requests = _requests;
  this._transforms = _transforms;
  this._invalidatedEventHandle = _invalidatedEventHandle;
  this._cacheCanvas = _cacheCanvas;
  this._width = _width;
  this._height = _height;
  this._alpha = _alpha;
  this._cacheEnabled = _cacheEnabled;
  this._lastDrawTime = _lastDrawTime;
  this._parent = _parent;
  this._propertyValues = _propertyValues;
  this._eventHandlers = _eventHandlers;
  this._disposed = _disposed;
},
 'super': 'Thing',
 get$_textureData: function() { return this._textureData; },
 add$1: function(request) {
  this._requests.push(request);
  this.invalidateDraw$0();
},
 update$0: function() {
  var toRemove, t1, t2, t3;
  toRemove = $.List_List(null);
  for (t1 = this._requests, t2 = $.CONSTANT1.iterator$0(t1); t2.get$hasNext() === true;) {
    t3 = t2.next$0();
    t3.update$0();
    if (t3.get$done() === true)
      toRemove.push(t3);
  }
  for (t2 = $.CONSTANT1.iterator$0(toRemove); t2.get$hasNext() === true;)
    $.CONSTANT1.removeRange$2(t1, $.CONSTANT1.indexOf$2(t1, t2.next$0(), 0), 1);
  if (t1.length > 0)
    this.invalidateDraw$0();
},
 drawOverride$1: function(ctx) {
  var t1, t2, data, offset, frameName;
  for (t1 = $.CONSTANT1.iterator$0(this._requests), t2 = this._textureData; t1.get$hasNext() === true;) {
    data = t1.next$0()._getFrameDetails$0();
    offset = data.get$item1();
    frameName = data.get$item2();
    ctx.save$0();
    ctx.translate$2(offset.get$x(), offset.get$y());
    t2.drawTextureKeyAt$2(ctx, frameName);
    ctx.restore$0();
  }
}
};

$$.TextureAnimationRequest = {'': function TextureAnimationRequest(_startEventHandle, _texturePrefix, _frameCount, _offset, _delay, _initialFrame, _initialFrameOffset, _liblib4$_done, _frame) {
  this._startEventHandle = _startEventHandle;
  this._texturePrefix = _texturePrefix;
  this._frameCount = _frameCount;
  this._offset = _offset;
  this._delay = _delay;
  this._initialFrame = _initialFrame;
  this._initialFrameOffset = _initialFrameOffset;
  this._liblib4$_done = _liblib4$_done;
  this._frame = _frame;
},
 'super': 'Object',
 get$done: function() {
  return this._liblib4$_done;
},
 get$started: function() {
  return this._startEventHandle;
},
 update$0: function() {
  var t1, t2;
  t1 = this._frame;
  if (typeof t1 !== 'number')
    return this.update$0$bailout0(1, t1);
  t2 = this._frameCount;
  if (typeof t2 !== 'number')
    return this.update$0$bailout0(3, t2, t1);
  if (t1 < t2 - 1)
    this._frame = t1 + 1;
  else
    this._liblib4$_done = true;
  t1 = this._frame;
  if (typeof t1 !== 'number')
    return this.update$0$bailout0(5, t1);
  if (t1 === 0 && !this._liblib4$_done)
    this._startEventHandle.fireEvent$1($.CONSTANT12);
},
 update$0$bailout0: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t1 = env1;
      t2 = env0;
      break;
    case 4:
      t1 = env0;
      break;
    case 5:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._frame;
    case 1:
      state0 = 0;
    default:
      if (state0 === 2 || state0 === 0 && t1 == null)
        switch (state0) {
          case 0:
            t1 = this._delay;
          case 2:
            state0 = 0;
            this._frame = $.neg(t1);
        }
      else
        switch (state0) {
          case 0:
            t2 = this._frameCount;
          case 3:
            state0 = 0;
          case 4:
            if (state0 === 4 || state0 === 0 && $.ltB(t1, $.sub(t2, 1)))
              switch (state0) {
                case 0:
                  t1 = this._frame;
                case 4:
                  state0 = 0;
                  this._frame = $.add(t1, 1);
              }
            else
              this._liblib4$_done = true;
        }
      t1 = this._frame;
    case 5:
      var t1, t2;
      state0 = 0;
      if ($.eqB(t1, 0) && !this._liblib4$_done)
        this._startEventHandle.fireEvent$1($.CONSTANT12);
  }
},
 _getFrameDetails$0: function() {
  var offset, t1, frameName, offset0, frame, frameString, frameString0;
  offset = this._offset;
  t1 = this._frame;
  if (typeof t1 !== 'number')
    return this._getFrameDetails$0$bailout(1, offset, t1);
  if (t1 < 0 && !(this._initialFrame == null)) {
    frameName = this._initialFrame;
    if (typeof frameName !== 'string')
      return this._getFrameDetails$0$bailout(2, frameName, offset);
    offset0 = this._initialFrameOffset;
    if (!(offset0 == null))
      offset = offset0;
  } else {
    if (t1 < 0)
      frame = 0;
    else
      frame = t1;
    t1 = $.CONSTANT4.toInt$0(frame);
    frameString = $.getInterceptor(t1).toString$0(t1);
    if (typeof frameString !== 'string')
      return this._getFrameDetails$0$bailout(5, frameString, offset);
    while (true) {
      t1 = frameString.length;
      if (!(t1 < 4))
        break;
      frameString0 = "0" + frameString;
      frameString = frameString0;
    }
    frameName = $.S(this._texturePrefix) + "_" + frameString + ".png";
  }
  return $.Tuple$(offset, frameName);
},
 _getFrameDetails$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      offset = env0;
      break;
    case 2:
      offset = env1;
      frameName = env0;
      break;
    case 3:
      offset = env1;
      t1 = env0;
      break;
    case 4:
      offset = env1;
      t1 = env0;
      break;
    case 5:
      offset = env1;
      frameString = env0;
      break;
    case 6:
      offset = env2;
      t1 = env1;
      frameString = env0;
      break;
  }
  switch (state0) {
    case 0:
      offset = this._offset;
      t1 = this._frame;
    case 1:
      state0 = 0;
    default:
      var offset, t1, frameName, offset0, frame, frameString, frameString0;
      if (state0 === 2 || state0 === 0 && $.ltB(t1, 0) && !(this._initialFrame == null))
        switch (state0) {
          case 0:
            frameName = this._initialFrame;
          case 2:
            state0 = 0;
            offset0 = this._initialFrameOffset;
            if (!(offset0 == null))
              offset = offset0;
        }
      else
        switch (state0) {
          case 0:
            t1 = this._frame;
          case 3:
            state0 = 0;
          case 4:
            if (state0 === 0 && $.ltB(t1, 0))
              frame = 0;
            else
              switch (state0) {
                case 0:
                  t1 = this._frame;
                case 4:
                  state0 = 0;
                  frame = t1;
              }
            t1 = $.getInterceptor$JSNumber(frame).toInt$0(frame);
            frameString = $.getInterceptor(t1).toString$0(t1);
          case 5:
            state0 = 0;
          case 6:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    t1 = $.getInterceptor$JSStringJSArray(frameString).get$length(frameString);
                  case 6:
                    state0 = 0;
                    if (!$.ltB(t1, 4))
                      break L0;
                    frameString0 = "0" + $.S(frameString);
                    frameString = frameString0;
                }
            frameName = $.S(this._texturePrefix) + "_" + $.S(frameString) + ".png";
        }
      return $.Tuple$(offset, frameName);
  }
},
 TextureAnimationRequest$7$delay$initialFrame$initialFrameOffset$startFrame: function(_texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, startFrame) {
}
};

$$.TextureData = {'': function TextureData(_textures) {
  this._textures = _textures;
},
 'super': 'Object',
 drawTextureKeyAt$3: function(ctx, textureKey, location$) {
  var t1 = this._textures;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.drawTextureKeyAt$3$bailout(1, ctx, textureKey, location$, t1);
  if (textureKey !== (textureKey | 0))
    throw $.iae(textureKey);
  if (textureKey < 0 || textureKey >= t1.length)
    throw $.ioore(textureKey);
  this.drawTextureAt$3(ctx, location$, t1[textureKey]);
},
 drawTextureKeyAt$3$bailout: function(state0, ctx, textureKey, location$, t1) {
  this.drawTextureAt$3(ctx, location$, $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, textureKey));
},
 drawTextureKeyAt$2: function(ctx, textureKey) {
  return this.drawTextureKeyAt$3(ctx, textureKey, $.CONSTANT32);
},
 drawTextureAt$3: function(ctx, location$, texture) {
  var tx, theFrame, source, t1, t2, theFrame0;
  ctx.save$0();
  tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  tx.translate$2(location$.get$x(), location$.get$y());
  theFrame = texture.get$frame();
  source = texture.get$sourceColorRect().get$topLeft();
  tx.translate$2(source.get$x(), source.get$y());
  if (texture.get$rotated() === true) {
    t1 = theFrame.get$height();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    t1 = 0.5 * t1;
    t2 = theFrame.get$height();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    tx.rotate$3(-1.5707963267948966, t1, 0.5 * t2);
    theFrame0 = $.Box$(theFrame.get$left(), theFrame.get$top(), theFrame.get$height(), theFrame.get$width());
    theFrame = theFrame0;
  }
  $.CanvasUtil_transform(ctx, tx);
  $.CanvasUtil_drawImage(ctx, texture.get$image(), theFrame, null);
  ctx.restore$0();
}
};

$$.TextureInput = {'': function TextureInput(name, frame, rotated, trimmed, sourceColorRect, sourceSize, image) {
  this.name = name;
  this.frame = frame;
  this.rotated = rotated;
  this.trimmed = trimmed;
  this.sourceColorRect = sourceColorRect;
  this.sourceSize = sourceSize;
  this.image = image;
},
 'super': 'Object',
 get$frame: function() { return this.frame; },
 get$rotated: function() { return this.rotated; },
 get$sourceColorRect: function() { return this.sourceColorRect; },
 get$image: function() { return this.image; },
 toString$0: function() {
  return this.name;
}
};

$$.ClickManager = {'': function ClickManager(_stage, _mouseDownThing) {
  this._stage = _stage;
  this._mouseDownThing = _mouseDownThing;
},
 'super': 'Object',
 _mouseMove$1: function(e) {
  var t1, items;
  t1 = $.getMouseEventCoordinate(e);
  items = $.Mouse_markMouseOver(this._stage, t1);
  t1 = $.getInterceptor$JSStringJSArray(items);
  if ($.gtB(t1.get$length(items), 0))
    t1.forEach$1(items, new $.ClickManager__mouseMove_anon($.ThingMouseEventArgs_ThingMouseEventArgs(t1.operator$index$1(items, 0), e)));
},
 get$_mouseMove: function() {
  return new $.BoundClosure(this, '_mouseMove$1');
},
 _mouseOut$1: function(e) {
  var t1 = this._stage;
  $.Mouse_markMouseOver(t1, null);
  $.get$ClickManager__mouseOutEvent().fireEvent$2(t1, $.CONSTANT12);
},
 get$_mouseOut: function() {
  return new $.BoundClosure(this, '_mouseOut$1');
},
 _mouseUp$1: function(e) {
  var t1, thing;
  t1 = $.getMouseEventCoordinate(e);
  thing = $.$$($.Mouse_markMouseOver(this._stage, t1)).firstOrDefault$1(new $.ClickManager__mouseUp_anon());
  if (!(thing == null)) {
    this._doMouseUp$2(thing, e);
    if ($.eqB(thing, this._mouseDownThing))
      this._doClick$2(thing, e);
    this._mouseDownThing = null;
  }
},
 get$_mouseUp: function() {
  return new $.BoundClosure(this, '_mouseUp$1');
},
 _mouseDown$1: function(e) {
  var coord, t1;
  coord = $.getMouseEventCoordinate(e);
  this._mouseDownThing = $.$$($.Mouse_markMouseOver(this._stage, coord)).firstOrDefault$1(new $.ClickManager__mouseDown_anon());
  t1 = this._mouseDownThing;
  if (!(t1 == null))
    this._doMouseDown$2(t1, e);
},
 get$_mouseDown: function() {
  return new $.BoundClosure(this, '_mouseDown$1');
},
 _doMouseDown$2: function(thing, e) {
  var args = $.ThingMouseEventArgs_ThingMouseEventArgs(thing, e);
  $.get$ClickManager__mouseDownEvent().fireEvent$2(thing, args);
},
 _doMouseUp$2: function(thing, e) {
  var args = $.ThingMouseEventArgs_ThingMouseEventArgs(thing, e);
  $.get$ClickManager__mouseUpEvent().fireEvent$2(thing, args);
},
 _doClick$2: function(thing, e) {
  var args = $.ThingMouseEventArgs_ThingMouseEventArgs(thing, e);
  $.get$ClickManager__clickEvent().fireEvent$2(thing, args);
},
 ClickManager$_internal$1: function(_stage) {
  var t1, t2;
  t1 = this._stage;
  t2 = t1.get$_canvas().get$on().get$mouseMove();
  $.getInterceptor$JSArray(t2).add$1(t2, this.get$_mouseMove());
  t2 = t1.get$_canvas().get$on().get$mouseOut();
  $.getInterceptor$JSArray(t2).add$1(t2, this.get$_mouseOut());
  t2 = t1.get$_canvas().get$on().get$mouseUp();
  $.getInterceptor$JSArray(t2).add$1(t2, this.get$_mouseUp());
  t2 = t1.get$_canvas().get$on().get$mouseDown();
  $.getInterceptor$JSArray(t2).add$1(t2, this.get$_mouseDown());
}
};

$$.ThingMouseEventArgs = {'': function ThingMouseEventArgs(thing, shiftKey) {
  this.thing = thing;
  this.shiftKey = shiftKey;
},
 'super': 'EventArgs',
 get$thing: function() { return this.thing; },
 get$shiftKey: function() { return this.shiftKey; }
};

$$.PanelThing = {'': function PanelThing() {
},
 'super': 'ParentThing',
 add$1: function(thing) {
  this.insertAt$2(thing, this._children.length);
},
 insertAt$2: function(thing, index) {
  var t1;
  $.requireArgumentNotNull(thing, "thing");
  $.requireArgument(thing.get$parent() == null, "thing", "already has a parent");
  t1 = this._children;
  $.requireArgument($.CONSTANT1.contains$1(t1, thing) !== true, "thing", "Cannot add twice");
  if (index == null)
    index = 0;
  thing.registerParent$1(this);
  $.CONSTANT1.insertRange$3(t1, index, 1, thing);
  $.get$PanelThing__containerTransformProperty().set$2(thing, thing.addTransform$0());
  this.onChildrenChanged$0();
},
 remove$1: function(thing) {
  var t1, index, item;
  $.requireArgumentNotNull(thing, "thing");
  t1 = this._children;
  index = $.CONSTANT1.indexOf$1(t1, thing);
  if ($.ltB(index, 0))
    return false;
  else {
    item = $.CONSTANT1.removeAt$1(t1, index);
    item.unregisterParent$1(this);
    item.removeTransform$1($.get$PanelThing__containerTransformProperty().get$1(item));
    $.get$PanelThing__containerTransformProperty().clear$1(item);
    return true;
  }
},
 getVisualChild$1: function(index) {
  var t1 = this._children;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 get$visualChildCount: function() {
  return this._children.length;
},
 getChildTransform$1: function(child) {
  return $.get$PanelThing__containerTransformProperty().get$1(child);
},
 drawOverride$1: function(ctx) {
  var t1 = this.background;
  if (!(t1 == null)) {
    ctx.set$fillStyle(t1);
    ctx.fillRect$4(0, 0, this.get$width(), this.get$height());
  }
  $.ParentThing.prototype.drawOverride$1.call(this, ctx);
}
};

$$.ParentThing = {'': function ParentThing() {
},
 'super': 'Thing',
 onChildrenChanged$0: function() {
  this.invalidateDraw$0();
},
 childInvalidated$1: function(child) {
  this.invalidateDraw$0();
},
 update$0: function() {
  this._forEach$1(new $.ParentThing_update_anon());
  $.Thing.prototype.update$0.call(this);
},
 drawOverride$1: function(ctx) {
  this._forEach$1(new $.ParentThing_drawOverride_anon(ctx));
},
 _forEach$1: function(f) {
  var length$, i;
  length$ = this.get$visualChildCount();
  if (typeof length$ !== 'number')
    return this._forEach$1$bailout(1, f, length$);
  for (i = 0; i < length$; ++i)
    f.call$1(this.getVisualChild$1(i));
},
 _forEach$1$bailout: function(state0, f, length$) {
  var i;
  for (i = 0; $.ltB(i, length$); ++i)
    f.call$1(this.getVisualChild$1(i));
},
 is$ParentThing: true
};

$$.CanvasThing = {'': function CanvasThing(_children, background, _transforms, _invalidatedEventHandle, _cacheCanvas, _width, _height, _alpha, _cacheEnabled, _lastDrawTime, _parent, _propertyValues, _eventHandlers, _disposed) {
  this._children = _children;
  this.background = background;
  this._transforms = _transforms;
  this._invalidatedEventHandle = _invalidatedEventHandle;
  this._cacheCanvas = _cacheCanvas;
  this._width = _width;
  this._height = _height;
  this._alpha = _alpha;
  this._cacheEnabled = _cacheEnabled;
  this._lastDrawTime = _lastDrawTime;
  this._parent = _parent;
  this._propertyValues = _propertyValues;
  this._eventHandlers = _eventHandlers;
  this._disposed = _disposed;
},
 'super': 'PanelThing',
 setTopLeft$2: function(thing, value) {
  this.getChildTransform$1(thing).setToTranslation$2(value.get$x(), value.get$y());
},
 is$CanvasThing: true
};

$$.Thing = {'': function Thing(_parent) {
  this._parent = _parent;
},
 'super': 'AttachableObject',
 get$_parent: function() { return this._parent; },
 get$width: function() {
  return this._width;
},
 set$width: function(value) {
  this._width = value;
  this.invalidateDraw$0();
},
 get$height: function() {
  return this._height;
},
 set$height: function(value) {
  this._height = value;
  this.invalidateDraw$0();
},
 get$size: function() {
  return $.Size$(this._width, this._height);
},
 set$size: function(value) {
  this._width = value.get$width();
  this._height = value.get$height();
  this.invalidateDraw$0();
},
 get$parent: function() {
  return this._parent;
},
 set$cacheEnabled: function(value) {
  $.requireArgumentNotNull(value, "value");
  if (!$.eqB(value, this._cacheEnabled)) {
    this._cacheEnabled = value;
    if (this._cacheEnabled !== true)
      this._cacheCanvas = null;
  }
},
 getTransform$0: function() {
  var tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  $.CONSTANT1.forEach$1(this._transforms, tx.get$concatenate());
  return tx;
},
 update$0: function() {
},
 drawCore$1: function(ctx) {
  ctx.save$0();
  $.CanvasUtil_transform(ctx, this.getTransform$0());
  ctx.set$globalAlpha($.mul(ctx.get$globalAlpha(), this._alpha));
  if (this._cacheEnabled === true)
    this._drawCached$1(ctx);
  else
    this._drawNormal$1(ctx);
  ctx.restore$0();
},
 addTransform$0: function() {
  this.validateNotDisposed$0();
  var tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  this._transforms.push(tx);
  return tx;
},
 removeTransform$1: function(tx) {
  var t1, index;
  $.requireArgumentNotNull(tx, "tx");
  t1 = this._transforms;
  index = $.CONSTANT1.indexOf$1(t1, tx);
  if ($.ltB(index, 0))
    return false;
  else {
    $.CONSTANT1.removeAt$1(t1, index);
    return true;
  }
},
 invalidateDraw$0: function() {
  this.validateNotDisposed$0();
  if (!(this._lastDrawTime == null)) {
    this._lastDrawTime = null;
    this._invalidateParent$0();
  }
},
 registerParent$1: function(parent$) {
  $.require(this._parent == null, "parent already set");
  $.requireArgumentNotNull(parent$, "parent");
  this._parent = parent$;
},
 unregisterParent$1: function(parent$) {
  $.requireArgumentNotNull(parent$, "parent");
  $.requireArgument($.eq(parent$, this._parent), "parent", null);
  this._parent = null;
},
 _stageDraw$1: function(ctx) {
  var dirty;
  this.update$0();
  dirty = this._lastDrawTime == null;
  this.drawCore$1(ctx);
  return dirty;
},
 _drawCached$1: function(ctx) {
  var t1;
  if (this._lastDrawTime == null) {
    if (this._cacheCanvas == null)
      this._cacheCanvas = $.CanvasElement_CanvasElement(null, null);
    t1 = this.get$width();
    t1 = $.getInterceptor$JSNumber(t1).toInt$0(t1);
    this._cacheCanvas.set$width(t1);
    t1 = this.get$height();
    t1 = $.getInterceptor$JSNumber(t1).toInt$0(t1);
    this._cacheCanvas.set$height(t1);
    this._drawNormal$1(this._cacheCanvas.get$context2d());
  }
  ctx.drawImage$3(this._cacheCanvas, 0, 0);
},
 _drawNormal$1: function(ctx) {
  this._lastDrawTime = $.Date_Date$now().get$millisecondsSinceEpoch();
  this.drawOverride$1(ctx);
},
 _invalidateParent$0: function() {
  this._invalidatedEventHandle.fireEvent$1($.CONSTANT12);
  this._parent.childInvalidated$1(this);
}
};

$$.Stage = {'': function Stage(_invalidatedEventHandle, _canvas, rootThing, _ctx, _propertyValues, _eventHandlers, _disposed) {
  this._invalidatedEventHandle = _invalidatedEventHandle;
  this._canvas = _canvas;
  this.rootThing = rootThing;
  this._ctx = _ctx;
  this._propertyValues = _propertyValues;
  this._eventHandlers = _eventHandlers;
  this._disposed = _disposed;
},
 'super': 'AttachableObject',
 get$_canvas: function() { return this._canvas; },
 get$rootThing: function() { return this.rootThing; },
 get$size: function() {
  var t1 = this._canvas;
  return $.Size$(t1.get$width(), t1.get$height());
},
 get$invalidated: function() {
  return this._invalidatedEventHandle;
},
 draw$0: function() {
  var t1, t2, t3;
  this.validateNotDisposed$0();
  t1 = this._ctx;
  t2 = t1 == null;
  t3 = this._canvas;
  if (t2)
    this._ctx = t3.get$context2d();
  else
    t1.clearRect$4(0, 0, t3.get$width(), t3.get$height());
  return this.rootThing._stageDraw$1(this._ctx);
},
 childInvalidated$1: function(child) {
  this.validateNotDisposed$0();
  this._invalidatedEventHandle.fireEvent$1($.CONSTANT12);
},
 Stage$2: function(_canvas, rootThing) {
  this.rootThing.registerParent$1(this);
}
};

$$.BoardElement = {'': function BoardElement(_elements, _transforms, _invalidatedEventHandle, _cacheCanvas, _width, _height, _alpha, _cacheEnabled, _lastDrawTime, _parent, _propertyValues, _eventHandlers, _disposed) {
  this._elements = _elements;
  this._transforms = _transforms;
  this._invalidatedEventHandle = _invalidatedEventHandle;
  this._cacheCanvas = _cacheCanvas;
  this._width = _width;
  this._height = _height;
  this._alpha = _alpha;
  this._cacheEnabled = _cacheEnabled;
  this._lastDrawTime = _lastDrawTime;
  this._parent = _parent;
  this._propertyValues = _propertyValues;
  this._eventHandlers = _eventHandlers;
  this._disposed = _disposed;
},
 'super': 'ParentThing',
 get$visualChildCount: function() {
  var t1 = this._elements;
  if (t1 == null)
    return 0;
  else
    return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 getVisualChild$1: function(index) {
  var t1 = this._elements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.getVisualChild$1$bailout(1, t1, index);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 getVisualChild$1$bailout: function(state0, t1, index) {
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, index);
},
 update$0: function() {
  var i, t1, coords, se, etx, t3;
  if (this.get$_liblib2$_game() == null)
    this._elements = null;
  else if (this.get$_elementsNeedUpdate() === true) {
    this._elements = $.Array2d_Array2d(this.get$_liblib2$_game().get$field().get$width(), this.get$_liblib2$_game().get$field().get$height(), null);
    i = 0;
    while (true) {
      t1 = this._elements;
      t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
      if (typeof t1 !== 'number')
        return this.update$0$bailout(1, i, t1);
      if (!(i < t1))
        break;
      coords = this._elements.getCoordinate$1(i);
      se = $.SquareElement$(coords.get$item1(), coords.get$item2());
      se.registerParent$1(this);
      this.get$_liblib2$_parent().wireSquareMouseEvent$1(se);
      etx = se.addTransform$0();
      t1 = coords.get$item1();
      if (typeof t1 !== 'number')
        return this.update$0$bailout(2, se, i, coords, etx, t1);
      t1 *= 80;
      t3 = coords.get$item2();
      if (typeof t3 !== 'number')
        return this.update$0$bailout(3, t1, t3, se, i, etx);
      etx.setToTranslation$2(t1, t3 * 80);
      t1 = this._elements;
      if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
        return this.update$0$bailout(4, t1, se, i);
      if (i >= t1.length)
        throw $.ioore(i);
      t1[i] = se;
      ++i;
    }
    t1 = this.get$_liblib2$_game().get$field().get$width();
    if (typeof t1 !== 'number')
      return this.update$0$bailout(5, t1);
    t1 *= 80;
    t3 = this.get$_liblib2$_game().get$field().get$height();
    if (typeof t3 !== 'number')
      return this.update$0$bailout(6, t1, t3);
    this.set$size($.Size$(t1, t3 * 80));
  }
  $.ParentThing.prototype.update$0.call(this);
},
 update$0$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env1;
      i = env0;
      break;
    case 2:
      t1 = env4;
      etx = env3;
      coords = env2;
      i = env1;
      se = env0;
      break;
    case 3:
      etx = env4;
      i = env3;
      se = env2;
      t3 = env1;
      t1 = env0;
      break;
    case 4:
      i = env2;
      se = env1;
      t1 = env0;
      break;
    case 5:
      t1 = env0;
      break;
    case 6:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      var i, t1, coords, se, etx, t3;
      if (state0 === 0 && this.get$_liblib2$_game() == null)
        this._elements = null;
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && this.get$_elementsNeedUpdate() === true)
              switch (state0) {
                case 0:
                  this._elements = $.Array2d_Array2d(this.get$_liblib2$_game().get$field().get$width(), this.get$_liblib2$_game().get$field().get$height(), null);
                  i = 0;
                default:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          t1 = this._elements;
                          t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
                        case 1:
                          state0 = 0;
                          if (!$.ltB(i, t1))
                            break L0;
                          coords = this._elements.getCoordinate$1(i);
                          se = $.SquareElement$(coords.get$item1(), coords.get$item2());
                          se.registerParent$1(this);
                          this.get$_liblib2$_parent().wireSquareMouseEvent$1(se);
                          etx = se.addTransform$0();
                          t1 = coords.get$item1();
                        case 2:
                          state0 = 0;
                          t1 = $.mul(t1, 80);
                          t3 = coords.get$item2();
                        case 3:
                          state0 = 0;
                          etx.setToTranslation$2(t1, $.mul(t3, 80));
                          t1 = this._elements;
                        case 4:
                          state0 = 0;
                          $.indexSet(t1, i, se);
                          ++i;
                      }
                  t1 = this.get$_liblib2$_game().get$field().get$width();
                case 5:
                  state0 = 0;
                  t1 = $.mul(t1, 80);
                  t3 = this.get$_liblib2$_game().get$field().get$height();
                case 6:
                  state0 = 0;
                  this.set$size($.Size$(t1, $.mul(t3, 80)));
              }
        }
      $.ParentThing.prototype.update$0.call(this);
  }
},
 get$_liblib2$_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$CanvasThing').get$parent();
},
 get$_liblib2$_game: function() {
  return this.get$_liblib2$_parent().get$_liblib2$_game();
},
 get$_elementsNeedUpdate: function() {
  var t1 = this._elements;
  return t1 == null || !$.eqB(t1.get$width(), this.get$_liblib2$_game().get$field().get$width()) || !$.eqB(this._elements.get$height(), this.get$_liblib2$_game().get$field().get$height());
},
 get$_liblib2$_textureData: function() {
  return this.get$_liblib2$_parent().get$_liblib2$_textureData();
},
 BoardElement$0: function() {
  this.set$cacheEnabled(true);
}
};

$$.GameBackgroundElement = {'': function GameBackgroundElement(_transforms, _invalidatedEventHandle, _cacheCanvas, _width, _height, _alpha, _cacheEnabled, _lastDrawTime, _parent, _propertyValues, _eventHandlers, _disposed) {
  this._transforms = _transforms;
  this._invalidatedEventHandle = _invalidatedEventHandle;
  this._cacheCanvas = _cacheCanvas;
  this._width = _width;
  this._height = _height;
  this._alpha = _alpha;
  this._cacheEnabled = _cacheEnabled;
  this._lastDrawTime = _lastDrawTime;
  this._parent = _parent;
  this._propertyValues = _propertyValues;
  this._eventHandlers = _eventHandlers;
  this._disposed = _disposed;
},
 'super': 'Thing',
 update$0: function() {
  if (!$.eqB(this.get$size(), this.get$_liblib2$_parent().get$size()))
    this.set$size(this.get$_liblib2$_parent().get$size());
},
 drawOverride$1: function(ctx) {
  var t1, rightBgLoc, t2, bottomBgLoc, i, xLoc, yLoc;
  t1 = $.sub(this.get$_liblib2$_parent().get$_liblib2$_game().get$field().get$width(), 1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  rightBgLoc = 80 * t1 + 32;
  t2 = $.sub(this.get$_liblib2$_parent().get$_liblib2$_game().get$field().get$height(), 1);
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  bottomBgLoc = 80 * t2 + 32;
  ctx.save$0();
  ctx.translate$2(this.get$_liblib2$_parent().get$_scaledBoardOffset().get$x(), this.get$_liblib2$_parent().get$_scaledBoardOffset().get$y());
  this.get$_liblib2$_textureData().drawTextureKeyAt$2(ctx, "game_board_corner_top_left.png");
  this.get$_liblib2$_textureData().drawTextureKeyAt$3(ctx, "game_board_corner_top_right.png", $.Coordinate$(rightBgLoc, 0));
  this.get$_liblib2$_textureData().drawTextureKeyAt$3(ctx, "game_board_corner_bottom_left.png", $.Coordinate$(0, bottomBgLoc));
  this.get$_liblib2$_textureData().drawTextureKeyAt$3(ctx, "game_board_corner_bottom_right.png", $.Coordinate$(rightBgLoc, bottomBgLoc));
  for (i = 1; $.ltB(i, $.sub(this.get$_liblib2$_parent().get$_liblib2$_game().get$field().get$width(), 1)); ++i) {
    xLoc = 80 * i + 32;
    this.get$_liblib2$_textureData().drawTextureKeyAt$3(ctx, "game_board_side_top.png", $.Coordinate$(xLoc, 0));
    this.get$_liblib2$_textureData().drawTextureKeyAt$3(ctx, "game_board_side_bottom.png", $.Coordinate$(xLoc, bottomBgLoc));
  }
  for (i = 1; $.ltB(i, $.sub(this.get$_liblib2$_parent().get$_liblib2$_game().get$field().get$height(), 1)); ++i) {
    yLoc = 80 * i + 32;
    this.get$_liblib2$_textureData().drawTextureKeyAt$3(ctx, "game_board_side_left.png", $.Coordinate$(0, yLoc));
    this.get$_liblib2$_textureData().drawTextureKeyAt$3(ctx, "game_board_side_right.png", $.Coordinate$(rightBgLoc, yLoc));
  }
  ctx.restore$0();
  ctx.save$0();
  ctx.transform$6(this.get$_liblib2$_parent().get$_scale(), 0, 0, this.get$_liblib2$_parent().get$_scale(), 0, 0);
  this._drawCorner$1(ctx);
  ctx.save$0();
  ctx.transform$6(-1, 0, 0, 1, $.CONSTANT14.width, 0);
  this._drawCorner$1(ctx);
  t1 = $.CONSTANT14.height;
  ctx.transform$6(1, 0, 0, -1, 0, t1);
  this._drawCorner$1(ctx);
  ctx.restore$0();
  ctx.transform$6(1, 0, 0, -1, 0, t1);
  this._drawCorner$1(ctx);
  ctx.restore$0();
},
 _drawCorner$1: function(ctx) {
  this.get$_liblib2$_textureData().drawTextureKeyAt$2(ctx, "background_top_left.png");
  this.get$_liblib2$_textureData().drawTextureKeyAt$3(ctx, "background_side_left.png", $.Coordinate$(0, $.CONSTANT15.y));
},
 get$_liblib2$_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$CanvasThing').get$parent();
},
 get$_liblib2$_textureData: function() {
  return this.get$_liblib2$_parent().get$_liblib2$_textureData();
},
 GameBackgroundElement$0: function() {
  this.set$cacheEnabled(true);
}
};

$$.GameElement = {'': function GameElement(_liblib2$_canvas, _background, _boardElement, _scoreElement, _newGameElement, _titleElement, _popAnimationLayer, _dartAnimationLayer, _liblib2$_textureData, _targetChanged, _targetX, _targetY, _scale, _scaledBoardOffset, _scaledInnerBox, _mouseDownElement, _lastHoldUnfreeze, _mouseDownTimeoutHandleId, _liblib2$_game, _transforms, _invalidatedEventHandle, _cacheCanvas, _width, _height, _alpha, _cacheEnabled, _lastDrawTime, _parent, _propertyValues, _eventHandlers, _disposed) {
  this._liblib2$_canvas = _liblib2$_canvas;
  this._background = _background;
  this._boardElement = _boardElement;
  this._scoreElement = _scoreElement;
  this._newGameElement = _newGameElement;
  this._titleElement = _titleElement;
  this._popAnimationLayer = _popAnimationLayer;
  this._dartAnimationLayer = _dartAnimationLayer;
  this._liblib2$_textureData = _liblib2$_textureData;
  this._targetChanged = _targetChanged;
  this._targetX = _targetX;
  this._targetY = _targetY;
  this._scale = _scale;
  this._scaledBoardOffset = _scaledBoardOffset;
  this._scaledInnerBox = _scaledInnerBox;
  this._mouseDownElement = _mouseDownElement;
  this._lastHoldUnfreeze = _lastHoldUnfreeze;
  this._mouseDownTimeoutHandleId = _mouseDownTimeoutHandleId;
  this._liblib2$_game = _liblib2$_game;
  this._transforms = _transforms;
  this._invalidatedEventHandle = _invalidatedEventHandle;
  this._cacheCanvas = _cacheCanvas;
  this._width = _width;
  this._height = _height;
  this._alpha = _alpha;
  this._cacheEnabled = _cacheEnabled;
  this._lastDrawTime = _lastDrawTime;
  this._parent = _parent;
  this._propertyValues = _propertyValues;
  this._eventHandlers = _eventHandlers;
  this._disposed = _disposed;
},
 'super': 'ParentThing',
 get$_liblib2$_canvas: function() { return this._liblib2$_canvas; },
 get$_liblib2$_textureData: function() { return this._liblib2$_textureData; },
 get$_scale: function() { return this._scale; },
 get$_scaledBoardOffset: function() { return this._scaledBoardOffset; },
 get$_liblib2$_game: function() { return this._liblib2$_game; },
 get$newGameClick: function() {
  return this._newGameElement.get$clicked();
},
 get$game: function() {
  return this._liblib2$_game;
},
 set$game: function(value) {
  this._liblib2$_game = value;
  if (value == null)
    this.set$size($.CONSTANT16);
  else
    this._updateSize$2(value.get$field().get$width(), value.get$field().get$height());
},
 setGameManager$1: function(manager) {
  this._scoreElement.setGameManager$1(manager);
},
 get$visualChildCount: function() {
  return 1;
},
 getVisualChild$1: function(index) {
  return this._liblib2$_canvas;
},
 update$0: function() {
  var offset, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10;
  $.ParentThing.prototype.update$0.call(this);
  offset = $.add(this._scaledBoardOffset, $.CONSTANT13);
  t1 = this._liblib2$_canvas;
  t1.setTopLeft$2(this._boardElement, offset);
  t1.setTopLeft$2(this._popAnimationLayer, offset);
  t1.setTopLeft$2(this._dartAnimationLayer, offset);
  t2 = this._scale;
  t3 = $.CONSTANT14.width;
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  t4 = 40 + t3;
  t5 = $.CONSTANT15.x;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t4 -= t5;
  t6 = this._scoreElement;
  t7 = t6.get$width();
  if (typeof t7 !== 'number')
    throw $.iae(t7);
  t1.setTopLeft$2(t6, $.Coordinate$($.mul(t2, t4 - t7), 0));
  t6 = t1.getChildTransform$1(t6);
  t8 = this._scale;
  t6.scale$2(t8, t8);
  t8 = this._newGameElement;
  t6 = $.mul(t8.get$width(), 0.2);
  if (typeof t6 !== 'number')
    throw $.iae(t6);
  t6 = t5 + t6;
  t5 = this._scale;
  if (typeof t5 !== 'number')
    throw $.iae(t5);
  t1.setTopLeft$2(t8, $.Coordinate$(t6 * t5, 0));
  t8 = t1.getChildTransform$1(t8);
  t9 = this._scale;
  t8.scale$2(t9, t9);
  t9 = $.mul(this._scale, 0.5);
  t8 = this._titleElement;
  t10 = $.mul(t8.get$width(), 1.7);
  if (typeof t10 !== 'number')
    throw $.iae(t10);
  t1.setTopLeft$2(t8, $.Coordinate$($.mul(t9, t3 - t10), 0));
  t8 = t1.getChildTransform$1(t8);
  t1 = this._scale;
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t8.scale$2(1.7 * t1, 1.7 * t1);
},
 drawOverride$1: function(ctx) {
  $.ParentThing.prototype.drawOverride$1.call(this, ctx);
  this._drawTarget$1(ctx);
},
 _drawTarget$1: function(ctx) {
  var t1, targetLoc;
  t1 = this._targetX;
  if (!(t1 == null)) {
    targetLoc = $.Vector$(t1, this._targetY).scale$1(80);
    ctx.set$fillStyle("rgba(255, 0, 0, 0.5)");
    $.CanvasUtil_centeredCircle(ctx, $.add(targetLoc.get$x(), 40), $.add(targetLoc.get$y(), 40), 40);
    ctx.fill$0();
  }
},
 _startPopAnimation$2: function(start, reveals) {
  var t1, t2, values, t3, t4, c, initialOffset, squareOffset, delay, ss, texturePrefix, frameCount, request;
  if (reveals == null) {
    t1 = this.get$game().get$field();
    t2 = $.NumberEnumerable_NumberEnumerable$fromRange(0, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
    t2 = $.getInterceptor$JSArray(t2).map$1(t2, new $.GameElement__startPopAnimation_anon(this));
    t2 = $.getInterceptor$JSArray(t2).filter$1(t2, new $.GameElement__startPopAnimation_anon0());
    reveals = $.getInterceptor$JSArray(t2).map$1(t2, new $.GameElement__startPopAnimation_anon1()).toList$0();
  }
  t1 = $.$$(reveals);
  values = $.getInterceptor$JSArray(t1).map$1(t1, new $.GameElement__startPopAnimation_anon2(start)).toList$0();
  t2 = $.getInterceptor$JSArray(values);
  t2.sort$1(values, new $.GameElement__startPopAnimation_anon3());
  for (t1 = t2.iterator$0(values), t2 = this._popAnimationLayer; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    t4 = $.getInterceptor$JSStringJSArray(t3);
    c = t4.operator$index$1(t3, 0);
    initialOffset = t4.operator$index$1(t3, 1);
    squareOffset = t4.operator$index$1(t3, 2);
    delay = t4.operator$index$1(t3, 3);
    ss = this.get$game().getSquareState$2(c.get$x(), c.get$y());
    switch (ss) {
      case $.CONSTANT19:
      case $.CONSTANT18:
        texturePrefix = "balloon_pop";
        frameCount = 28;
        break;
      case $.CONSTANT24:
        texturePrefix = "balloon_explode";
        frameCount = 24;
        break;
      default:
        throw $.$$throw("not supported");
    }
    request = $.TextureAnimationRequest$(texturePrefix, frameCount, squareOffset, delay, "balloon.png", initialOffset, 0);
    switch (ss) {
      case $.CONSTANT19:
      case $.CONSTANT18:
        t3 = request.get$started();
        $.getInterceptor$JSArray(t3).add$1(t3, new $.GameElement__startPopAnimation_anon4());
        break;
      case $.CONSTANT24:
        t3 = request.get$started();
        $.getInterceptor$JSArray(t3).add$1(t3, new $.GameElement__startPopAnimation_anon5());
        break;
    }
    t2.add$1(request);
  }
},
 _startPopAnimation$1: function(start) {
  return this._startPopAnimation$2(start, null);
},
 _startDartAnimation$1: function(points) {
  var t1, t2, t3, t4, squareOffset;
  $.get$GameAudio__audioEventHandle().fireEvent$1("throw");
  for (t1 = $.getInterceptor$JSArray(points).iterator$0(points), t2 = this._dartAnimationLayer; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    t4 = t3.get$x();
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    t4 = 80 * t4;
    t3 = t3.get$y();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    squareOffset = $.CONSTANT27.operator$add$1($.Vector$(t4, 80 * t3));
    t2.add$1($.TextureAnimationRequest$("dart_fly_shadow", 54, squareOffset, 0, null, null, 0));
    t2.add$1($.TextureAnimationRequest$("dart_fly", 54, squareOffset, 0, null, null, 0));
  }
},
 wireSquareMouseEvent$1: function(square) {
  $.ClickManager_addHandler(square, this.get$_squareClicked());
  $.ClickManager_addMouseDownHandler(square, this.get$_squareMouseDown());
  $.ClickManager_addMouseUpHandler(square, this.get$_squareMouseUp());
  $.ClickManager_addMouseMoveHandler(square, this.get$_squareMouseMove());
},
 _squareClicked$1: function(args) {
  var se;
  if (this._liblib2$_game.get$gameEnded() !== true && this._lastHoldUnfreeze == null) {
    se = args.get$thing();
    this._click$3(se.get$x(), se.get$y(), args.get$shiftKey());
  }
},
 get$_squareClicked: function() {
  return new $.BoundClosure(this, '_squareClicked$1');
},
 _squareMouseDown$1: function(args) {
  this._lastHoldUnfreeze = null;
  if (!(this._mouseDownTimeoutHandleId == null))
    $.window().clearTimeout$1(this._mouseDownTimeoutHandleId);
  this._mouseDownElement = args.get$thing();
  this._mouseDownTimeoutHandleId = $.window().setTimeout$2(this.get$_mouseDownTimeoutHandle(), 1000);
},
 get$_squareMouseDown: function() {
  return new $.BoundClosure(this, '_squareMouseDown$1');
},
 _squareMouseMove$1: function(args) {
  var se = args.get$thing();
  if (!$.eqB(this._mouseDownElement, se))
    this._clearTimeout$0();
},
 get$_squareMouseMove: function() {
  return new $.BoundClosure(this, '_squareMouseMove$1');
},
 _squareMouseUp$1: function(args) {
  args.get$thing();
  this._clearTimeout$0();
},
 get$_squareMouseUp: function() {
  return new $.BoundClosure(this, '_squareMouseUp$1');
},
 _mouseDownTimeoutHandle$0: function() {
  var t1 = this._mouseDownElement;
  this._click$3(t1.get$x(), t1.get$y(), true);
  this._lastHoldUnfreeze = this._mouseDownElement;
  this._clearTimeout$0();
},
 get$_mouseDownTimeoutHandle: function() {
  return new $.BoundClosure0(this, '_mouseDownTimeoutHandle$0');
},
 _clearTimeout$0: function() {
  if (!(this._mouseDownTimeoutHandleId == null)) {
    $.window().clearTimeout$1(this._mouseDownTimeoutHandleId);
    this._mouseDownTimeoutHandleId = null;
  }
  this._mouseDownElement = null;
},
 _toggleFlag$2: function(x, y) {
  var ss = this.get$game().getSquareState$2(x, y);
  if ($.eqB(ss, $.CONSTANT18)) {
    this.get$game().setFlag$3(x, y, true);
    $.get$GameAudio__audioEventHandle().fireEvent$1("flag");
    return true;
  } else if ($.eqB(ss, $.CONSTANT20)) {
    this.get$game().setFlag$3(x, y, false);
    $.get$GameAudio__audioEventHandle().fireEvent$1("unflag");
    return true;
  }
  return false;
},
 _click$3: function(x, y, alt) {
  var ss, t1, reveals, t2;
  ss = this.get$game().getSquareState$2(x, y);
  t1 = alt === true;
  if (t1)
    if ($.eqB(ss, $.CONSTANT18) || $.eqB(ss, $.CONSTANT20)) {
      this._toggleFlag$2(x, y);
      reveals = null;
    } else if ($.eqB(ss, $.CONSTANT19))
      if (this.get$game().canReveal$2(x, y) === true) {
        t2 = $.$$(this.get$game().get$field().getAdjacentIndices$2(x, y));
        t2 = $.getInterceptor$JSArray(t2).map$1(t2, new $.GameElement__click_anon(this));
        this._startDartAnimation$1($.getInterceptor$JSArray(t2).filter$1(t2, new $.GameElement__click_anon0(this)).toList$0());
        reveals = this.get$game().reveal$2(x, y);
      } else
        reveals = null;
    else
      reveals = null;
  else if ($.eqB(ss, $.CONSTANT18)) {
    this._startDartAnimation$1([$.Coordinate$(x, y)]);
    reveals = this.get$game().reveal$2(x, y);
  } else
    reveals = null;
  if (!(reveals == null) && $.gtB($.getInterceptor$JSStringJSArray(reveals).get$length(reveals), 0)) {
    if (!t1)
      $.getInterceptor$JSStringJSArray(reveals).operator$index$1(reveals, 0);
    this._startPopAnimation$2($.Coordinate$(x, y), reveals);
  } else if ($.eqB(this.get$game().get$state(), $.CONSTANT22))
    this._startPopAnimation$1($.Coordinate$(x, y));
},
 _updateSize$2: function(w, h) {
  var t1, sizeX, sizeY, t2;
  t1 = $.CONSTANT14.width;
  sizeX = $.GameElement__getScale(w, t1, 1344);
  sizeY = $.GameElement__getScale(h, $.CONSTANT14.height, 1344);
  t2 = $.Size$(sizeX, sizeY);
  this.set$size(t2);
  this._liblib2$_canvas.set$size(t2);
  this._scale = $.div(sizeX, t1);
  this._scaledBoardOffset = $.CONSTANT15.scale$1(this._scale);
  t2 = this._scale;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  this._scaledInnerBox = $.Box$(256 * t2, 0, $.sub(sizeX, 512 * t2), sizeY);
},
 GameElement$1: function(textureData) {
  var t1, t2, t3;
  t1 = this._liblib2$_canvas;
  t1.registerParent$1(this);
  t1.add$1(this._background);
  t1.add$1(this._boardElement);
  t2 = this._newGameElement;
  t1.add$1(t2);
  t1.add$1(this._scoreElement);
  t1.add$1(this._popAnimationLayer);
  t3 = this._titleElement;
  t1.add$1(t3);
  t1.add$1(this._dartAnimationLayer);
  t2 = t2.get$clicked();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.anon3());
  $.ClickManager_setClickable(t3, true);
  $.ClickManager_addHandler(t3, new $.anon4());
}
};

$$.GameRoot = {'': function GameRoot(_liblib2$_stage, _liblib2$_canvas, _gameElement, _clickMan, _gameElementTx, _frameRequested, _liblib3$_width, _liblib3$_height, _bombCount, _gameStorage, _game, _updatedEventId, _gameStateChangedId, _setIntervalId) {
  this._liblib2$_stage = _liblib2$_stage;
  this._liblib2$_canvas = _liblib2$_canvas;
  this._gameElement = _gameElement;
  this._clickMan = _clickMan;
  this._gameElementTx = _gameElementTx;
  this._frameRequested = _frameRequested;
  this._liblib3$_width = _liblib3$_width;
  this._liblib3$_height = _liblib3$_height;
  this._bombCount = _bombCount;
  this._gameStorage = _gameStorage;
  this._game = _game;
  this._updatedEventId = _updatedEventId;
  this._gameStateChangedId = _gameStateChangedId;
  this._setIntervalId = _setIntervalId;
},
 'super': 'GameManager',
 get$_liblib2$_canvas: function() { return this._liblib2$_canvas; },
 get$_gameElement: function() { return this._gameElement; },
 newGame$0: function() {
  $.GameManager.prototype.newGame$0.call(this);
  var t1 = $.GameManager.prototype.get$game.call(this);
  this._gameElement.set$game(t1);
  this._requestFrame$0();
},
 onGameStateChanged$1: function(newState) {
  var t1, t2;
  switch (newState) {
    case $.CONSTANT21:
      $.get$GameAudio__audioEventHandle().fireEvent$1("win");
      break;
  }
  t1 = newState.name;
  t2 = this.get$game().get$field();
  $.trackAnalyticsEvent("game", t1, $.getInterceptor(t2).toString$0(t2), null);
},
 onNewBestTime$1: function(value) {
  var t1 = this.get$game().get$field();
  $.trackAnalyticsEvent("game", "record", $.getInterceptor(t1).toString$0(t1), value);
},
 _updateCanvasSize$0: function() {
  var windowSize, t1, t2, t3, t4, delta, t5, t6;
  windowSize = $.Size$($.window().get$innerWidth(), $.window().get$innerHeight());
  t1 = windowSize.width;
  t2 = this._gameElement;
  t3 = $.CONSTANT4.toInt$0($.min(t1, t2.get$width()));
  t4 = this._liblib2$_canvas;
  t4.set$width(t3);
  t3 = windowSize.height;
  t4.set$height($.CONSTANT4.toInt$0($.min(t3, t2.get$height())));
  delta = $.Vector$($.sub(t1, t4.get$width()), $.sub(t3, t4.get$height())).scale$1(0.5);
  t5 = delta.get$x();
  t6 = $.S($.getInterceptor$JSNumber(t5).toInt$0(t5)) + "px";
  t4.get$style().set$left(t6);
  t6 = $.S($.CONSTANT4.toInt$0($.min(delta.get$y(), 20))) + "px";
  t4.get$style().set$top(t6);
  this._requestFrame$0();
},
 _requestFrame$0: function() {
  if (!this._frameRequested) {
    this._frameRequested = true;
    $.window().requestAnimationFrame$1(this.get$_onFrame());
  }
},
 _onFrame$1: function(time) {
  var t1, boardInnerBox, t2, prettyScale, newDimensions, delta, t3, updated;
  t1 = this._gameElement;
  boardInnerBox = t1._scaledInnerBox;
  t2 = this._liblib2$_stage;
  prettyScale = $.min(1, $.min($.div(t2.get$size().get$width(), boardInnerBox.get$width()), $.div(t2.get$size().get$height(), boardInnerBox.get$height())));
  newDimensions = $.mul(t1.get$size(), prettyScale);
  delta = $.Vector$($.sub(t2.get$size().get$width(), newDimensions.get$width()), $.min(40, $.sub(t2.get$size().get$height(), newDimensions.get$height()))).scale$1(0.5).scale$1(1 / prettyScale);
  t3 = this._gameElementTx;
  t3.setToScale$2(prettyScale, prettyScale);
  t3.translate$2(delta.get$x(), delta.get$y());
  updated = t2.draw$0();
  this._frameRequested = false;
  if (updated === true)
    this._requestFrame$0();
},
 get$_onFrame: function() {
  return new $.BoundClosure(this, '_onFrame$1');
},
 updateClock$0: function() {
  this._requestFrame$0();
  $.GameManager.prototype.updateClock$0.call(this);
},
 get$updateClock: function() {
  return new $.BoundClosure0(this, 'updateClock$0');
},
 gameUpdated$1: function(args) {
  this._requestFrame$0();
},
 get$gameUpdated: function() {
  return new $.BoundClosure(this, 'gameUpdated$1');
},
 _stageInvalidated$1: function(args) {
  this._requestFrame$0();
},
 get$_stageInvalidated: function() {
  return new $.BoundClosure(this, '_stageInvalidated$1');
},
 _mouseMoveHandler$1: function(args) {
  var t1, se, showPointer;
  if (this.get$game().get$gameEnded() !== true) {
    t1 = args.get$thing();
    t1 = typeof t1 === 'object' && t1 !== null && !!t1.is$SquareElement;
  } else
    t1 = false;
  if (t1) {
    se = args.get$thing();
    showPointer = this.get$game().canReveal$2(se.get$x(), se.get$y());
  } else {
    t1 = args.get$thing();
    if (typeof t1 === 'object' && t1 !== null && !!t1.is$NewGameElement)
      showPointer = true;
    else {
      t1 = args.get$thing();
      showPointer = typeof t1 === 'object' && t1 !== null && !!t1.is$GameTitleElement && true;
    }
  }
  t1 = showPointer === true ? "pointer" : "inherit";
  this._liblib2$_canvas.get$style().set$cursor(t1);
},
 get$_mouseMoveHandler: function() {
  return new $.BoundClosure(this, '_mouseMoveHandler$1');
},
 _mouseOutHandler$1: function(args) {
  var t1 = "inherit";
  this._liblib2$_canvas.get$style().set$cursor(t1);
},
 get$_mouseOutHandler: function() {
  return new $.BoundClosure(this, '_mouseOutHandler$1');
},
 GameRoot$_internal$7: function(width, height, bombCount, _canvas, _stage, gameElement, _clickMan) {
  var t1, t2, t3;
  t1 = this._gameElement;
  t1.setGameManager$1(this);
  t2 = this._liblib2$_stage;
  t3 = t2.get$invalidated();
  $.getInterceptor$JSArray(t3).add$1(t3, this.get$_stageInvalidated());
  t3 = t1.get$newGameClick();
  $.getInterceptor$JSArray(t3).add$1(t3, new $.anon0(this));
  $.ClickManager_addMouseMoveHandler(t1, this.get$_mouseMoveHandler());
  $.ClickManager_addMouseOutHandler(t2, this.get$_mouseOutHandler());
  t2 = $.window().get$on().get$resize();
  $.getInterceptor$JSArray(t2).add$1(t2, new $.anon1(this));
  this._updateCanvasSize$0();
}
};

$$.NewGameElement = {'': function NewGameElement(_clickedEvent, _transforms, _invalidatedEventHandle, _cacheCanvas, _width, _height, _alpha, _cacheEnabled, _lastDrawTime, _parent, _propertyValues, _eventHandlers, _disposed) {
  this._clickedEvent = _clickedEvent;
  this._transforms = _transforms;
  this._invalidatedEventHandle = _invalidatedEventHandle;
  this._cacheCanvas = _cacheCanvas;
  this._width = _width;
  this._height = _height;
  this._alpha = _alpha;
  this._cacheEnabled = _cacheEnabled;
  this._lastDrawTime = _lastDrawTime;
  this._parent = _parent;
  this._propertyValues = _propertyValues;
  this._eventHandlers = _eventHandlers;
  this._disposed = _disposed;
},
 'super': 'Thing',
 get$_clickedEvent: function() { return this._clickedEvent; },
 get$clicked: function() {
  return this._clickedEvent;
},
 drawOverride$1: function(ctx) {
  var texture = $.Mouse_isMouseDirectlyOver(this) === true ? "button_new_game_clicked.png" : "button_new_game.png";
  this.get$_liblib2$_textureData().drawTextureKeyAt$2(ctx, texture);
},
 get$_liblib2$_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$CanvasThing').get$parent();
},
 get$_liblib2$_textureData: function() {
  return this.get$_liblib2$_parent().get$_liblib2$_textureData();
},
 get$_liblib2$_game: function() {
  return this.get$_liblib2$_parent().get$_liblib2$_game();
},
 _mouseDirectlyOver$1: function(args) {
  this.invalidateDraw$0();
},
 get$_mouseDirectlyOver: function() {
  return new $.BoundClosure(this, '_mouseDirectlyOver$1');
},
 NewGameElement$0: function() {
  $.ClickManager_setClickable(this, true);
  $.ClickManager_addHandler(this, new $.anon2(this));
  $.get$Mouse_isMouseDirectlyOverProperty().addHandler$2(this, this.get$_mouseDirectlyOver());
},
 is$NewGameElement: true
};

$$.ScoreElement = {'': function ScoreElement(_gameManager, _clockStr, _bombsStr, _bestTimeStr, _textSize, _transforms, _invalidatedEventHandle, _cacheCanvas, _width, _height, _alpha, _cacheEnabled, _lastDrawTime, _parent, _propertyValues, _eventHandlers, _disposed) {
  this._gameManager = _gameManager;
  this._clockStr = _clockStr;
  this._bombsStr = _bombsStr;
  this._bestTimeStr = _bestTimeStr;
  this._textSize = _textSize;
  this._transforms = _transforms;
  this._invalidatedEventHandle = _invalidatedEventHandle;
  this._cacheCanvas = _cacheCanvas;
  this._width = _width;
  this._height = _height;
  this._alpha = _alpha;
  this._cacheEnabled = _cacheEnabled;
  this._lastDrawTime = _lastDrawTime;
  this._parent = _parent;
  this._propertyValues = _propertyValues;
  this._eventHandlers = _eventHandlers;
  this._disposed = _disposed;
},
 'super': 'Thing',
 setGameManager$1: function(manager) {
  this._gameManager = manager;
  this.invalidateDraw$0();
},
 update$0: function() {
  var t1, newBombStr, newClockStr, bestTimeStr;
  t1 = this.get$_liblib2$_game().get$bombsLeft();
  newBombStr = $.getInterceptor(t1).toString$0(t1);
  if (!$.eqB(newBombStr, this._bombsStr)) {
    this._bombsStr = newBombStr;
    this.invalidateDraw$0();
  }
  if (!(this.get$_liblib2$_game().get$duration() == null)) {
    t1 = $.mul(this.get$_liblib2$_game().get$duration().get$inMilliseconds(), 0.001);
    newClockStr = $.getInterceptor$JSNumber(t1).toStringAsFixed$1(t1, 1);
  } else
    newClockStr = "";
  if (!$.eqB(newClockStr, this._clockStr)) {
    this._clockStr = newClockStr;
    this.invalidateDraw$0();
  }
  if (!(this._gameManager.get$bestTimeMilliseconds() == null)) {
    t1 = $.mul(this._gameManager.get$bestTimeMilliseconds(), 0.001);
    bestTimeStr = $.getInterceptor$JSNumber(t1).toStringAsFixed$1(t1, 1);
  } else
    bestTimeStr = null;
  if (!$.eqB(this._bestTimeStr, bestTimeStr)) {
    this._bestTimeStr = bestTimeStr;
    this.invalidateDraw$0();
  }
  $.Thing.prototype.update$0.call(this);
},
 drawOverride$1: function(ctx) {
  var t1, rowHeight, textSize;
  t1 = this.get$height();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  rowHeight = 0.33 * t1;
  ctx.set$font($.S($.CONSTANT7.toInt$0(rowHeight * 0.9)) + "px Slackey");
  ctx.set$textBaseline("middle");
  textSize = this._getTextSize$1(ctx);
  ctx.set$fillStyle("black");
  ctx.set$textAlign("right");
  t1 = 0.5 * rowHeight;
  ctx.fillText$3("BOMBS LEFT:", textSize, t1);
  ctx.set$textAlign("left");
  ctx.fillText$3(this._bombsStr, $.add(textSize, 15), t1);
  ctx.set$textAlign("right");
  t1 = 1.5 * rowHeight;
  ctx.fillText$3("TIME:", textSize, t1);
  ctx.set$textAlign("left");
  ctx.fillText$3(this._clockStr, $.add(textSize, 15), t1);
  if (!(this._bestTimeStr == null)) {
    ctx.set$textAlign("right");
    t1 = 2.5 * rowHeight;
    ctx.fillText$3("RECORD:", textSize, t1);
    ctx.set$textAlign("left");
    ctx.fillText$3(this._bestTimeStr, $.add(textSize, 15), t1);
  }
},
 _getTextSize$1: function(ctx) {
  if (this._textSize == null)
    this._textSize = ctx.measureText$1("BOMBS LEFT:").get$width();
  return this._textSize;
},
 get$_liblib2$_game: function() {
  return this._gameManager.get$game();
}
};

$$.SquareElement = {'': function SquareElement(x, y, _lastDrawingState, _transforms, _invalidatedEventHandle, _cacheCanvas, _width, _height, _alpha, _cacheEnabled, _lastDrawTime, _parent, _propertyValues, _eventHandlers, _disposed) {
  this.x = x;
  this.y = y;
  this._lastDrawingState = _lastDrawingState;
  this._transforms = _transforms;
  this._invalidatedEventHandle = _invalidatedEventHandle;
  this._cacheCanvas = _cacheCanvas;
  this._width = _width;
  this._height = _height;
  this._alpha = _alpha;
  this._cacheEnabled = _cacheEnabled;
  this._lastDrawTime = _lastDrawTime;
  this._parent = _parent;
  this._propertyValues = _propertyValues;
  this._eventHandlers = _eventHandlers;
  this._disposed = _disposed;
},
 'super': 'Thing',
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 update$0: function() {
  if (!$.eqB(this._lastDrawingState, this.get$_squareState())) {
    this._lastDrawingState = this.get$_squareState();
    this.invalidateDraw$0();
  }
},
 drawOverride$1: function(ctx) {
  var textureName, t1;
  textureName = null;
  switch (this._lastDrawingState) {
    case $.CONSTANT18:
      textureName = this._getHiddenTexture$0();
      break;
    case $.CONSTANT20:
      textureName = "balloon_tagged_frozen.png";
      break;
    case $.CONSTANT19:
      t1 = this.get$_adjacentCount();
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= $.CONSTANT28.length)
        throw $.ioore(t1);
      textureName = $.S($.CONSTANT28[t1]) + ".png";
      break;
    case $.CONSTANT24:
      textureName = "crater_b.png";
      break;
    case $.CONSTANT26:
      textureName = "balloon_tagged_bomb.png";
      break;
  }
  this.get$_liblib2$_textureData().drawTextureKeyAt$2(ctx, textureName);
},
 toString$0: function() {
  return "Square at [" + $.S(this.x) + ", " + $.S(this.y) + "]";
},
 _getHiddenTexture$0: function() {
  if ($.eqB(this.get$_liblib2$_game().get$state(), $.CONSTANT22)) {
    var index = $.mod($.add(this.x, this.y), 4);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= $.CONSTANT29.length)
      throw $.ioore(index);
    return $.CONSTANT29[index];
  } else
    return "balloon.png";
},
 get$_squareState: function() {
  return this.get$_liblib2$_game().getSquareState$2(this.x, this.y);
},
 get$_adjacentCount: function() {
  return this.get$_liblib2$_game().get$field().getAdjacentCount$2(this.x, this.y);
},
 get$_board: function() {
  return this.get$parent();
},
 get$_liblib2$_textureData: function() {
  return this.get$_board().get$_liblib2$_textureData();
},
 get$_liblib2$_game: function() {
  return this.get$_board().get$_liblib2$_game();
},
 SquareElement$2: function(x, y) {
  $.ClickManager_setClickable(this, true);
},
 is$SquareElement: true
};

$$.GameTitleElement = {'': function GameTitleElement(_transforms, _invalidatedEventHandle, _cacheCanvas, _width, _height, _alpha, _cacheEnabled, _lastDrawTime, _parent, _propertyValues, _eventHandlers, _disposed) {
  this._transforms = _transforms;
  this._invalidatedEventHandle = _invalidatedEventHandle;
  this._cacheCanvas = _cacheCanvas;
  this._width = _width;
  this._height = _height;
  this._alpha = _alpha;
  this._cacheEnabled = _cacheEnabled;
  this._lastDrawTime = _lastDrawTime;
  this._parent = _parent;
  this._propertyValues = _propertyValues;
  this._eventHandlers = _eventHandlers;
  this._disposed = _disposed;
},
 'super': 'Thing',
 drawOverride$1: function(ctx) {
  this.get$_liblib2$_textureData().drawTextureKeyAt$2(ctx, "logo_win.png");
},
 get$_liblib2$_parent: function() {
  return $.propertyTypeCast(this.get$parent(), 'is$CanvasThing').get$parent();
},
 get$_liblib2$_textureData: function() {
  return this.get$_liblib2$_parent().get$_liblib2$_textureData();
},
 get$_liblib2$_game: function() {
  return this.get$_liblib2$_parent().get$_liblib2$_game();
},
 _mouseDirectlyOver$1: function(args) {
  this.invalidateDraw$0();
},
 get$_mouseDirectlyOver: function() {
  return new $.BoundClosure(this, '_mouseDirectlyOver$1');
},
 is$GameTitleElement: true
};

$$.GameStorage = {'': function GameStorage(_bestTimeUpdated, _storage) {
  this._bestTimeUpdated = _bestTimeUpdated;
  this._storage = _storage;
},
 'super': 'Object',
 recordState$1: function(state) {
  var t1 = state.name;
  this._setIntValue$2(t1, $.add(this._getIntValue$1(t1), 1));
},
 updateBestTime$1: function(game) {
  var w, h, m, duration, key, currentScore;
  w = game.get$field().get$width();
  h = game.get$field().get$height();
  m = game.get$field().get$bombCount();
  duration = game.get$duration().get$inMilliseconds();
  key = "w" + $.S(w) + "-h" + $.S(h) + "-m" + $.S(m);
  currentScore = this._getIntValue$2(key, null);
  if (currentScore == null || $.gtB(currentScore, duration)) {
    this._setIntValue$2(key, duration);
    this._bestTimeUpdated.fireEvent$1(null);
    return true;
  } else
    return false;
},
 getBestTimeMilliseconds$3: function(width, height, bombCount) {
  return this._getIntValue$2("w" + $.S(width) + "-h" + $.S(height) + "-m" + $.S(bombCount), null);
},
 toString$0: function() {
  return $.Maps_mapToString(this._storage);
},
 _getIntValue$2: function(key, defaultValue) {
  var t1, strValue;
  t1 = this._storage;
  strValue = $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, key);
  if (strValue == null)
    return defaultValue;
  else
    return $.int_parse(strValue);
},
 _getIntValue$1: function(key) {
  return this._getIntValue$2(key, 0);
},
 _setIntValue$2: function(key, value) {
  var t1, t2;
  t1 = value == null;
  t2 = this._storage;
  if (t1)
    $.indexSet(t2, key, null);
  else
    $.indexSet(t2, key, $.getInterceptor(value).toString$0(value));
}
};

$$.GameManager = {'': function GameManager(_game) {
  this._game = _game;
},
 'super': 'Object',
 get$_game: function() { return this._game; },
 get$game: function() {
  return this._game;
},
 get$bestTimeMilliseconds: function() {
  return this._gameStorage.getBestTimeMilliseconds$3(this._liblib3$_width, this._liblib3$_height, this._bombCount);
},
 newGame$0: function() {
  var t1, t2;
  if (!(this._updatedEventId == null)) {
    this._game.get$updated().remove$1(this._updatedEventId);
    this._game.get$stateChanged().remove$1(this._gameStateChangedId);
    this._gameStateChanged$1($.CONSTANT17);
  }
  this._game = $.Game$($.Field_Field(this._bombCount, this._liblib3$_width, this._liblib3$_height, null));
  t1 = this._game.get$updated();
  this._updatedEventId = $.getInterceptor$JSArray(t1).add$1(t1, this.get$gameUpdated());
  t2 = this._game.get$stateChanged();
  this._gameStateChangedId = $.getInterceptor$JSArray(t2).add$1(t2, this.get$_gameStateChanged());
},
 _liblib3$_click$3: function(x, y, alt) {
  var ss = this._game.getSquareState$2(x, y);
  if (alt === true) {
    if ($.eqB(ss, $.CONSTANT18))
      this._game.setFlag$3(x, y, true);
    else if ($.eqB(ss, $.CONSTANT20))
      this._game.setFlag$3(x, y, false);
    else if ($.eqB(ss, $.CONSTANT19))
      this._game.reveal$2(x, y);
  } else if ($.eqB(ss, $.CONSTANT18))
    this._game.reveal$2(x, y);
},
 updateClock$0: function() {
  if (this._setIntervalId == null && $.eqB(this._game.get$state(), $.CONSTANT23))
    this._setIntervalId = $.window().setInterval$2(this.get$updateClock(), 1000);
  else if (!(this._setIntervalId == null) && !$.eqB(this._game.get$state(), $.CONSTANT23)) {
    $.window().clearInterval$1(this._setIntervalId);
    this._setIntervalId = null;
  }
},
 get$updateClock: function() {
  return new $.BoundClosure0(this, 'updateClock$0');
},
 onNewBestTime$1: function(value) {
},
 onGameStateChanged$1: function(value) {
},
 _gameStateChanged$1: function(newState) {
  var t1 = this._gameStorage;
  t1.recordState$1(newState);
  if ($.eqB(newState, $.CONSTANT21))
    if (t1.updateBestTime$1(this._game) === true)
      this.onNewBestTime$1(this.get$bestTimeMilliseconds());
  this.updateClock$0();
  this.onGameStateChanged$1(newState);
},
 get$_gameStateChanged: function() {
  return new $.BoundClosure(this, '_gameStateChanged$1');
},
 GameManager$3: function(_width, _height, _bombCount) {
  this.newGame$0();
}
};

$$.Field = {'': function Field(bombCount, _adjacents, width, height, _source) {
  this.bombCount = bombCount;
  this._adjacents = _adjacents;
  this.width = width;
  this.height = height;
  this._source = _source;
},
 'super': 'Array2d',
 get$bombCount: function() { return this.bombCount; },
 getAdjacentCount$2: function(x, y) {
  var t1, val, t2;
  if (this.get$2(x, y) === true)
    return;
  t1 = this._adjacents;
  val = t1.get$2(x, y);
  if (val == null) {
    for (t2 = this.getAdjacentIndices$2(x, y), t2 = $.getInterceptor$JSArray(t2).iterator$0(t2), val = 0; t2.get$hasNext() === true;)
      if (this.operator$index$1(t2.next$0()) === true)
        ++val;
    t1.set$3(x, y, val);
  }
  return val;
},
 toString$0: function() {
  return "w" + $.S(this.width) + "h" + $.S(this.height) + "m" + $.S(this.bombCount);
},
 Field$_internal$3: function(bombCount, cols, source) {
  var t1, count;
  for (t1 = this.iterator$0(), count = 0; t1.get$hasNext() === true;)
    if (t1.next$0() === true)
      ++count;
}
};

$$.Game = {'': function Game(field, _states, _updatedEvent, _gameStateEvent, _state, _bombsLeft, _revealsLeft, _startTime, _endTime) {
  this.field = field;
  this._states = _states;
  this._updatedEvent = _updatedEvent;
  this._gameStateEvent = _gameStateEvent;
  this._state = _state;
  this._bombsLeft = _bombsLeft;
  this._revealsLeft = _revealsLeft;
  this._startTime = _startTime;
  this._endTime = _endTime;
},
 'super': 'Object',
 get$field: function() { return this.field; },
 get$bombsLeft: function() {
  return this._bombsLeft;
},
 get$state: function() {
  return this._state;
},
 get$updated: function() {
  return this._updatedEvent;
},
 get$stateChanged: function() {
  return this._gameStateEvent;
},
 getSquareState$2: function(x, y) {
  return this._states.get$2(x, y);
},
 get$gameEnded: function() {
  return $.eqB(this._state, $.CONSTANT21) || $.eqB(this._state, $.CONSTANT22);
},
 get$duration: function() {
  if (this._startTime == null)
    return;
  else {
    var end = this._endTime;
    if (end == null)
      end = $.Date_Date$now();
    return end.difference$1(this._startTime);
  }
},
 setFlag$3: function(x, y, value) {
  var t1, currentSS;
  this._ensureStarted$0();
  t1 = this._states;
  currentSS = t1.get$2(x, y);
  if (value) {
    $.require($.eq(currentSS, $.CONSTANT18), null);
    t1.set$3(x, y, $.CONSTANT20);
    this._bombsLeft = $.sub(this._bombsLeft, 1);
  } else {
    $.require($.eq(currentSS, $.CONSTANT20), null);
    t1.set$3(x, y, $.CONSTANT18);
    this._bombsLeft = $.add(this._bombsLeft, 1);
  }
  this._updatedEvent.fireEvent$1($.CONSTANT12);
},
 canReveal$2: function(x, y) {
  if ($.eqB(this._states.get$2(x, y), $.CONSTANT18))
    return true;
  else if (this._canChord$2(x, y) === true)
    return true;
  return false;
},
 reveal$2: function(x, y) {
  var reveals;
  this._ensureStarted$0();
  $.require(this.canReveal$2(x, y), "Item cannot be revealed.");
  if ($.eqB(this._states.get$2(x, y), $.CONSTANT18))
    if (this.field.get$2(x, y) === true) {
      this._setLost$0();
      reveals = [];
    } else {
      reveals = this._doReveal$2(x, y);
      if (typeof reveals !== 'object' || reveals === null || reveals.constructor !== Array || !!reveals.fixed$length)
        return this.reveal$2$bailout(1, reveals);
    }
  else
    reveals = this._canChord$2(x, y) === true ? this._doChord$2(x, y) : null;
  this._updatedEvent.fireEvent$1($.CONSTANT12);
  if ($.eqB(this._state, $.CONSTANT22))
    return;
  else
    return reveals;
},
 reveal$2$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      reveals = env0;
      break;
  }
  switch (state0) {
    case 0:
      this._ensureStarted$0();
      $.require(this.canReveal$2(x, y), "Item cannot be revealed.");
    case 1:
      var reveals;
      if (state0 === 1 || state0 === 0 && $.eqB(this._states.get$2(x, y), $.CONSTANT18))
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 0 && this.field.get$2(x, y) === true) {
              this._setLost$0();
              reveals = [];
            } else
              switch (state0) {
                case 0:
                  reveals = this._doReveal$2(x, y);
                case 1:
                  state0 = 0;
              }
        }
      else
        reveals = this._canChord$2(x, y) === true ? this._doChord$2(x, y) : null;
      this._updatedEvent.fireEvent$1($.CONSTANT12);
      if ($.eqB(this._state, $.CONSTANT22))
        return;
      else
        return reveals;
  }
},
 _canChord$2: function(x, y) {
  var adjCount;
  if ($.eqB(this._states.get$2(x, y), $.CONSTANT19)) {
    adjCount = this.field.getAdjacentCount$2(x, y);
    if ($.gtB(adjCount, 0))
      if ($.gtB(this._getAdjacentCount$3(x, y, $.CONSTANT18), 0))
        if ($.eqB(this._getAdjacentCount$3(x, y, $.CONSTANT20), adjCount))
          return true;
  }
  return false;
},
 _doChord$2: function(x, y) {
  var t1, flagged, hidden, t3, t2, failed, t4, reveals, c;
  t1 = this._states;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._doChord$2$bailout(1, x, y, t1);
  t1.get$2(x, y);
  flagged = $.List_List(null);
  hidden = $.List_List(null);
  t3 = this.field;
  if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
    return this._doChord$2$bailout(2, x, y, flagged, t3, hidden, t1);
  t3.getAdjacentCount$2(x, y);
  for (t2 = t3.getAdjacentIndices$2(x, y), t2 = $.getInterceptor$JSArray(t2).iterator$0(t2), failed = false; t2.get$hasNext() === true;) {
    t4 = t2.next$0();
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t1.length)
      throw $.ioore(t4);
    if ($.eqB(t1[t4], $.CONSTANT18)) {
      hidden.push(t4);
      if (t4 >= t3.length)
        throw $.ioore(t4);
      if (t3[t4] === true)
        failed = true;
    } else {
      if (t4 >= t1.length)
        throw $.ioore(t4);
      if ($.eqB(t1[t4], $.CONSTANT20))
        flagged.push(t4);
    }
  }
  reveals = [];
  if (failed)
    this._setLost$0();
  else
    for (t1 = $.CONSTANT1.iterator$0(hidden); t1.get$hasNext() === true;) {
      c = t3.getCoordinate$1(t1.next$0());
      if (this.canReveal$2(c.get$item1(), c.get$item2()) === true)
        $.CONSTANT1.addAll$1(reveals, this.reveal$2(c.get$item1(), c.get$item2()));
    }
  return reveals;
},
 _doChord$2$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t1 = env2;
      y = env1;
      x = env0;
      break;
    case 2:
      t1 = env5;
      hidden = env4;
      t3 = env3;
      flagged = env2;
      y = env1;
      x = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._states;
    case 1:
      state0 = 0;
      t1.get$2(x, y);
      flagged = $.List_List(null);
      hidden = $.List_List(null);
      t3 = this.field;
    case 2:
      var t1, y, x, flagged, hidden, t3, t2, t4, t5, failed, t6, reveals, c;
      state0 = 0;
      t3.getAdjacentCount$2(x, y);
      for (t2 = t3.getAdjacentIndices$2(x, y), t2 = $.getInterceptor$JSArray(t2).iterator$0(t2), t4 = $.getInterceptor$JSStringJSArray(t3), t5 = $.getInterceptor$JSStringJSArray(t1), failed = false; t2.get$hasNext() === true;) {
        t6 = t2.next$0();
        if ($.eqB(t5.operator$index$1(t1, t6), $.CONSTANT18)) {
          hidden.push(t6);
          if (t4.operator$index$1(t3, t6) === true)
            failed = true;
        } else if ($.eqB(t5.operator$index$1(t1, t6), $.CONSTANT20))
          flagged.push(t6);
      }
      reveals = [];
      if (failed)
        this._setLost$0();
      else
        for (t1 = $.CONSTANT1.iterator$0(hidden); t1.get$hasNext() === true;) {
          c = t3.getCoordinate$1(t1.next$0());
          if (this.canReveal$2(c.get$item1(), c.get$item2()) === true)
            $.CONSTANT1.addAll$1(reveals, this.reveal$2(c.get$item1(), c.get$item2()));
        }
      return reveals;
  }
},
 _doReveal$2: function(x, y) {
  var t1, t3, reveals, t2, t4, c;
  t1 = this._states;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._doReveal$2$bailout(1, x, y, t1);
  t1.set$3(x, y, $.CONSTANT19);
  t3 = this._revealsLeft;
  if (typeof t3 !== 'number')
    return this._doReveal$2$bailout(2, x, y, t1, t3);
  this._revealsLeft = t3 - 1;
  reveals = [$.Coordinate$(x, y)];
  t2 = this._revealsLeft;
  if (typeof t2 !== 'number')
    return this._doReveal$2$bailout(3, x, y, t2, t1, reveals);
  if (t2 === 0)
    this._setWon$0();
  else {
    t2 = this.field;
    t3 = t2.getAdjacentCount$2(x, y);
    if (typeof t3 !== 'number')
      return this._doReveal$2$bailout(4, x, t2, y, t3, t1, reveals);
    if (t3 === 0)
      for (t3 = t2.getAdjacentIndices$2(x, y), t3 = $.getInterceptor$JSArray(t3).iterator$0(t3); t3.get$hasNext() === true;) {
        t4 = t3.next$0();
        if (t4 !== (t4 | 0))
          throw $.iae(t4);
        if (t4 < 0 || t4 >= t1.length)
          throw $.ioore(t4);
        if ($.eqB(t1[t4], $.CONSTANT18)) {
          c = t2.getCoordinate$1(t4);
          $.CONSTANT1.addAll$1(reveals, this._doReveal$2(c.get$item1(), c.get$item2()));
        }
      }
  }
  return reveals;
},
 _doReveal$2$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      t1 = env2;
      y = env1;
      x = env0;
      break;
    case 2:
      t3 = env3;
      t1 = env2;
      y = env1;
      x = env0;
      break;
    case 3:
      reveals = env4;
      t1 = env3;
      t2 = env2;
      y = env1;
      x = env0;
      break;
    case 4:
      reveals = env5;
      t1 = env4;
      t3 = env3;
      y = env2;
      t2 = env1;
      x = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._states;
    case 1:
      state0 = 0;
      t1.set$3(x, y, $.CONSTANT19);
      t3 = this._revealsLeft;
    case 2:
      state0 = 0;
      this._revealsLeft = $.sub(t3, 1);
      reveals = [$.Coordinate$(x, y)];
      t2 = this._revealsLeft;
    case 3:
      state0 = 0;
    case 4:
      var t1, y, x, t3, reveals, t2, t4, t5, c;
      if (state0 === 0 && $.eqB(t2, 0))
        this._setWon$0();
      else
        switch (state0) {
          case 0:
            t2 = this.field;
            t3 = t2.getAdjacentCount$2(x, y);
          case 4:
            state0 = 0;
            if ($.eqB(t3, 0))
              for (t3 = t2.getAdjacentIndices$2(x, y), t3 = $.getInterceptor$JSArray(t3).iterator$0(t3), t4 = $.getInterceptor$JSStringJSArray(t1); t3.get$hasNext() === true;) {
                t5 = t3.next$0();
                if ($.eqB(t4.operator$index$1(t1, t5), $.CONSTANT18)) {
                  c = t2.getCoordinate$1(t5);
                  $.CONSTANT1.addAll$1(reveals, this._doReveal$2(c.get$item1(), c.get$item2()));
                }
              }
        }
      return reveals;
  }
},
 _setWon$0: function() {
  var t1, t3, t5, t6, i;
  t1 = this._states;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this._setWon$0$bailout(1, t1);
  t3 = this.field;
  if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
    return this._setWon$0$bailout(2, t3, t1);
  t5 = t1.length;
  t6 = t3.length;
  i = 0;
  for (; i < t6; ++i)
    if (t3[i] === true) {
      if (i >= t5)
        throw $.ioore(i);
      t1[i] = $.CONSTANT26;
    }
  this._setState$1($.CONSTANT21);
},
 _setWon$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._states;
    case 1:
      state0 = 0;
      t3 = this.field;
    case 2:
      var t1, t3, t5, i;
      state0 = 0;
      t5 = $.getInterceptor$JSStringJSArray(t3);
      i = 0;
      for (; $.ltB(i, t5.get$length(t3)); ++i)
        if (t5.operator$index$1(t3, i) === true)
          $.indexSet(t1, i, $.CONSTANT26);
      this._setState$1($.CONSTANT21);
  }
},
 _setLost$0: function() {
  var t1, t3, t5, t6, i;
  t1 = this._states;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this._setLost$0$bailout(1, t1);
  t3 = this.field;
  if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
    return this._setLost$0$bailout(2, t3, t1);
  t5 = t1.length;
  t6 = t3.length;
  i = 0;
  for (; i < t6; ++i)
    if (t3[i] === true) {
      if (i >= t5)
        throw $.ioore(i);
      t1[i] = $.CONSTANT24;
    }
  this._setState$1($.CONSTANT22);
},
 _setLost$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._states;
    case 1:
      state0 = 0;
      t3 = this.field;
    case 2:
      var t1, t3, t5, i;
      state0 = 0;
      t5 = $.getInterceptor$JSStringJSArray(t3);
      i = 0;
      for (; $.ltB(i, t5.get$length(t3)); ++i)
        if (t5.operator$index$1(t3, i) === true)
          $.indexSet(t1, i, $.CONSTANT24);
      this._setState$1($.CONSTANT22);
  }
},
 _setState$1: function(value) {
  if (!$.eqB(this._state, value)) {
    this._state = value;
    if ($.eqB(this._state, $.CONSTANT23))
      this._startTime = $.Date_Date$now();
    else if (this.get$gameEnded() === true)
      this._endTime = $.Date_Date$now();
    this._gameStateEvent.fireEvent$1(this._state);
  }
},
 _ensureStarted$0: function() {
  if ($.eqB(this.get$state(), $.CONSTANT17))
    this._setState$1($.CONSTANT23);
},
 _getAdjacentCount$3: function(x, y, state) {
  var t1, t2, val, t3;
  t1 = this.field.getAdjacentIndices$2(x, y);
  t1 = $.getInterceptor$JSArray(t1).iterator$0(t1);
  t2 = this._states;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this._getAdjacentCount$3$bailout(1, state, t1, t2);
  val = 0;
  for (; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    if ($.eqB(t2[t3], state))
      ++val;
  }
  return val;
},
 _getAdjacentCount$3$bailout: function(state0, state, t1, t2) {
  var t4, val;
  t4 = $.getInterceptor$JSStringJSArray(t2);
  val = 0;
  for (; t1.get$hasNext() === true;)
    if ($.eqB(t4.operator$index$1(t2, t1.next$0()), state))
      ++val;
  return val;
},
 Game$1: function(field) {
  this._bombsLeft = field.get$bombCount();
  this._revealsLeft = $.sub($.getInterceptor$JSStringJSArray(field).get$length(field), field.get$bombCount());
}
};

$$.GameState = {'': function GameState(name) {
  this.name = name;
},
 'super': 'Object',
 toString$0: function() {
  return "GameState: " + $.S(this.name);
}
};

$$.SquareState = {'': function SquareState(name) {
  this.name = name;
},
 'super': 'Object',
 toString$0: function() {
  return "SquareState: " + $.S(this.name);
}
};

$$.Maps__emitMap_anon = {'': function Maps__emitMap_anon(box_0, result_1, visiting_2) {
  this.box_0 = box_0;
  this.result_1 = result_1;
  this.visiting_2 = visiting_2;
},
 'super': 'Closure',
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_0 !== true) {
    t2 = this.result_1;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t1.first_0 = false;
  t1 = this.result_1;
  t2 = this.visiting_2;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor$JSArray(t1).add$1(t1, ": ");
  $.Collections__emitObject(v, t1, t2);
}
};

$$._LinkedHashMapImpl_forEach_anon = {'': function _LinkedHashMapImpl_forEach_anon(f_0) {
  this.f_0 = f_0;
},
 'super': 'Closure',
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.DoubleLinkedQueue_length_anon = {'': function DoubleLinkedQueue_length_anon(box_0) {
  this.box_0 = box_0;
},
 'super': 'Closure',
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_0 = $.add(t1.counter_0, 1);
}
};

$$.NoSuchMethodError_toString_anon = {'': function NoSuchMethodError_toString_anon(box_0) {
  this.box_0 = box_0;
},
 'super': 'Closure',
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_1, 0)) {
    t2 = t1.sb_0;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, key);
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, ": ");
  t2 = t1.sb_0;
  $.getInterceptor$JSArray(t2).add$1(t2, $.Error_safeToString(value));
  t1.i_1 = $.add(t1.i_1, 1);
}
};

$$.ResourceLoader__getByUrl_anon = {'': function ResourceLoader__getByUrl_anon(url_0) {
  this.url_0 = url_0;
},
 'super': 'Closure',
 call$1: function(e) {
  return $.eq(e.get$url(), this.url_0);
}
};

$$._runPPW_anon = {'': function _runPPW_anon() {
},
 'super': 'Closure',
 call$1: function(args) {
  return args.preventDefault$0();
}
};

$$._runPPW_anon0 = {'': function _runPPW_anon() {
},
 'super': 'Closure',
 call$1: function(args) {
  return $._processUrlHash(true);
}
};

$$._runPPW_anon1 = {'': function _runPPW_anon() {
},
 'super': 'Closure',
 call$1: function(args) {
  return $._toggleAbout(true);
}
};

$$.getTextures_anon = {'': function getTextures_anon(frames_0, transparentElement_1) {
  this.frames_0 = frames_0;
  this.transparentElement_1 = transparentElement_1;
},
 'super': 'Closure',
 call$2: function(key, value) {
  var parsed = $.TextureInput_TextureInput$fromHash(key, value, this.transparentElement_1);
  $.indexSet(this.frames_0, key, parsed);
}
};

$$.getTextures_anon0 = {'': function getTextures_anon(frames_2, opaqueElement_3) {
  this.frames_2 = frames_2;
  this.opaqueElement_3 = opaqueElement_3;
},
 'super': 'Closure',
 call$2: function(key, value) {
  var parsed = $.TextureInput_TextureInput$fromHash(key, value, this.opaqueElement_3);
  $.indexSet(this.frames_2, key, parsed);
}
};

$$.getTextures_anon1 = {'': function getTextures_anon(transparentStaticElement_4, frames_5) {
  this.transparentStaticElement_4 = transparentStaticElement_4;
  this.frames_5 = frames_5;
},
 'super': 'Closure',
 call$2: function(key, value) {
  var parsed = $.TextureInput_TextureInput$fromHash(key, value, this.transparentStaticElement_4);
  $.indexSet(this.frames_5, key, parsed);
}
};

$$.invokeClosure_anon = {'': function invokeClosure_anon(closure_0) {
  this.closure_0 = closure_0;
},
 'super': 'Closure',
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {'': function invokeClosure_anon(closure_1, arg1_2) {
  this.closure_1 = closure_1;
  this.arg1_2 = arg1_2;
},
 'super': 'Closure',
 call$0: function() {
  return this.closure_1.call$1(this.arg1_2);
}
};

$$.invokeClosure_anon1 = {'': function invokeClosure_anon(closure_3, arg2_4, arg1_5) {
  this.closure_3 = closure_3;
  this.arg2_4 = arg2_4;
  this.arg1_5 = arg1_5;
},
 'super': 'Closure',
 call$0: function() {
  return this.closure_3.call$2(this.arg1_5, this.arg2_4);
}
};

$$.ClickManager_ClickManager_anon = {'': function ClickManager_ClickManager_anon() {
},
 'super': 'Closure',
 call$1: function(s) {
  return $.ClickManager$_internal(s);
}
};

$$.EventHandle_fireEvent_anon = {'': function EventHandle_fireEvent_anon(args_0) {
  this.args_0 = args_0;
},
 'super': 'Closure',
 call$2: function(id, handler) {
  handler.call$1(this.args_0);
}
};

$$.ClickManager__mouseDown_anon = {'': function ClickManager__mouseDown_anon() {
},
 'super': 'Closure',
 call$1: function(e) {
  return $.get$ClickManager__isClickableProperty().get$1(e);
}
};

$$.Mouse_markMouseOver_anon = {'': function Mouse_markMouseOver_anon() {
},
 'super': 'Closure',
 call$1: function(e) {
  $.get$Mouse_isMouseOverProperty().clear$1(e);
  $.get$Mouse_isMouseDirectlyOverProperty().clear$1(e);
}
};

$$.Mouse_markMouseOver_anon0 = {'': function Mouse_markMouseOver_anon() {
},
 'super': 'Closure',
 call$1: function(e) {
  $.get$Mouse_isMouseOverProperty().set$2(e, true);
}
};

$$.AffineTransform_toString_anon = {'': function AffineTransform_toString_anon() {
},
 'super': 'Closure',
 call$1: function(n) {
  return $.getInterceptor(n).toString$0(n);
}
};

$$.anon = {'': function anon() {
},
 'super': 'Closure',
 call$1: function(url) {
  return $._ResourceEntry$(url);
}
};

$$.ListBase_iterator_anon = {'': function ListBase_iterator_anon(this_0) {
  this.this_0 = this_0;
},
 'super': 'Closure',
 call$1: function(i) {
  var t1 = this.this_0;
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, i);
}
};

$$.Enumerable_single_anon = {'': function Enumerable_single_anon() {
},
 'super': 'Closure',
 call$1: function(e) {
  return true;
}
};

$$.Enumerable_firstOrDefault_anon = {'': function Enumerable_firstOrDefault_anon() {
},
 'super': 'Closure',
 call$1: function(e) {
  return true;
}
};

$$.Enumerable_map_anon = {'': function Enumerable_map_anon(f_0) {
  this.f_0 = f_0;
},
 'super': 'Closure',
 call$1: function(s) {
  return $._SelectIterator$(s, this.f_0);
}
};

$$.Enumerable_isEmpty_anon = {'': function Enumerable_isEmpty_anon() {
},
 'super': 'Closure',
 call$1: function(e) {
  return true;
}
};

$$.ClickManager__mouseUp_anon = {'': function ClickManager__mouseUp_anon() {
},
 'super': 'Closure',
 call$1: function(e) {
  return $.get$ClickManager__isClickableProperty().get$1(e);
}
};

$$.ClickManager__mouseMove_anon = {'': function ClickManager__mouseMove_anon(args_0) {
  this.args_0 = args_0;
},
 'super': 'Closure',
 call$1: function(e) {
  return $.get$ClickManager__mouseMoveEvent().fireEvent$2(e, this.args_0);
}
};

$$.anon0 = {'': function anon(this_0) {
  this.this_0 = this_0;
},
 'super': 'Closure',
 call$1: function(args) {
  var t1, t2;
  t1 = this.this_0;
  $.GameManager.prototype.newGame$0.call(t1);
  t2 = $.GameManager.prototype.get$game.call(t1);
  t1.get$_gameElement().set$game(t2);
  t1._requestFrame$0();
  return;
}
};

$$.anon1 = {'': function anon(this_1) {
  this.this_1 = this_1;
},
 'super': 'Closure',
 call$1: function(args) {
  return this.this_1._updateCanvasSize$0();
}
};

$$.ParentThing_drawOverride_anon = {'': function ParentThing_drawOverride_anon(ctx_0) {
  this.ctx_0 = ctx_0;
},
 'super': 'Closure',
 call$1: function(e) {
  return e.drawCore$1(this.ctx_0);
}
};

$$._DateImpl_toString_fourDigits = {'': function _DateImpl_toString_fourDigits() {
},
 'super': 'Closure',
 call$1: function(n) {
  var absN, sign;
  absN = $.getInterceptor$JSNumber(n).abs$0(n);
  sign = $.ltB(n, 0) ? "-" : "";
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + "0" + $.S(absN);
  if ($.geB(absN, 10))
    return sign + "00" + $.S(absN);
  return sign + "000" + $.S(absN);
}
};

$$._DateImpl_toString_threeDigits = {'': function _DateImpl_toString_threeDigits() {
},
 'super': 'Closure',
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return "0" + $.S(n);
  return "00" + $.S(n);
}
};

$$._DateImpl_toString_twoDigits = {'': function _DateImpl_toString_twoDigits() {
},
 'super': 'Closure',
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return "0" + $.S(n);
}
};

$$.ParentThing_update_anon = {'': function ParentThing_update_anon() {
},
 'super': 'Closure',
 call$1: function(e) {
  return e.update$0();
}
};

$$.AttachableObject__addHandler_anon = {'': function AttachableObject__addHandler_anon() {
},
 'super': 'Closure',
 call$0: function() {
  return $.EventHandle$();
}
};

$$.Duration_toString_threeDigits = {'': function Duration_toString_threeDigits() {
},
 'super': 'Closure',
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.gtB(n, 10))
    return "0" + $.S(n);
  return "00" + $.S(n);
}
};

$$.Duration_toString_twoDigits = {'': function Duration_toString_twoDigits() {
},
 'super': 'Closure',
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return "0" + $.S(n);
}
};

$$.anon3 = {'': function anon() {
},
 'super': 'Closure',
 call$1: function(args) {
  return $.get$GameAudio__audioEventHandle().fireEvent$1("click");
}
};

$$.anon4 = {'': function anon() {
},
 'super': 'Closure',
 call$1: function(args) {
  return $.get$_titleClickedEventHandle().fireEvent$1($.CONSTANT12);
}
};

$$.anon2 = {'': function anon(this_0) {
  this.this_0 = this_0;
},
 'super': 'Closure',
 call$1: function(args) {
  return this.this_0.get$_clickedEvent().fireEvent$1($.CONSTANT12);
}
};

$$.GameElement__click_anon = {'': function GameElement__click_anon(this_0) {
  this.this_0 = this_0;
},
 'super': 'Closure',
 call$1: function(i) {
  var t = this.this_0.get$game().get$field().getCoordinate$1(i);
  return $.Coordinate$(t.get$item1(), t.get$item2());
}
};

$$.GameElement__click_anon0 = {'': function GameElement__click_anon(this_1) {
  this.this_1 = this_1;
},
 'super': 'Closure',
 call$1: function(t) {
  return $.eq(this.this_1.get$game().getSquareState$2(t.get$x(), t.get$y()), $.CONSTANT18);
}
};

$$.GameElement__startPopAnimation_anon = {'': function GameElement__startPopAnimation_anon(this_0) {
  this.this_0 = this_0;
},
 'super': 'Closure',
 call$1: function(i) {
  var t1, t, c;
  t1 = this.this_0;
  t = t1.get$game().get$field().getCoordinate$1(i);
  c = $.Coordinate$(t.get$item1(), t.get$item2());
  return $.Tuple$(c, t1.get$game().getSquareState$2(c.x, c.y));
}
};

$$.GameElement__startPopAnimation_anon0 = {'': function GameElement__startPopAnimation_anon() {
},
 'super': 'Closure',
 call$1: function(t2) {
  return $.eqB(t2.get$item2(), $.CONSTANT24) || $.eqB(t2.get$item2(), $.CONSTANT18);
}
};

$$.GameElement__startPopAnimation_anon1 = {'': function GameElement__startPopAnimation_anon() {
},
 'super': 'Closure',
 call$1: function(t2) {
  return t2.get$item1();
}
};

$$.GameElement__startPopAnimation_anon2 = {'': function GameElement__startPopAnimation_anon(start_1) {
  this.start_1 = start_1;
},
 'super': 'Closure',
 call$1: function(c) {
  var t1, t2, initialOffset, squareOffset, t3, delay;
  t1 = c.get$x();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  t1 = 80 * t1;
  t2 = c.get$y();
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  initialOffset = $.Vector$(t1, 80 * t2);
  squareOffset = $.CONSTANT25.operator$add$1(initialOffset);
  t1 = $.sub(c, this.start_1);
  t3 = $.mul($.getInterceptor$JSStringJSArray(t1).get$length(t1), 4);
  t3 = $.getInterceptor$JSNumber(t3).toInt$0(t3);
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  delay = 12 + t3;
  t3 = $.rnd().nextInt$1(10);
  if (typeof t3 !== 'number')
    throw $.iae(t3);
  return [c, initialOffset, squareOffset, delay + t3];
}
};

$$.GameElement__startPopAnimation_anon3 = {'': function GameElement__startPopAnimation_anon() {
},
 'super': 'Closure',
 call$2: function(a, b) {
  var da, db;
  da = $.getInterceptor$JSStringJSArray(a).operator$index$1(a, 3);
  db = $.getInterceptor$JSStringJSArray(b).operator$index$1(b, 3);
  return $.getInterceptor$JSStringJSNumber(da).compareTo$1(da, db);
}
};

$$.GameElement__startPopAnimation_anon4 = {'': function GameElement__startPopAnimation_anon() {
},
 'super': 'Closure',
 call$1: function(args) {
  return $.get$GameAudio__audioEventHandle().fireEvent$1("Pop");
}
};

$$.GameElement__startPopAnimation_anon5 = {'': function GameElement__startPopAnimation_anon() {
},
 'super': 'Closure',
 call$1: function(args) {
  return $.get$GameAudio__audioEventHandle().fireEvent$1("Bomb");
}
};

$$.Enumerable_filter_anon = {'': function Enumerable_filter_anon(f_0) {
  this.f_0 = f_0;
},
 'super': 'Closure',
 call$1: function(s) {
  return $._WhereIterator$(s, this.f_0);
}
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {'': function convertNativeToDart_AcceptStructuredClone_findSlot(values_0, copies_1) {
  this.values_0 = values_0;
  this.copies_1 = copies_1;
},
 'super': 'Closure',
 call$1: function(value) {
  var t1, t3, length$, i, t2;
  t1 = this.values_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout0(1, value, t1);
  t3 = $.getInterceptor$JSStringJSArray(t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  t3.add$1(t1, value);
  t1 = this.copies_1;
  $.getInterceptor$JSArray(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout0: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      value = env0;
      break;
    case 2:
      length$ = env3;
      t3 = env2;
      t1 = env1;
      value = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.values_0;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      length$ = t3.get$length(t1);
    case 2:
      var t1, value, t3, length$, i, t2;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        t2 = t3.operator$index$1(t1, i);
        if (t2 == null ? value == null : t2 === value)
          return i;
      }
      $.getInterceptor$JSArray(t1).add$1(t1, value);
      t1 = this.copies_1;
      $.getInterceptor$JSArray(t1).add$1(t1, null);
      return length$;
  }
}
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {'': function convertNativeToDart_AcceptStructuredClone_readSlot(copies_2) {
  this.copies_2 = copies_2;
},
 'super': 'Closure',
 call$1: function(i) {
  var t1 = this.copies_2;
  return $.getInterceptor$JSStringJSArray(t1).operator$index$1(t1, i);
}
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {'': function convertNativeToDart_AcceptStructuredClone_writeSlot(copies_3) {
  this.copies_3 = copies_3;
},
 'super': 'Closure',
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {'': function convertNativeToDart_AcceptStructuredClone_walk(writeSlot_4, findSlot_5, readSlot_6, mustCopy_7) {
  this.writeSlot_4 = writeSlot_4;
  this.findSlot_5 = findSlot_5;
  this.readSlot_6 = readSlot_6;
  this.mustCopy_7 = mustCopy_7;
},
 'super': 'Closure',
 call$1: function(e) {
  var slot, copy, t1, t2, t3, length$, i;
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e);
  if (e instanceof Date)
    throw $.$$throw($.UnimplementedError$("structured clone of Date"));
  if (e instanceof RegExp)
    throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
  if (Object.getPrototypeOf(e) === Object.prototype) {
    slot = this.findSlot_5.call$1(e);
    copy = this.readSlot_6.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, copy, slot);
    this.writeSlot_4.call$2(slot, copy);
    for (t1 = $.CONSTANT1.iterator$0(Object.keys(e)); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_5.call$1(e);
    copy = this.readSlot_6.call$1(slot);
    if (!(copy == null))
      return copy;
    length$ = e.length;
    if (this.mustCopy_7 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(4, e, $.CONSTANT1, length$, copy, slot);
    this.writeSlot_4.call$2(slot, copy);
    for (i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env2;
      copy = env1;
      e = env0;
      break;
    case 3:
      slot = env3;
      length$ = env2;
      t1 = env1;
      e = env0;
      break;
    case 4:
      slot = env4;
      copy = env3;
      length$ = env2;
      t1 = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.UnimplementedError$("structured clone of Date"));
      if (e instanceof RegExp)
        throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    case 2:
      if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
        switch (state0) {
          case 0:
            slot = this.findSlot_5.call$1(e);
            copy = this.readSlot_6.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (t1 = $.CONSTANT1.iterator$0(Object.keys(e)); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    default:
      var e, slot, copy, t1, t2, length$, i;
      if (state0 === 4 || state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_5.call$1(e);
            copy = this.readSlot_6.call$1(slot);
            if (!(copy == null))
              return copy;
            t1 = $.getInterceptor$JSStringJSArray(e);
            length$ = t1.get$length(e);
          case 3:
            state0 = 0;
            copy = this.mustCopy_7 === true ? new Array(length$) : e;
          case 4:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1(t1.operator$index$1(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$.ResourceLoader_totalBytes_anon = {'': function ResourceLoader_totalBytes_anon() {
},
 'super': 'Closure',
 call$1: function(e) {
  if (e.get$totalBytes() == null)
    return 2000;
  else
    return e.get$totalBytes();
}
};

$$.Enumerable_selectNumbers_anon = {'': function Enumerable_selectNumbers_anon(f_0) {
  this.f_0 = f_0;
},
 'super': 'Closure',
 call$1: function(s) {
  return $._SelectIterator$(s, this.f_0);
}
};

$$.ResourceLoader_completedBytes_anon = {'': function ResourceLoader_completedBytes_anon() {
},
 'super': 'Closure',
 call$1: function(e) {
  return e.get$completedBytes();
}
};

$$.ResourceLoader__httpLoad_anon = {'': function ResourceLoader__httpLoad_anon(this_0, e_1) {
  this.this_0 = this_0;
  this.e_1 = e_1;
},
 'super': 'Closure',
 call$1: function(args) {
  return this.this_0._onError$2(this.e_1, args);
}
};

$$.ResourceLoader__httpLoad_anon0 = {'': function ResourceLoader__httpLoad_anon(this_2, e_3) {
  this.this_2 = this_2;
  this.e_3 = e_3;
},
 'super': 'Closure',
 call$1: function(args) {
  return this.this_2._onError$2(this.e_3, args);
}
};

$$.ResourceLoader__httpLoad_anon1 = {'': function ResourceLoader__httpLoad_anon(this_4, e_5) {
  this.this_4 = this_4;
  this.e_5 = e_5;
},
 'super': 'Closure',
 call$1: function(args) {
  return this.this_4._onLoadEnd$2(this.e_5, args);
}
};

$$.ResourceLoader__httpLoad_anon2 = {'': function ResourceLoader__httpLoad_anon(this_6, e_7) {
  this.this_6 = this_6;
  this.e_7 = e_7;
},
 'super': 'Closure',
 call$1: function(args) {
  return this.this_6._onProgress$2(this.e_7, args);
}
};

$$.ImageLoader__doLoad_anon = {'': function ImageLoader__doLoad_anon(blobUrl_0, img_1, this_2) {
  this.blobUrl_0 = blobUrl_0;
  this.img_1 = img_1;
  this.this_2 = this_2;
},
 'super': 'Closure',
 call$1: function(args) {
  this.this_2._loadResourceSucceed$2(this.blobUrl_0, this.img_1);
}
};

$$.ResourceLoader__loadResourceSucceed_anon = {'': function ResourceLoader__loadResourceSucceed_anon() {
},
 'super': 'Closure',
 call$1: function(e) {
  return e.get$completed();
}
};

$$.ResourceLoader__getByBlobUrl_anon = {'': function ResourceLoader__getByBlobUrl_anon(blobUrl_0) {
  this.blobUrl_0 = blobUrl_0;
},
 'super': 'Closure',
 call$1: function(e) {
  return e.matchesBlobUrl$1(this.blobUrl_0);
}
};

$$.AudioLoader__doLoad_anon = {'': function AudioLoader__doLoad_anon(blobUrl_0, arrayBufferRequest_1, this_2) {
  this.blobUrl_0 = blobUrl_0;
  this.arrayBufferRequest_1 = arrayBufferRequest_1;
  this.this_2 = this_2;
},
 'super': 'Closure',
 call$1: function(args) {
  var t1, t2, t3, t4;
  t1 = this.this_2;
  t2 = t1.get$context();
  t3 = this.arrayBufferRequest_1.get$response();
  t4 = this.blobUrl_0;
  t2.decodeAudioData$3(t3, new $.AudioLoader__doLoad__anon(t4, t1), new $.AudioLoader__doLoad__anon0(t4, t1));
}
};

$$.AudioLoader__doLoad__anon = {'': function AudioLoader__doLoad__anon(blobUrl_3, this_4) {
  this.blobUrl_3 = blobUrl_3;
  this.this_4 = this_4;
},
 'super': 'Closure',
 call$1: function(buffer) {
  return this.this_4._saveBuffer$2(this.blobUrl_3, buffer);
}
};

$$.AudioLoader__doLoad__anon0 = {'': function AudioLoader__doLoad__anon(blobUrl_5, this_6) {
  this.blobUrl_5 = blobUrl_5;
  this.this_6 = this_6;
},
 'super': 'Closure',
 call$1: function(buffer) {
  return this.this_6._onAudioLoadError$3(this.blobUrl_5, "decode error", buffer);
}
};

$$.AudioLoader__doLoad_anon0 = {'': function AudioLoader__doLoad_anon(blobUrl_7, this_8) {
  this.blobUrl_7 = blobUrl_7;
  this.this_8 = this_8;
},
 'super': 'Closure',
 call$1: function(args) {
  this.this_8._onAudioLoadError$3(this.blobUrl_7, "BufferLoader: XHR error", args);
}
};

$$.BoundClosure = {'': function BoundClosure(self, target) {
  this.self = self;
  this.target = target;
},
 'super': 'Closure',
 call$1: function(p0) {
  return this.self[this.target](p0);
}
};
$$.BoundClosure0 = {'': function BoundClosure0(self, target) {
  this.self = self;
  this.target = target;
},
 'super': 'Closure',
 call$0: function() {
  return this.self[this.target]();
}
};
$$.BoundClosure1 = {'': function BoundClosure1(self, target) {
  this.self = self;
  this.target = target;
},
 'super': 'Closure',
 call$2: function(p0, p1) {
  return this.self[this.target](p0, p1);
}
};
$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.CONSTANT4.truncate$0(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.operator$negate$0();
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.listInsertRange = function(receiver, start, length$, initialValue) {
  var receiverLength, t1, t2, t3, i;
  if (typeof receiver !== 'object' || receiver === null || (receiver.constructor !== Array || !!receiver.immutable$list) && !receiver.is$JavaScriptIndexingBehavior())
    return $.listInsertRange$bailout(1, receiver, start, length$, initialValue);
  if ($.eqB(length$, 0))
    return;
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + length$;
  $.CONSTANT1.set$length(receiver, t1);
  t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (t3 = receiver.length, i = start; i < t2; ++i) {
      if (i < 0 || i >= t3)
        throw $.ioore(i);
      receiver[i] = initialValue;
    }
  $.CONSTANT1.set$length(receiver, t1);
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$._RangeIterator$ = function(_start, _count) {
  return new $._RangeIterator(_start, _count, 0);
};

$.checkString = function(value) {
  if (!(typeof value === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CONSTANT0;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.CONSTANT5.endsWith$1(message, "is null") === true || $.CONSTANT5.endsWith$1(message, "is undefined") === true || $.CONSTANT5.endsWith$1(message, "is null or undefined") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" is not a function") === -1)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === 'string' ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.CONSTANT1.iterator$0(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(closure, arg1).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(closure, arg2, arg1).call$0();
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $, arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$._RangeEnumerable$ = function(_start, _count) {
  return new $._RangeEnumerable(_start, _count);
};

$.propertyTypeCastError = function(value, property) {
  var actualType, t1;
  actualType = $.Primitives_objectTypeName(value);
  t1 = $.getInterceptor$JSString(property);
  throw $.$$throw($.CastErrorImplementation$(actualType, t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var name$ = tag;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function(function$, object, property) {
  return function$.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT31));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!$.callHasOwnProperty(hasOwnPropertyFunction, proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT31)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_liblib0$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length$, patternLength, startIndex, position, endIndex;
  result = $.List_List(null);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length$ = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr, t1;
  if (typeof other === 'string')
    return !$.eqB($.CONSTANT5.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT5.substring$1(receiver, startIndex));
  else {
    substr = $.CONSTANT5.substring$1(receiver, startIndex);
    t1 = $.getInterceptor$JSString(other).allMatches$1(other, substr);
    return $.getInterceptor$JSArray(t1).iterator$0(t1).get$hasNext();
  }
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator($.getInterceptor$JSStringJSArray(array).get$length(array), array, 0);
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.AudioContext_AudioContext = function() {
  return new (window.AudioContext || window.webkitAudioContext)();
};

$.print = function(object) {
  if (typeof object === 'string')
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.getInterceptor(object).toString$0(object));
};

$.coreSort = function(l, compare) {
  $._Sort__doSort(l, 0, l.length - 1, compare);
  return;
};

$._FuncNumEnumerable$ = function(_source, _func) {
  return new $._FuncNumEnumerable(_source, _func);
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$.Url_createObjectUrl = function(blob_OR_source_OR_stream) {
  return (window.URL || window.webkitURL).createObjectURL(blob_OR_source_OR_stream);
};

$.Url_revokeObjectUrl = function(objectUrl) {
  return (window.URL || window.webkitURL).revokeObjectURL(objectUrl);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.LocalWindow__isDartLocation = function(thing, exception) {
  var t1;
  try {
    t1 = thing;
    t1 = typeof t1 === 'object' && t1 !== null && t1.is$Location();
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$.main = function() {
  $._loadingBar = $.query(".sprite.loading_bar");
  $._loadingBar.get$style().set$display("block");
  $._loadingBar.get$style().set$width("0");
  $._imageLoader = $.ImageLoader$(["images/transparent_animated.png", "images/dart_opaque_01.jpg"]);
  var t1 = $._imageLoader.get$loaded();
  $.getInterceptor$JSArray(t1).add$1(t1, $._onLoaded);
  t1 = $._imageLoader.get$progress();
  $.getInterceptor$JSArray(t1).add$1(t1, $._onProgress);
  $._imageLoader.load$0();
  $._audio = $._Audio__Audio();
};

$._onLoaded = function(args) {
  var opaqueImage, textureData;
  if ($.eqB($._imageLoader.get$state(), "loaded") && $._audio.get$done() === true) {
    opaqueImage = $._imageLoader.getResource$1("images/dart_opaque_01.jpg");
    textureData = $.TextureData$($.getTextures($._imageLoader.getResource$1("images/transparent_animated.png"), opaqueImage, $.ImageElement_ImageElement(null, "images/transparent_static.png", null)));
    $.query("#loading").get$style().set$display("none");
    $._runPPW(textureData);
  }
};

$._onPopupClick = function(args) {
  var t1 = args.get$toElement();
  if (!(typeof t1 === 'object' && t1 !== null && t1.is$AnchorElement()))
    $._toggleAbout(false);
};

$._runPPW = function(textureData) {
  var size, m, gameCanvas, t1;
  size = $._processUrlHash(false) ? 16 : 7;
  m = $.CONSTANT7.toInt$0(size * size * 0.15625);
  gameCanvas = $.query("#gameCanvas");
  gameCanvas.get$style().set$userSelect("none");
  $.GameRoot_GameRoot(size, size, m, gameCanvas, textureData);
  t1 = $.window().get$on().get$touchMove();
  $.getInterceptor$JSArray(t1).add$1(t1, new $._runPPW_anon());
  t1 = $.window().get$on().get$popState();
  $.getInterceptor$JSArray(t1).add$1(t1, new $._runPPW_anon0());
  t1 = $.window().get$on().get$keyDown();
  $.getInterceptor$JSArray(t1).add$1(t1, $._onKeyDown);
  t1 = $.query("#popup").get$on().get$click();
  $.getInterceptor$JSArray(t1).add$1(t1, $._onPopupClick);
  t1 = $.get$titleClickedEvent();
  $.getInterceptor$JSArray(t1).add$1(t1, new $._runPPW_anon1());
};

$._toggleAbout = function(value) {
  var loc, t1, hash, isOpen, targetHash;
  loc = $.window().get$location();
  t1 = loc.get$hash();
  hash = $.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0) ? "#" : loc.get$hash();
  isOpen = $.eqB(hash, "#about");
  if (value == null)
    value = !isOpen;
  targetHash = value === true ? "#about" : "#";
  if (!(targetHash === hash))
    loc.assign$1(targetHash);
};

$._onKeyDown = function(args) {
  switch (args.get$keyCode()) {
    case 27:
      $._toggleAbout(false);
      break;
    case 72:
      $._toggleAbout(null);
      break;
  }
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$._processUrlHash = function(forceReload) {
  var loc, hash, href, showAbout, t1, newLoc;
  loc = $.window().get$location();
  hash = loc.get$hash();
  href = loc.get$href();
  $.window().get$history();
  showAbout = false;
  switch (hash) {
    case "#reset":
      t1 = $.getInterceptor$JSString(href);
      newLoc = t1.substring$2(href, 0, $.sub(t1.get$length(href), $.getInterceptor$JSStringJSArray(hash).get$length(hash)));
      t1 = $.window().get$localStorage();
      $.getInterceptor$JSArray(t1).clear$0(t1);
      loc.replace$1(newLoc);
      showAbout = false;
      break;
    case "#big":
      if (forceReload)
        ;
      return true;
    case "#about":
      showAbout = true;
      break;
  }
  t1 = showAbout ? "inline-block" : "none";
  $.query("#popup").get$style().set$display(t1);
  return false;
};

$._onProgress = function(args) {
  var completedBytes, totalBytes, percent, t1, barWidth, t2;
  completedBytes = $._imageLoader.get$completedBytes();
  totalBytes = $._imageLoader.get$totalBytes();
  percent = $.div($.add(completedBytes, $._audio.get$completedBytes()), $.add(totalBytes, $._audio.get$totalBytes()));
  t1 = $.mul(percent, 1000);
  $.div($.getInterceptor$JSNumber(t1).floor$0(t1), 10);
  barWidth = $.mul(percent, 398);
  t2 = $.S($.getInterceptor$JSNumber(barWidth).toInt$0(barWidth)) + "px";
  $._loadingBar.get$style().set$width(t2);
};

$.TextureInput$ = function(name$, frame, rotated, trimmed, sourceColorRect, sourceSize, image) {
  return new $.TextureInput(name$, frame, rotated, trimmed, sourceColorRect, sourceSize, image);
};

$.TextureInput_TextureInput$fromHash = function(keyName, map, image) {
  var t1, frame, sourceColorRect, t2, t3, sourceSize;
  t1 = $.getInterceptor$JSStringJSArray(map);
  frame = $.TextureInput__parseRect(t1.operator$index$1(map, "frame"));
  sourceColorRect = $.TextureInput__parseRect(t1.operator$index$1(map, "spriteSourceSize"));
  t2 = t1.operator$index$1(map, "sourceSize");
  t3 = $.getInterceptor$JSStringJSArray(t2);
  sourceSize = $.Size$(t3.operator$index$1(t2, "w"), t3.operator$index$1(t2, "h"));
  return $.TextureInput$(keyName, frame, t1.operator$index$1(map, "rotated"), t1.operator$index$1(map, "trimmed"), sourceColorRect, sourceSize, image);
};

$.TextureInput__parseRect = function(input) {
  var t1 = $.getInterceptor$JSStringJSArray(input);
  return $.Box_Box$fromCoordSize($.Coordinate$(t1.operator$index$1(input, "x"), t1.operator$index$1(input, "y")), $.Size$(t1.operator$index$1(input, "w"), t1.operator$index$1(input, "h")));
};

$.TextureData$ = function(_textures) {
  return new $.TextureData(_textures);
};

$.ImageLoader$ = function(urls) {
  var t1, t2, t3;
  t1 = $.EventHandle$();
  t2 = $.EventHandle$();
  t3 = $.$$(urls);
  return new $.ImageLoader($.getInterceptor$JSArray(t3).map$1(t3, new $.anon()).toReadOnlyCollection$0(), t1, t2, "unloaded");
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$.Coordinate$ = function(x, y) {
  return new $.Coordinate(x, y);
};

$.HttpRequestEvents$ = function(_ptr) {
  return new $.HttpRequestEvents(_ptr);
};

$.Vector$ = function(x, y) {
  return new $.Vector(x, y);
};

$.Size$ = function(width, height) {
  return new $.Size(width, height);
};

$.HttpRequestUploadEvents$ = function(_ptr) {
  return new $.HttpRequestUploadEvents(_ptr);
};

$.GameRoot_GameRoot = function(width, height, bombCount, canvasElement, textureData) {
  var rootElement, stage;
  rootElement = $.GameElement$(textureData);
  stage = $.Stage$(canvasElement, rootElement);
  return $.GameRoot$_internal(width, height, bombCount, canvasElement, stage, rootElement, $.ClickManager_ClickManager(stage));
};

$.GameRoot$_internal = function(width, height, bombCount, _canvas, _stage, gameElement, _clickMan) {
  var t1 = new $.GameRoot(_stage, _canvas, gameElement, _clickMan, gameElement.addTransform$0(), false, width, height, bombCount, $.GameStorage$(), null, null, null, null);
  t1.GameManager$3(width, height, bombCount);
  t1.GameRoot$_internal$7(width, height, bombCount, _canvas, _stage, gameElement, _clickMan);
  return t1;
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.Stage$ = function(_canvas, rootThing) {
  var t1 = new $.Stage($.EventHandle$(), _canvas, rootThing, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t1.Stage$2(_canvas, rootThing);
  return t1;
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.CanvasThing$ = function(w, h) {
  return new $.CanvasThing($.List_List(null), null, $.List_List(null), $.EventHandle$(), null, w, h, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
};

$.GameBackgroundElement$ = function() {
  var t1 = new $.GameBackgroundElement($.List_List(null), $.EventHandle$(), null, 0, 0, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t1.GameBackgroundElement$0();
  return t1;
};

$.BoardElement$ = function() {
  var t1 = new $.BoardElement(null, $.List_List(null), $.EventHandle$(), null, 0, 0, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t1.BoardElement$0();
  return t1;
};

$.ReadOnlyCollection$ = function(source) {
  return new $.ReadOnlyCollection($.List_List$from(source));
};

$.Enumerable_Enumerable$fromIterable = function(source) {
  $.requireArgumentNotNull(source, "source");
  return $._SimpleEnumerable$(source);
};

$.Box$ = function(left, top$, width, height) {
  return new $.Box(left, top$, width, height);
};

$.Box_Box$fromCoordSize = function(topLeft, size) {
  return $.Box$(topLeft.x, topLeft.y, size.width, size.height);
};

$._ResourceEntry$ = function(url) {
  return new $._ResourceEntry(url, null, null, null, 0);
};

$.GameElement__getScale = function(count, fullSize, holeSize) {
  return $.div($.mul($.add($.mul(count, 80), 64), fullSize), holeSize);
};

$.EventHandle$ = function() {
  return new $.EventHandle(null, false);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.ClickManager_ClickManager = function(stage) {
  $.requireArgumentNotNull(stage, "stage");
  return $.get$ClickManager__clickManagerProperty().get$2(stage, new $.ClickManager_ClickManager_anon());
};

$.ClickManager$_internal = function(_stage) {
  var t1 = new $.ClickManager(_stage, null);
  t1.ClickManager$_internal$1(_stage);
  return t1;
};

$.ClickManager_addMouseMoveHandler = function(thing, handler) {
  return $.get$ClickManager__mouseMoveEvent().addHandler$2(thing, handler);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.ClickManager_addMouseOutHandler = function(stage, handler) {
  return $.get$ClickManager__mouseOutEvent().addHandler$2(stage, handler);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$._Audio__Audio = function(exception) {
  var audioContext, t1, t2, loader, t3, e;
  if (!($.get$_Audio__audioFormat() == null))
    try {
      audioContext = $.AudioContext_AudioContext();
      t1 = audioContext;
      t2 = $.$$($.CONSTANT);
      t2 = $.getInterceptor$JSArray(t2).map$1(t2, $._Audio__getAudioPath);
      loader = $.AudioLoader$(t1, t2);
      t3 = $._Audio$_internal(loader);
      return t3;
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      $.print("Error creating AudioContext: " + $.S(e));
    }

  return $._Audio$_disabled();
};

$._Audio$_disabled = function() {
  return new $._Audio(null, $.Map_Map());
};

$._Audio$_internal = function(_audioLoader) {
  var t1 = new $._Audio(_audioLoader, $.Map_Map());
  t1._Audio$_internal$1(_audioLoader);
  return t1;
};

$._Audio__getAudioFormat = function(exception) {
  var userAgent, t1, isWebKit, isChrome, e;
  try {
    userAgent = $.window().get$navigator().get$userAgent();
    t1 = userAgent;
    isWebKit = $.getInterceptor$JSStringJSArray(t1).contains$1(t1, "WebKit");
    if (isWebKit === true) {
      t1 = userAgent;
      isChrome = $.getInterceptor$JSStringJSArray(t1).contains$1(t1, "Chrome");
      if (isChrome === true)
        return "webm";
      else
        return "m4a";
    }
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    $.print("Error getting client info: " + $.S(e));
  }

  return;
};

$._Audio__getAudioPath = function(name$) {
  return "audio/" + $.S($.get$_Audio__audioFormat()) + "/" + $.S(name$) + "." + $.S($.get$_Audio__audioFormat());
};

$.AffineTransform$ = function(scaleX, shearY, shearX, scaleY, translateX, translateY) {
  return new $.AffineTransform(scaleX, shearY, shearX, scaleY, translateX, translateY);
};

$.SquareElement$ = function(x, y) {
  var t1 = new $.SquareElement(x, y, null, $.List_List(null), $.EventHandle$(), null, 80, 80, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t1.SquareElement$2(x, y);
  return t1;
};

$.AudioLoader$ = function(context, urlList) {
  var t1, t2, t3;
  t1 = $.EventHandle$();
  t2 = $.EventHandle$();
  t3 = $.$$(urlList);
  return new $.AudioLoader(context, $.getInterceptor$JSArray(t3).map$1(t3, new $.anon()).toReadOnlyCollection$0(), t1, t2, "unloaded");
};

$.TextureAnimationThing$ = function(width, height, _textureData) {
  return new $.TextureAnimationThing(_textureData, $.List_List(null), $.List_List(null), $.EventHandle$(), null, width, height, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
};

$.GameElement$ = function(textureData) {
  var t1, t2, t3, t4, t5, t6, t7, t8;
  t1 = $.CanvasThing$(0, 0);
  t2 = $.GameBackgroundElement$();
  t3 = $.BoardElement$();
  t4 = $.NewGameElement$();
  t5 = $.GameTitleElement$();
  t6 = $.EventHandle$();
  t7 = $.TextureAnimationThing$(0, 0, textureData);
  t8 = $.TextureAnimationThing$(0, 0, textureData);
  t6 = new $.GameElement(t1, t2, t3, $.ScoreElement$(), t4, t5, t7, t8, textureData, t6, null, null, null, null, null, null, null, null, null, $.List_List(null), $.EventHandle$(), null, 100, 100, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t6.GameElement$1(textureData);
  return t6;
};

$.AffineTransform_AffineTransform$fromRotate = function(theta, x, y) {
  return $.AffineTransform$(1, 0, 0, 1, 0, 0).setToRotation$3(theta, x, y);
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return (currentProbe + numberOfProbes & length$ - 1) >>> 0;
};

$.Property$ = function(name$, defaultValue) {
  return new $.Property(defaultValue, name$);
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.NewGameElement$ = function() {
  var t1 = new $.NewGameElement($.EventHandle$(), $.List_List(null), $.EventHandle$(), null, 294, 92, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t1.NewGameElement$0();
  return t1;
};

$.ThingMouseEventArgs_ThingMouseEventArgs = function(thing, mouseEvent) {
  return $.ThingMouseEventArgs$_internal(thing, mouseEvent.get$shiftKey());
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.ClickManager_addHandler = function(thing, handler) {
  return $.get$ClickManager__clickEvent().addHandler$2(thing, handler);
};

$.AttachedEvent$ = function(name$) {
  return new $.AttachedEvent(name$);
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$.ThingMouseEventArgs$_internal = function(thing, shiftKey) {
  return new $.ThingMouseEventArgs(thing, shiftKey);
};

$._LocationCrossFrame$ = function(_location) {
  return new $._LocationCrossFrame(_location);
};

$._LocationCrossFrame__createSafe = function(location$) {
  var t1 = $.window().get$location();
  if (location$ == null ? t1 == null : location$ === t1)
    return location$;
  else
    return $._LocationCrossFrame$(location$);
};

$.GameStorage$ = function() {
  return new $.GameStorage($.EventHandle$(), $.Map_Map());
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.ClickManager_setClickable = function(thing, value) {
  if (value)
    $.get$ClickManager__isClickableProperty().set$2(thing, true);
  else
    $.get$ClickManager__isClickableProperty().clear$1(thing);
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === 'string') {
    t1 = $.CONSTANT5.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$.GameTitleElement$ = function() {
  return new $.GameTitleElement($.List_List(null), $.EventHandle$(), null, 318, 96, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
};

$.ScoreElement$ = function() {
  return new $.ScoreElement(null, null, null, null, null, $.List_List(null), $.EventHandle$(), null, 400, 96, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
};

$.Game$ = function(field) {
  var t1, t2;
  t1 = $.EventHandle$();
  t2 = $.EventHandle$();
  t2 = new $.Game(field, $.Array2d_Array2d(field.get$width(), field.get$height(), $.CONSTANT18), t1, t2, $.CONSTANT17, null, null, null, null);
  t2.Game$1(field);
  return t2;
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.Field_Field = function(bombCount, cols, rows, seed) {
  var squares, rnd, i, index;
  if (typeof bombCount !== 'number')
    return $.Field_Field$bailout(1, bombCount, cols, rows, seed);
  squares = $.List_List(null);
  $.CONSTANT1.insertRange$3(squares, 0, $.mul(rows, cols), false);
  rnd = $.Random_Random(seed);
  for (i = 0; i < bombCount; ++i) {
    do {
      index = rnd.nextInt$1(squares.length);
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= squares.length)
        throw $.ioore(index);
    } while (squares[index] === true);
    squares[index] = true;
  }
  return $.Field$_internal(bombCount, cols, $.ReadOnlyCollection$(squares));
};

$.Field$_internal = function(bombCount, cols, source) {
  var t1, t2, t3;
  t1 = $.Array2d_Array2d(cols, $.tdiv($.getInterceptor$JSStringJSArray(source).get$length(source), cols), null);
  t2 = source.toList$0();
  t3 = !(cols == null) && $.gtB(cols, 0) && !(t2 == null) ? $.tdiv($.getInterceptor$JSStringJSArray(t2).get$length(t2), cols) : 0;
  t3 = new $.Field(bombCount, t1, cols, t3, t2);
  t3.Array2d$wrap$2(cols, t2);
  t3.Field$_internal$3(bombCount, cols, source);
  return t3;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_parseInt = function(string) {
  var match, base, result;
  $.checkString(string);
  match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  base = !($.getInterceptor$JSStringJSArray(match).operator$index$1(match, 1) == null) ? 16 : 10;
  result = parseInt(string, base);
  if ($.CONSTANT4.get$isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Array2d_Array2d = function(width, height, initialValue) {
  var s;
  $.requireArgumentNotNull(width, "width");
  $.requireArgumentNotNull(height, "height");
  $.requireArgument($.gt(width, 0), "width", null);
  $.requireArgument($.gt(height, 0), "height", null);
  s = $.List_List(null);
  $.CONSTANT1.insertRange$3(s, 0, $.mul(width, height), initialValue);
  return $.Array2d$wrap(width, s);
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return t1.charCodeAt$1(name$, 0) === 36 ? t1.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Array2d$wrap = function(width, source) {
  var t1;
  if (!(width == null) && $.gtB(width, 0) && true) {
    t1 = source.length;
    if (typeof width !== 'number')
      throw $.iae(width);
    t1 = $.tdiv(t1, width);
  } else
    t1 = 0;
  t1 = new $.Array2d(width, t1, source);
  t1.Array2d$wrap$2(width, source);
  return t1;
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.Primitives_printString = function(string) {
  if ("\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n" === string)
    $.Primitives_mirrorsEnabled = true;
  else if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.ClickManager_addMouseDownHandler = function(thing, handler) {
  return $.get$ClickManager__mouseDownEvent().addHandler$2(thing, handler);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.min = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.CONSTANT7.get$isNegative(b) === true || $.CONSTANT7.get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.getInterceptor$JSArray(m).forEach$1(m, new $.Maps__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.max = function(a, b) {
  if (typeof b === 'number') {
    if (a > b)
      return a;
    if (a < b)
      return b;
    if (typeof b === 'number') {
      if (typeof a === 'number')
        if (a === 0)
          return a + b;
      if ($.CONSTANT7.get$isNaN(b) === true)
        return b;
      return a;
    }
    if (b === 0 && $.CONSTANT3.get$isNegative(a) === true)
      return b;
    return a;
  }
  throw $.$$throw($.ArgumentError$(b));
  throw $.$$throw($.ArgumentError$(a));
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.Tuple$ = function(item1, item2) {
  return new $.Tuple(item1, item2);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.CanvasUtil_centeredCircle = function(ctx, x, y, radius) {
  var t1, t2, t3;
  t1 = $.sub(x, radius);
  t2 = $.sub(y, radius);
  t3 = radius * 2;
  $.CanvasUtil_ellipse(ctx, t1, t2, t3, t3);
};

$.CanvasUtil_ellipse = function(ctx, x, y, width, height) {
  var t1, hB, t2, vB, eX, eY, mX, mY;
  t1 = width / 2;
  hB = t1 * 0.5522847498307935;
  t2 = height / 2;
  vB = t2 * 0.5522847498307935;
  eX = $.add(x, width);
  eY = $.add(y, height);
  mX = $.add(x, t1);
  mY = $.add(y, t2);
  ctx.beginPath$0();
  ctx.moveTo$2(x, mY);
  ctx.bezierCurveTo$6(x, $.sub(mY, vB), $.sub(mX, hB), y, mX, y);
  ctx.bezierCurveTo$6($.add(mX, hB), y, eX, $.sub(mY, vB), eX, mY);
  ctx.bezierCurveTo$6(eX, $.add(mY, vB), $.add(mX, hB), eY, mX, eY);
  ctx.bezierCurveTo$6($.sub(mX, hB), eY, x, $.add(mY, vB), x, mY);
  ctx.closePath$0();
};

$.CanvasUtil_transform = function(ctx, tx) {
  $.requireArgumentNotNull(ctx, "ctx");
  $.requireArgumentNotNull(tx, "tx");
  ctx.transform$6(tx.get$scaleX(), tx.get$shearY(), tx.get$shearX(), tx.get$scaleY(), tx.get$translateX(), tx.get$translateY());
};

$.CanvasUtil_drawImage = function(ctx, img, sourceBox, targetBox) {
  if (targetBox == null)
    targetBox = $.Box$(0, 0, sourceBox.get$width(), sourceBox.get$height());
  ctx.drawImage$9(img, sourceBox.get$left(), sourceBox.get$top(), sourceBox.get$width(), sourceBox.get$height(), targetBox.get$left(), targetBox.get$top(), targetBox.get$width(), targetBox.get$height());
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if ($.eqB(element, t1.next$0()))
      return true;
  return false;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.ImageElement_ImageElement = function(height, src, width) {
  var e = $.document().$$dom_createElement$1("img");
  if (!(src == null))
    e.set$src(src);
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$.Collections_map = function(source, destination, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(source).iterator$0(source); t1.get$hasNext() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$.ClickManager_addMouseUpHandler = function(thing, handler) {
  return $.get$ClickManager__mouseUpEvent().addHandler$2(thing, handler);
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(source).iterator$0(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(null));
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t2 = $.getInterceptor$JSArray(result);
  t2.add$1(result, isList ? "[" : "{");
  for (t3 = $.getInterceptor$JSArray(c).iterator$0(c), first = true; t3.get$hasNext() === true; first = false) {
    t4 = t3.next$0();
    if (!first)
      t2.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t2.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).iterator$0(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$._HistoryCrossFrame__createSafe = function(h) {
  var t1 = $.window().get$history();
  if (h == null ? t1 == null : h === t1)
    return h;
  else
    return $._HistoryCrossFrame$(h);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._HistoryCrossFrame$ = function(_history) {
  return new $._HistoryCrossFrame(_history);
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values, copies, t1, t2;
  values = [];
  copies = [];
  t1 = new $.convertNativeToDart_AcceptStructuredClone_findSlot(values, copies);
  t2 = new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies);
  return new $.convertNativeToDart_AcceptStructuredClone_walk(new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies), t1, t2, mustCopy).call$1(object);
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$._DateImpl$now = function() {
  var t1 = new $._DateImpl($.Primitives_dateNow(), false);
  t1._DateImpl$now$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.HttpRequest_HttpRequest = function() {
  return new XMLHttpRequest();
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.convertNativeToDart_SerializedScriptValue = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.stringJoinUnchecked($.Strings__toJsStringArray(strings), separator);
};

$.Duration$ = function(days, hours, milliseconds, minutes, seconds) {
  return new $.Duration($.add($.add($.add($.add($.mul(days, 86400000), $.mul(hours, 3600000)), $.mul(minutes, 60000)), $.mul(seconds, 1000)), milliseconds));
};

$.Strings__toJsStringArray = function(strings) {
  var t1, length$, i, string, array;
  if (typeof strings !== 'string' && (typeof strings !== 'object' || strings === null || strings.constructor !== Array && !strings.is$JavaScriptIndexingBehavior()))
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  t1 = $.getInterceptor$JSStringJSArray(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $.List_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.require = function(truth, message) {
  if (truth !== true)
    throw $.$$throw($.Exception_Exception(message));
};

$.requireArgument = function(truth, argName, message) {
  $._metaRequireArgumentNotNullOrEmpty(argName);
  if (truth !== true)
    throw $.$$throw($.DetailedArgumentError$(argName, message));
};

$.requireArgumentNotNull = function(argument, argName) {
  $._metaRequireArgumentNotNullOrEmpty(argName);
  if (argument == null)
    throw $.$$throw($.NullArgumentError$(argName));
};

$.requireArgumentNotNullOrEmpty = function(argument, argName) {
  $._metaRequireArgumentNotNullOrEmpty(argName);
  if (argument == null)
    throw $.$$throw($.NullArgumentError$(argName));
  else if ($.eqB($.getInterceptor$JSStringJSArray(argument).get$length(argument), 0))
    throw $.$$throw($.DetailedArgumentError$(argName, "cannot be an empty string"));
};

$._metaRequireArgumentNotNullOrEmpty = function(argName) {
  if (argName == null || $.eqB($.getInterceptor$JSStringJSArray(argName).get$length(argName), 0))
    throw $.$$throw($.InvalidOperationError$("That's just sad. Give me a good argName"));
};

$.SequenceIterator$ = function(_sequence) {
  return new $.SequenceIterator(_sequence, 0);
};

$.Collections_every = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
};

$.IndexIterator$ = function(length$, indexer) {
  var t1 = new $.IndexIterator(indexer, length$, 0);
  t1.IndexIterator$2(length$, indexer);
  return t1;
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.$$ = function(source) {
  if (typeof source === 'object' && source !== null && !!source.is$Enumerable)
    return source;
  else
    return $.Enumerable_Enumerable$fromIterable(source);
};

$.AudioContextEvents$ = function(_ptr) {
  return new $.AudioContextEvents(_ptr);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.isValidNumber = function(value) {
  var t1;
  if (!(value == null)) {
    t1 = $.getInterceptor$JSNumber(value);
    t1 = t1.get$isInfinite(value) !== true && t1.get$isNaN(value) !== true;
  } else
    t1 = false;
  return t1;
};

$.rnd = function() {
  if ($._botHelperRandom == null)
    $._botHelperRandom = $.Random_Random(null);
  return $._botHelperRandom;
};

$.getMouseEventCoordinate = function(event$) {
  return $.Coordinate$(event$.get$offsetX(), event$.get$offsetY());
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Opera", 0);
};

$._Device_isIE = function() {
  var t1, t2;
  if ($._Device_isOpera() !== true) {
    t1 = $._Device_userAgent();
    t2 = $.getInterceptor$JSString(t1).contains$2(t1, "MSIE", 0) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
};

$._Device_isFirefox = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Firefox", 0);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.trackAnalyticsEvent = function(category, action, label, value) {
};

$.GameAudio_audioEvent = function() {
  return $.get$GameAudio__audioEventHandle();
};

$.Mouse_markMouseOver = function(stage, coordinate) {
  var t1, items, hits;
  $.requireArgumentNotNull(stage, "stage");
  t1 = !(coordinate == null);
  $.requireArgument(coordinate == null || coordinate.get$isValid() === true, "coordinate", null);
  items = $.get$Mouse__stageMouseCacheProperty().get$1(stage);
  if (!(items == null)) {
    $.getInterceptor$JSArray(items).forEach$1(items, new $.Mouse_markMouseOver_anon());
    $.get$Mouse__stageMouseCacheProperty().clear$1(stage);
  }
  if (t1) {
    hits = $.RetainedUtil__hitTest(stage.get$rootThing(), coordinate);
    $.get$Mouse__stageMouseCacheProperty().set$2(stage, hits);
    t1 = $.getInterceptor$JSArray(hits);
    t1.forEach$1(hits, new $.Mouse_markMouseOver_anon0());
    if ($.gtB(t1.get$length(hits), 0))
      $.get$Mouse_isMouseDirectlyOverProperty().set$2(t1.operator$index$1(hits, 0), true);
    return hits;
  }
  return;
};

$.Date_Date$now = function() {
  return $._DateImpl$now();
};

$.RetainedUtil_transformPointGlobalToLocal = function(thing, point) {
  return thing.getTransform$0().createInverse$0().transformCoordinate$1(point);
};

$.getTextures = function(transparentElement, opaqueElement, transparentStaticElement) {
  var frames$, t1;
  frames$ = $.makeLiteralMap([]);
  t1 = $._getTransparentItems();
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.getTextures_anon(frames$, transparentElement));
  t1 = $._getOpaqueItems();
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.getTextures_anon0(frames$, opaqueElement));
  t1 = $._getTransparentStaticItems();
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.getTextures_anon1(transparentStaticElement, frames$));
  return frames$;
};

$._getTransparentStaticItems = function() {
  return $.makeLiteralMap(["button_new_game.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 398, "y", 150, "w", 294, "h", 94]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 294, "h", 94]), "sourceSize", $.makeLiteralMap(["w", 294, "h", 94])]), "button_new_game_clicked.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 504, "y", 0, "w", 292, "h", 94]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 292, "h", 94]), "sourceSize", $.makeLiteralMap(["w", 292, "h", 94])]), "logo_win.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 0, "y", 88, "w", 318, "h", 96]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 318, "h", 96]), "sourceSize", $.makeLiteralMap(["w", 318, "h", 96])])]);
};

$._getOpaqueItems = function() {
  return $.makeLiteralMap(["background_side_left.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 0, "y", 96, "w", 352, "h", 672]), "rotated", true, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 352, "h", 672]), "sourceSize", $.makeLiteralMap(["w", 352, "h", 672])]), "background_top_left.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 0, "y", 0, "w", 1024, "h", 96]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 1024, "h", 96]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 96])]), "balloon.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1184, "y", 352, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_pieces_a.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1184, "y", 272, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_pieces_b.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1184, "y", 192, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_pieces_c.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1104, "y", 352, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_pieces_d.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1024, "y", 304, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_tagged_!.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 832, "y", 368, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_tagged_bomb.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 944, "y", 304, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "balloon_tagged_frozen.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1104, "y", 272, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "crater_b.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1136, "y", 112, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "game_board_center.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1104, "y", 192, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "game_board_corner_bottom_left.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 784, "y", 96, "w", 112, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 112])]), "game_board_corner_bottom_right.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 672, "y", 96, "w", 112, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 112])]), "game_board_corner_top_left.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1136, "y", 0, "w", 112, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 112])]), "game_board_corner_top_right.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1024, "y", 0, "w", 112, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 112])]), "game_board_side_bottom.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 976, "y", 112, "w", 80, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 112])]), "game_board_side_left.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 784, "y", 208, "w", 112, "h", 80]), "rotated", true, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 80])]), "game_board_side_right.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 672, "y", 208, "w", 112, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 112, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 112, "h", 80])]), "game_board_side_top.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 896, "y", 96, "w", 80, "h", 112]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 112])]), "number_eight.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1056, "y", 112, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_five.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1024, "y", 224, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_four.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 672, "y", 368, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_one.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 752, "y", 320, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_seven.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 864, "y", 288, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_six.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 944, "y", 224, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_three.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 864, "y", 208, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])]), "number_two.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 672, "y", 288, "w", 80, "h", 80]), "rotated", false, "trimmed", false, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 80, "h", 80]), "sourceSize", $.makeLiteralMap(["w", 80, "h", 80])])]);
};

$.RetainedUtil__hitTest = function(thing, point) {
  var bounds, hits, length$, t1, i, t2;
  point = $.RetainedUtil_transformPointGlobalToLocal(thing, point);
  bounds = $.Box$(0, 0, thing.get$width(), thing.get$height());
  hits = $.List_List(null);
  if (bounds.contains$1(point) === true) {
    if (typeof thing === 'object' && thing !== null && !!thing.is$ParentThing) {
      length$ = thing.get$visualChildCount();
      if (typeof length$ !== 'number')
        return $.RetainedUtil__hitTest$bailout(1, thing, point, hits, length$);
      for (t1 = length$ - 1, i = 0; i < length$; ++i) {
        hits = $.RetainedUtil__hitTest(thing.getVisualChild$1(t1 - i), point);
        if (typeof hits !== 'object' || hits === null || hits.constructor !== Array || !!hits.fixed$length)
          return $.RetainedUtil__hitTest$bailout(2, thing, hits, i, point, length$);
        t2 = hits.length;
        if (t2 > 0)
          break;
      }
      thing = thing;
    }
    hits.push(thing);
  }
  return hits;
};

$.Random_Random = function(seed) {
  return $.CONSTANT6;
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$._getTransparentItems = function() {
  return $.makeLiteralMap(["balloon_explode_0000.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1762, "y", 1058, "w", 80, "h", 86]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 89, "y", 87, "w", 80, "h", 86]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0001.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 446, "y", 1332, "w", 208, "h", 208]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 35, "y", 13, "w", 208, "h", 208]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0002.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 868, "y", 612, "w", 230, "h", 230]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 13, "y", 13, "w", 230, "h", 230]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0003.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1128, "y", 840, "w", 226, "h", 222]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 18, "y", 12, "w", 226, "h", 222]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0004.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1072, "y", 1074, "w", 228, "h", 218]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 16, "y", 16, "w", 228, "h", 218]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0005.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1100, "y", 610, "w", 228, "h", 218]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 16, "y", 15, "w", 228, "h", 218]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0006.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 908, "y", 844, "w", 228, "h", 218]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 15, "y", 15, "w", 228, "h", 218]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0007.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1362, "y", 234, "w", 224, "h", 218]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 15, "y", 14, "w", 224, "h", 218]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0008.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1320, "y", 608, "w", 224, "h", 218]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 15, "y", 14, "w", 224, "h", 218]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0009.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 656, "y", 1314, "w", 226, "h", 224]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 13, "y", 14, "w", 226, "h", 224]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0010.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 842, "y", 1078, "w", 228, "h", 230]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 13, "w", 228, "h", 230]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0011.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1298, "y", 2, "w", 228, "h", 230]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 13, "w", 228, "h", 230]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0012.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1132, "y", 236, "w", 228, "h", 230]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 13, "w", 228, "h", 230]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0013.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 676, "y", 846, "w", 230, "h", 230]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 11, "y", 13, "w", 230, "h", 230]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0014.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1066, "y", 2, "w", 230, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 11, "y", 11, "w", 230, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0015.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 900, "y", 236, "w", 230, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 11, "y", 12, "w", 230, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0016.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 834, "y", 2, "w", 230, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 12, "w", 230, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0017.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 666, "y", 244, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 12, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0018.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 634, "y", 612, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 11, "y", 12, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0019.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 442, "y", 846, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 12, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0020.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 408, "y", 1098, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 11, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0021.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 400, "y", 612, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 12, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0022.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 208, "y", 864, "w", 232, "h", 232]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 11, "w", 232, "h", 232]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_explode_0023.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 882, "y", 1310, "w", 230, "h", 228]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 12, "y", 12, "w", 230, "h", 228]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0000.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1236, "y", 1304, "w", 142, "h", 122]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 60, "y", 62, "w", 142, "h", 122]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0001.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 642, "y", 1080, "w", 232, "h", 198]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 15, "y", 23, "w", 232, "h", 198]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0002.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 206, "y", 1144, "w", 234, "h", 200]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 14, "y", 22, "w", 234, "h", 200]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0003.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 1144, "w", 238, "h", 202]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 11, "y", 22, "w", 238, "h", 202]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0004.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 628, "y", 2, "w", 240, "h", 204]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 10, "y", 21, "w", 240, "h", 204]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0005.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 458, "y", 248, "w", 242, "h", 206]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 9, "y", 20, "w", 242, "h", 206]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0006.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 422, "y", 2, "w", 244, "h", 204]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 8, "y", 22, "w", 244, "h", 204]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0007.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 250, "y", 284, "w", 248, "h", 206]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 5, "y", 21, "w", 248, "h", 206]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0008.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 892, "w", 250, "h", 204]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 4, "y", 23, "w", 250, "h", 204]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0009.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 196, "y", 612, "w", 250, "h", 202]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 4, "y", 25, "w", 250, "h", 202]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0010.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1292, "y", 1212, "w", 88, "h", 110]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 82, "y", 78, "w", 88, "h", 110]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0011.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1544, "y", 948, "w", 92, "h", 116]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 80, "y", 75, "w", 92, "h", 116]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0012.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1440, "w", 98, "h", 122]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 77, "y", 72, "w", 98, "h", 122]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0013.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1730, "y", 1424, "w", 104, "h", 128]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 73, "y", 69, "w", 104, "h", 128]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0014.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1726, "y", 948, "w", 108, "h", 134]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 71, "y", 66, "w", 108, "h", 134]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0015.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 924, "y", 470, "w", 114, "h", 140]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 67, "y", 63, "w", 114, "h", 140]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0016.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 506, "y", 492, "w", 118, "h", 144]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 65, "y", 62, "w", 118, "h", 144]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0017.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1112, "y", 1304, "w", 122, "h", 150]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 63, "y", 58, "w", 122, "h", 150]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0018.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 1384, "w", 128, "h", 154]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 59, "y", 56, "w", 128, "h", 154]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0019.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 764, "y", 478, "w", 132, "h", 158]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 57, "y", 54, "w", 132, "h", 158]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0020.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 308, "y", 1380, "w", 136, "h", 160]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 54, "y", 53, "w", 136, "h", 160]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0021.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1040, "y", 470, "w", 138, "h", 164]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 53, "y", 51, "w", 138, "h", 164]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0022.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1832, "y", 2, "w", 142, "h", 168]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 51, "y", 49, "w", 142, "h", 168]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0023.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1608, "y", 610, "w", 146, "h", 170]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 48, "y", 48, "w", 146, "h", 170]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0024.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1438, "y", 460, "w", 146, "h", 172]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 48, "y", 47, "w", 146, "h", 172]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0025.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1794, "y", 458, "w", 148, "h", 174]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 47, "y", 46, "w", 148, "h", 174]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0026.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 132, "y", 1384, "w", 150, "h", 174]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 45, "y", 46, "w", 150, "h", 174]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "balloon_pop_0027.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1794, "y", 608, "w", 148, "h", 172]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 46, "y", 46, "w", 148, "h", 172]), "sourceSize", $.makeLiteralMap(["w", 256, "h", 256])]), "dart_fly_0000.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1796, "y", 330, "w", 126, "h", 194]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 869, "y", 486, "w", 126, "h", 194]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0001.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 2, "w", 210, "h", 320]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 794, "y", 385, "w", 210, "h", 320]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0002.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 324, "w", 246, "h", 286]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 736, "y", 317, "w", 246, "h", 286]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0003.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1582, "y", 228, "w", 212, "h", 220]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 689, "y", 271, "w", 212, "h", 220]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0004.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1832, "y", 146, "w", 182, "h", 166]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 653, "y", 244, "w", 182, "h", 166]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0005.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1352, "y", 834, "w", 162, "h", 120]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 621, "y", 231, "w", 162, "h", 120]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0006.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1292, "y", 1068, "w", 142, "h", 98]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 597, "y", 211, "w", 142, "h", 98]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0007.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1250, "y", 1448, "w", 126, "h", 92]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 576, "y", 189, "w", 126, "h", 92]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0008.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1638, "y", 948, "w", 112, "h", 86]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 558, "y", 179, "w", 112, "h", 86]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0009.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1518, "y", 1206, "w", 98, "h", 94]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 545, "y", 177, "w", 98, "h", 94]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0010.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1456, "y", 956, "w", 86, "h", 110]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 534, "y", 185, "w", 86, "h", 110]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0011.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1860, "y", 1420, "w", 76, "h", 124]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 524, "y", 199, "w", 76, "h", 124]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0012.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1540, "y", 608, "w", 66, "h", 134]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 517, "y", 221, "w", 66, "h", 134]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0013.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0014.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0015.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0016.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0017.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0018.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0019.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0020.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0021.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0022.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0023.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0024.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0025.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0026.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0027.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0028.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0029.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0030.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0031.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0032.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0033.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0034.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0035.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0036.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0037.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0038.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0039.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1850, "y", 1080, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0040.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1930, "y", 758, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0041.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1862, "y", 1014, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0042.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1862, "y", 948, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0043.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1792, "y", 882, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0044.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1696, "y", 1062, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0045.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1654, "y", 882, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0046.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1630, "y", 1066, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0047.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1564, "y", 1066, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0048.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1578, "y", 1302, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0049.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1512, "y", 1302, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0050.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1446, "y", 1302, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0051.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1516, "y", 882, "w", 64, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0052.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1540, "y", 744, "w", 64, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 505, "y", 248, "w", 64, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0053.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1844, "y", 1146, "w", 62, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 506, "y", 248, "w", 62, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_0054.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 214, "y", 287, "w", 1, "h", 1]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 1, "h", 1]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0000.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1644, "y", 1292, "w", 102, "h", 130]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 390, "y", 512, "w", 102, "h", 130]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0001.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1704, "y", 2, "w", 126, "h", 216]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 378, "y", 424, "w", 126, "h", 216]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0002.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 214, "y", 2, "w", 206, "h", 280]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 338, "y", 359, "w", 206, "h", 280]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0003.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 2, "y", 612, "w", 192, "h", 278]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 340, "y", 312, "w", 192, "h", 278]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0004.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1528, "y", 2, "w", 174, "h", 224]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 347, "y", 283, "w", 174, "h", 224]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0005.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1612, "y", 450, "w", 158, "h", 180]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 356, "y", 265, "w", 158, "h", 180]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0006.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1206, "y", 468, "w", 144, "h", 138]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 365, "y", 257, "w", 144, "h", 138]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0007.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1606, "y", 758, "w", 130, "h", 122]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 376, "y", 235, "w", 130, "h", 122]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0008.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 652, "y", 492, "w", 118, "h", 110]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 387, "y", 221, "w", 118, "h", 110]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0009.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1352, "y", 956, "w", 110, "h", 102]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 394, "y", 212, "w", 110, "h", 102]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0010.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1378, "y", 1440, "w", 100, "h", 98]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 406, "y", 215, "w", 100, "h", 98]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0011.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1404, "y", 1206, "w", 94, "h", 112]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 416, "y", 222, "w", 94, "h", 112]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0012.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1618, "y", 1204, "w", 86, "h", 122]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 428, "y", 237, "w", 86, "h", 122]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0013.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0014.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0015.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0016.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0017.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0018.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0019.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0020.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0021.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0022.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0023.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0024.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0025.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0026.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0027.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0028.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0029.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0030.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0031.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0032.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0033.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0034.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0035.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0036.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0037.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0038.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0039.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1478, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0040.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1360, "y", 1302, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0041.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1392, "y", 1068, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0042.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1112, "y", 1456, "w", 84, "h", 136]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0043.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1352, "y", 468, "w", 84, "h", 136]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 84, "h", 136]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0044.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1830, "y", 1292, "w", 80, "h", 126]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 442, "y", 261, "w", 80, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0045.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1748, "y", 1292, "w", 80, "h", 126]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 442, "y", 261, "w", 80, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0046.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1860, "y", 1210, "w", 80, "h", 126]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 442, "y", 261, "w", 80, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0047.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1602, "y", 1440, "w", 80, "h", 126]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 442, "y", 261, "w", 80, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0048.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1762, "y", 1140, "w", 80, "h", 126]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 442, "y", 261, "w", 80, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0049.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1912, "y", 1292, "w", 76, "h", 126]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 76, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0050.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 378, "y", 534, "w", 76, "h", 126]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 76, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0051.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 250, "y", 534, "w", 76, "h", 126]), "rotated", true, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 261, "w", 76, "h", 126]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0052.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1738, "y", 758, "w", 76, "h", 122]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 443, "y", 262, "w", 76, "h", 122]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0053.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 1816, "y", 758, "w", 74, "h", 120]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 444, "y", 264, "w", 74, "h", 120]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])]), "dart_fly_shadow_0054.png", $.makeLiteralMap(["frame", $.makeLiteralMap(["x", 214, "y", 284, "w", 1, "h", 1]), "rotated", false, "trimmed", true, "spriteSourceSize", $.makeLiteralMap(["x", 0, "y", 0, "w", 1, "h", 1]), "sourceSize", $.makeLiteralMap(["w", 1024, "h", 768])])]);
};

$.GlobalId$_internal = function(value) {
  return new $.GlobalId(value, $.Util_getHashCode([value]));
};

$.GlobalId_GlobalId = function() {
  var t1 = $.GlobalId__globalId;
  $.GlobalId__globalId = $.add(t1, 1);
  return $.GlobalId$_internal(t1);
};

$._SimpleEnumerable$ = function(_source) {
  return new $._SimpleEnumerable(_source);
};

$.CanvasElement_CanvasElement = function(height, width) {
  var e = $.document().$$dom_createElement$1("canvas");
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$.List_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(null);
  for (t1 = $.getInterceptor$JSArray(other).iterator$0(other); t1.get$hasNext() === true;)
    list.push(t1.next$0());
  return list;
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.Util_getHashCode = function(source) {
  var t1, hash, t2, next, hash0, hash1;
  $.requireArgumentNotNull(source, "source");
  for (t1 = $.CONSTANT1.iterator$0(source), hash = 0; t1.get$hasNext() === true; hash = hash1) {
    t2 = t1.next$0();
    next = t2 == null ? 0 : $.getInterceptor(t2).get$hashCode(t2);
    if (typeof next !== 'number')
      throw $.iae(next);
    hash0 = 536870911 & hash + next;
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
};

$.NullArgumentError$ = function(argument) {
  var t1 = new $.NullArgumentError(argument, "cannot be null");
  t1.DetailedArgumentError$2(argument, "cannot be null");
  return t1;
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.DetailedArgumentError$ = function(argument, details) {
  var t1 = new $.DetailedArgumentError(argument, details);
  t1.DetailedArgumentError$2(argument, details);
  return t1;
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$.Mouse_isMouseDirectlyOver = function(thing) {
  return $.get$Mouse_isMouseDirectlyOverProperty().get$1(thing);
};

$.InvalidOperationError$ = function(message) {
  return new $.InvalidOperationError(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$.Comparable_compare = function(a, b) {
  return $.getInterceptor$JSStringJSNumber(a).compareTo$1(a, b);
};

$.NumberEnumerable_NumberEnumerable$fromRange = function(start, count) {
  return $._RangeEnumerable$(start, count);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$._WhereIterator$ = function(_source, _func) {
  return new $._WhereIterator(_source, _func, null, null);
};

$._FuncEnumerable$ = function(_source, _func) {
  return new $._FuncEnumerable(_source, _func);
};

$._SelectIterator$ = function(_source, _func) {
  return new $._SelectIterator(_source, _func);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (count !== (count | 0))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$.TextureAnimationRequest$ = function(_texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, startFrame) {
  var t1 = new $.TextureAnimationRequest($.EventHandle$(), _texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, false, null);
  t1.TextureAnimationRequest$7$delay$initialFrame$initialFrameOffset$startFrame(_texturePrefix, _frameCount, _offset, delay, initialFrame, initialFrameOffset, startFrame);
  return t1;
};

$._LocationWrapper__get = function(p, m) {
  return p[m];
};

$._Sort__doSort = function(a, left, right, compare) {
  if (right - left <= 32)
    $._Sort_insertionSort_(a, left, right, compare);
  else
    $._Sort__dualPivotQuicksort(a, left, right, compare);
};

$._Sort_insertionSort_ = function(a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.gtB(compare.call$2(a[t1], el), 0);
        t1 = t2;
      } else
        t1 = false;
      t2 = a.length;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= t2)
        throw $.ioore(j0);
      t1 = a[j0];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      a[j] = t1;
      j = j0;
    }
    if (j < 0 || j >= t2)
      throw $.ioore(j);
    a[j] = el;
  }
};

$._Sort__dualPivotQuicksort = function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, t2, less, great, pivots_are_equal, k, ak, comp, great0, less0, t3;
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort__dualPivotQuicksort$bailout(1, a, left, right, compare);
  sixth = $.tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  less = left + 1;
  great = right - 1;
  pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      if ($.eqB(comp, 0))
        continue;
      if ($.ltB(comp, 0)) {
        if (k !== less) {
          t1 = a.length;
          if (less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else {
            t1 = $.ltB(comp, 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          t1 = a.length;
          if (less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.gtB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
  t1 = less - 1;
  t2 = a.length;
  if (t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (left >= t2)
    throw $.ioore(left);
  a[left] = t3;
  a[t1] = el2;
  t1 = great + 1;
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (right >= t2)
    throw $.ioore(right);
  a[right] = t3;
  a[t1] = el4;
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!$.eqB(compare.call$2(a[less], el2), 0))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!$.eqB(compare.call$2(a[great], el4), 0))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          t1 = a.length;
          if (less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.eqB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$.RetainedUtil__hitTest$bailout = function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      length$ = env3;
      hits = env2;
      point = env1;
      thing = env0;
      break;
    case 2:
      length$ = env4;
      point = env3;
      i = env2;
      hits = env1;
      thing = env0;
      break;
    case 3:
      t1 = env5;
      i = env4;
      hits = env3;
      length$ = env2;
      point = env1;
      thing = env0;
      break;
  }
  switch (state0) {
    case 0:
      point = $.RetainedUtil_transformPointGlobalToLocal(thing, point);
      bounds = $.Box$(0, 0, thing.get$width(), thing.get$height());
      hits = $.List_List(null);
    default:
      var point, bounds, hits, length$, thing, i, t1;
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && bounds.contains$1(point) === true)
        switch (state0) {
          case 0:
          default:
            if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof thing === 'object' && thing !== null && !!thing.is$ParentThing)
              switch (state0) {
                case 0:
                  length$ = thing.get$visualChildCount();
                case 1:
                  state0 = 0;
                  i = 0;
                default:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          hits = $.RetainedUtil__hitTest(thing.getVisualChild$1($.sub($.sub(length$, 1), i)), point);
                        case 2:
                          state0 = 0;
                          t1 = $.getInterceptor$JSStringJSArray(hits).get$length(hits);
                        case 3:
                          state0 = 0;
                          if ($.gtB(t1, 0))
                            break L0;
                          ++i;
                      }
                  thing = thing;
              }
            $.getInterceptor$JSArray(hits).add$1(hits, thing);
        }
      return hits;
  }
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, i;
  t1 = $.getInterceptor$JSStringJSArray(a);
  if ($.geB(startIndex, t1.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB(t1.operator$index$1(a, i), element))
      return i;
  return -1;
};

$._Sort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.gtB(compare.call$2(a[t1], el), 0);
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= a.length)
        throw $.ioore(j0);
      $.indexSet(a, j, a[j0]);
      j = j0;
    }
    $.indexSet(a, j, el);
  }
};

$._Sort__dualPivotQuicksort$bailout = function(state0, a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, pivots_are_equal, k, ak, comp, t2, great0, less0;
  sixth = $.tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  $.indexSet(a, index1, el1);
  $.indexSet(a, index3, el3);
  $.indexSet(a, index5, el5);
  if (left < 0 || left >= a.length)
    throw $.ioore(left);
  $.indexSet(a, index2, a[left]);
  if (right < 0 || right >= a.length)
    throw $.ioore(right);
  $.indexSet(a, index4, a[right]);
  less = left + 1;
  great = right - 1;
  pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      if ($.eqB(comp, 0))
        continue;
      if ($.ltB(comp, 0)) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.indexSet(a, k, a[less]);
          $.indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else {
            t1 = $.ltB(comp, 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              $.indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.indexSet(a, less, a[great]);
              $.indexSet(a, great, ak);
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              $.indexSet(a, k, a[great]);
              $.indexSet(a, great, ak);
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.indexSet(a, k, a[less]);
          $.indexSet(a, less, ak);
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.gtB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              $.indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.indexSet(a, less, a[great]);
              $.indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              $.indexSet(a, k, a[great]);
              $.indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
  t1 = less - 1;
  if (t1 >= a.length)
    throw $.ioore(t1);
  $.indexSet(a, left, a[t1]);
  $.indexSet(a, t1, el2);
  t1 = great + 1;
  if (t1 < 0 || t1 >= a.length)
    throw $.ioore(t1);
  $.indexSet(a, right, a[t1]);
  $.indexSet(a, t1, el4);
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!$.eqB(compare.call$2(a[less], el2), 0))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!$.eqB(compare.call$2(a[great], el4), 0))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.indexSet(a, k, a[less]);
          $.indexSet(a, less, ak);
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.eqB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less >= t2)
                throw $.ioore(less);
              $.indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.indexSet(a, less, a[great]);
              $.indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              $.indexSet(a, k, a[great]);
              $.indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$.Field_Field$bailout = function(state0, bombCount, cols, rows, seed) {
  var squares, rnd, i, index;
  squares = $.List_List(null);
  $.CONSTANT1.insertRange$3(squares, 0, $.mul(rows, cols), false);
  rnd = $.Random_Random(seed);
  for (i = 0; $.ltB(i, bombCount); ++i) {
    do {
      index = rnd.nextInt$1(squares.length);
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= squares.length)
        throw $.ioore(index);
    } while (squares[index] === true);
    squares[index] = true;
  }
  return $.Field$_internal(bombCount, cols, $.ReadOnlyCollection$(squares));
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
};

$.listInsertRange$bailout = function(state0, receiver, start, length$, initialValue) {
  var receiverLength, t1, t2, i;
  if ($.eqB(length$, 0))
    return;
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + length$;
  $.CONSTANT1.set$length(receiver, t1);
  t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (i = start; i < t2; ++i)
      $.indexSet(receiver, i, initialValue);
  $.CONSTANT1.set$length(receiver, t1);
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env2;
      t1 = env1;
      strings = env0;
      break;
    case 3:
      length$ = env3;
      t1 = env2;
      array = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      t1 = $.getInterceptor$JSStringJSArray(strings);
      length$ = t1.get$length(strings);
    case 2:
      state0 = 0;
    case 3:
      var strings, t1, length$, i, string, array;
      if (state0 === 0 && $.isJsArray(strings)) {
        for (i = 0; $.ltB(i, length$); ++i) {
          string = t1.operator$index$1(strings, i);
          if (!(typeof string === 'string'))
            throw $.$$throw($.ArgumentError$(string));
        }
        array = strings;
      } else
        switch (state0) {
          case 0:
            array = $.List_List(length$);
          case 3:
            state0 = 0;
            for (i = 0; $.ltB(i, length$); ++i) {
              string = t1.operator$index$1(strings, i);
              if (!(typeof string === 'string'))
                throw $.$$throw($.ArgumentError$(string));
              $.indexSet(array, i, string);
            }
        }
      return array;
  }
};

$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$._onProgress.call$1 = $._onProgress;
$._onProgress.$name = "_onProgress";
$._onLoaded.call$1 = $._onLoaded;
$._onLoaded.$name = "_onLoaded";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$._onPopupClick.call$1 = $._onPopupClick;
$._onPopupClick.$name = "_onPopupClick";
$._onKeyDown.call$1 = $._onKeyDown;
$._onKeyDown.$name = "_onKeyDown";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$._Audio__getAudioPath.call$1 = $._Audio__getAudioPath;
$._Audio__getAudioPath.$name = "_Audio__getAudioPath";
$.Comparable_compare.call$2 = $.Comparable_compare;
$.Comparable_compare.$name = "Comparable_compare";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
Isolate.$finishClasses($$);
$$ = {};
$.$int = {builtin$cls: '$int'};
$.String = {builtin$cls: 'String'};
$.List = {builtin$cls: 'List'};
$.num = {builtin$cls: 'num'};
$.Node = {builtin$cls: 'Node'};
$.Match = {builtin$cls: 'Match'};
$.bool = {builtin$cls: 'bool'};
$.CONSTANT3 = new Isolate.$isolateProperties.JSInt();
$.CONSTANT7 = new Isolate.$isolateProperties.JSDouble();
$.CONSTANT5 = new Isolate.$isolateProperties.JSString();
$.CONSTANT14 = new Isolate.$isolateProperties.Size(2048, 1536);
$.CONSTANT18 = new Isolate.$isolateProperties.SquareState("hidden");
$.CONSTANT16 = new Isolate.$isolateProperties.Size(100, 100);
$.CONSTANT32 = new Isolate.$isolateProperties.Coordinate(0, 0);
$.CONSTANT15 = new Isolate.$isolateProperties.Vector(352, 96);
$.CONSTANT20 = new Isolate.$isolateProperties.SquareState("flagged");
$.CONSTANT19 = new Isolate.$isolateProperties.SquareState("revealed");
$.CONSTANT2 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT23 = new Isolate.$isolateProperties.GameState("started");
$.CONSTANT25 = new Isolate.$isolateProperties.Vector(-88, -88);
$.CONSTANT27 = new Isolate.$isolateProperties.Vector(-472, -348);
$.CONSTANT31 = new Isolate.$isolateProperties.Object();
$.CONSTANT13 = new Isolate.$isolateProperties.Coordinate(32, 32);
$.CONSTANT17 = new Isolate.$isolateProperties.GameState("reset");
$.CONSTANT6 = new Isolate.$isolateProperties._Random();
$.CONSTANT8 = new Isolate.$isolateProperties._UndefinedValue();
$.CONSTANT11 = new Isolate.$isolateProperties.InvalidOperationError("The input sequence contains more than one element.");
$.CONSTANT24 = new Isolate.$isolateProperties.SquareState("bomb");
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT = Isolate.makeConstantList(["Pop0", "Pop1", "Pop2", "Pop3", "Pop4", "Pop5", "Pop6", "Pop7", "Pop8", "Bomb0", "Bomb1", "Bomb2", "Bomb3", "Bomb4", "throw", "flag", "unflag", "click", "win"]);
$.CONSTANT0 = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT26 = new Isolate.$isolateProperties.SquareState("safe");
$.CONSTANT9 = new Isolate.$isolateProperties.DisposedError("Invalid operation on disposed object");
$.CONSTANT30 = new Isolate.$isolateProperties.InvalidOperationError("Input contained a null item");
$.CONSTANT29 = Isolate.makeConstantList(["balloon_pieces_a.png", "balloon_pieces_b.png", "balloon_pieces_c.png", "balloon_pieces_d.png"]);
$.CONSTANT10 = new Isolate.$isolateProperties.InvalidOperationError("The input sequence is empty.");
$.CONSTANT21 = new Isolate.$isolateProperties.GameState("won");
$.CONSTANT12 = new Isolate.$isolateProperties.EventArgs();
$.CONSTANT22 = new Isolate.$isolateProperties.GameState("lost");
$.CONSTANT28 = Isolate.makeConstantList(["game_board_center", "number_one", "number_two", "number_three", "number_four", "number_five", "number_six", "number_seven", "number_eight"]);
$.CONSTANT1 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT4 = new Isolate.$isolateProperties.JSNumber();
$.ResourceLoader_StateUnloaded = "unloaded";
$.ResourceLoader_StateLoaded = "loaded";
$._cachedBrowserPrefix = null;
$.ResourceLoader__defaultSize = 2000;
$.ResourceLoader_StateLoading = "loading";
$.Primitives_hashCodeSeed = 0;
$.Primitives_mirrorsEnabled = false;
$.GameAudio_WIN = "win";
$.GameAudio_CLICK = "click";
$.GameAudio_POP = "Pop";
$.GameAudio_FLAG = "flag";
$.GameAudio_UNFLAG = "unflag";
$.GameAudio_BOMB = "Bomb";
$.GameAudio_THROW_DART = "throw";
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.GlobalId__globalId = 0;
$.PI = 3.141592653589793;
$._getTypeNameOf = null;
$.MIRROR_OPT_IN_MESSAGE = "\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n";
$.SquareState_hidden = Isolate.$isolateProperties.CONSTANT18;
$.SquareState_revealed = Isolate.$isolateProperties.CONSTANT19;
$.SquareState_flagged = Isolate.$isolateProperties.CONSTANT20;
$.SquareState_bomb = Isolate.$isolateProperties.CONSTANT24;
$.SquareState_safe = Isolate.$isolateProperties.CONSTANT26;
$.GameElement__edgeOffset = 32;
$.GameElement__backgroundSize = Isolate.$isolateProperties.CONSTANT14;
$.GameElement__backgroundEdgeOffset = 256;
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.GameElement__boardOffset = Isolate.$isolateProperties.CONSTANT15;
$.GameElement__backgroundHoleSize = 1344;
$.GameElement__popExplodeAnimationOffset = Isolate.$isolateProperties.CONSTANT25;
$.GameElement__popAnimationHitFrame = 12;
$.GameElement__dartAnimationOffset = Isolate.$isolateProperties.CONSTANT27;
$.ScoreElement__bombsLeftStr = "BOMBS LEFT:";
$.ScoreElement__valueOffset = 15;
$.Duration_MILLISECONDS_PER_SECOND = 1000;
$.Duration_SECONDS_PER_MINUTE = 60;
$.Duration_MINUTES_PER_HOUR = 60;
$.Duration_HOURS_PER_DAY = 24;
$.Duration_MILLISECONDS_PER_MINUTE = 60000;
$.Duration_MILLISECONDS_PER_HOUR = 3600000;
$.Duration_MILLISECONDS_PER_DAY = 86400000;
$.SquareElement__size = 80;
$.SquareElement__balloonBits = Isolate.$isolateProperties.CONSTANT29;
$.SquareElement__numberMap = Isolate.$isolateProperties.CONSTANT28;
$._Audio__audioNames = Isolate.$isolateProperties.CONSTANT;
$._Sort__INSERTION_SORT_THRESHOLD = 32;
$._transparentTextureName = "images/transparent_animated.png";
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT2;
$._opaqueTextureName = "images/dart_opaque_01.jpg";
$._HashMapImpl__INITIAL_CAPACITY = 8;
$._transparentStaticTexture = "images/transparent_static.png";
$.Property_Undefined = Isolate.$isolateProperties.CONSTANT8;
$._loadingBarPxWidth = 398;
$._loadingBar = null;
$._botHelperRandom = null;
$._imageLoader = null;
$._audio = null;
$.GameState_reset = Isolate.$isolateProperties.CONSTANT17;
$.GameState_started = Isolate.$isolateProperties.CONSTANT23;
$.GameState_won = Isolate.$isolateProperties.CONSTANT21;
$.GameState_lost = Isolate.$isolateProperties.CONSTANT22;
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSStringJSNumber = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (typeof receiver == 'number') return $.JSNumber.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == 'number') return $.JSNumber.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  if (typeof receiver == 'number' && Math.floor(receiver) == receiver) return $.JSInt.prototype;
  if (typeof receiver == 'number') return $.JSDouble.prototype;
  if (receiver == null) return $.JSNull.prototype;
  if (typeof receiver == 'function') return $.JSFunction.prototype;
  if (typeof receiver == 'boolean') return $.JSBool.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, '_audioFormat', '_Audio__audioFormat', 'get$_Audio__audioFormat', function() {
  return $._Audio__getAudioFormat();
}, function() { return $._Audio__audioFormat; });
Isolate.$lazy($, '_clickManagerProperty', 'ClickManager__clickManagerProperty', 'get$ClickManager__clickManagerProperty', function() {
  return $.Property$("_clickManager", null);
}, function() { return $.ClickManager__clickManagerProperty; });
Isolate.$lazy($, '_isClickableProperty', 'ClickManager__isClickableProperty', 'get$ClickManager__isClickableProperty', function() {
  return $.Property$("isClickable", false);
}, function() { return $.ClickManager__isClickableProperty; });
Isolate.$lazy($, '_clickEvent', 'ClickManager__clickEvent', 'get$ClickManager__clickEvent', function() {
  return $.AttachedEvent$("clickEvent");
}, function() { return $.ClickManager__clickEvent; });
Isolate.$lazy($, '_mouseDownEvent', 'ClickManager__mouseDownEvent', 'get$ClickManager__mouseDownEvent', function() {
  return $.AttachedEvent$("mouseDown");
}, function() { return $.ClickManager__mouseDownEvent; });
Isolate.$lazy($, '_mouseUpEvent', 'ClickManager__mouseUpEvent', 'get$ClickManager__mouseUpEvent', function() {
  return $.AttachedEvent$("mouseUp");
}, function() { return $.ClickManager__mouseUpEvent; });
Isolate.$lazy($, 'isMouseOverProperty', 'Mouse_isMouseOverProperty', 'get$Mouse_isMouseOverProperty', function() {
  return $.Property$("IsMouseOver", false);
}, function() { return $.Mouse_isMouseOverProperty; });
Isolate.$lazy($, '_mouseMoveEvent', 'ClickManager__mouseMoveEvent', 'get$ClickManager__mouseMoveEvent', function() {
  return $.AttachedEvent$("mouseMove");
}, function() { return $.ClickManager__mouseMoveEvent; });
Isolate.$lazy($, 'isMouseDirectlyOverProperty', 'Mouse_isMouseDirectlyOverProperty', 'get$Mouse_isMouseDirectlyOverProperty', function() {
  return $.Property$("IsMouseDirectlyOver", false);
}, function() { return $.Mouse_isMouseDirectlyOverProperty; });
Isolate.$lazy($, '_mouseOutEvent', 'ClickManager__mouseOutEvent', 'get$ClickManager__mouseOutEvent', function() {
  return $.AttachedEvent$("mouseOut");
}, function() { return $.ClickManager__mouseOutEvent; });
Isolate.$lazy($, '_stageMouseCacheProperty', 'Mouse__stageMouseCacheProperty', 'get$Mouse__stageMouseCacheProperty', function() {
  return $.Property$("_stageMouseCacheProperty", null);
}, function() { return $.Mouse__stageMouseCacheProperty; });
Isolate.$lazy($, '_audioEventHandle', 'GameAudio__audioEventHandle', 'get$GameAudio__audioEventHandle', function() {
  return $.EventHandle$();
}, function() { return $.GameAudio__audioEventHandle; });
Isolate.$lazy($, '_containerTransformProperty', 'PanelThing__containerTransformProperty', 'get$PanelThing__containerTransformProperty', function() {
  return $.Property$("panelTransform", null);
}, function() { return $.PanelThing__containerTransformProperty; });
Isolate.$lazy($, '_titleClickedEventHandle', '_titleClickedEventHandle', 'get$_titleClickedEventHandle', function() {
  return $.EventHandle$();
}, function() { return $._titleClickedEventHandle; });
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, false);
}, function() { return $.quoteRegExp; });
Isolate.$lazy($, 'titleClickedEvent', 'titleClickedEvent', 'get$titleClickedEvent', function() {
  return $.get$_titleClickedEventHandle();
}, function() { return $.titleClickedEvent; });
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$AnchorElement: function() { return false; },
 is$Collection: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$Map: function() { return false; },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$Location: function() { return false; },
 is$List: function() { return false; },
 is$Element: function() { return false; }
});

$.$defineNativeClass('HTMLAnchorElement', {
 get$hash: function() { return this.hash; },
 get$href: function() { return this.href; },
 toString$0: function() {
  return this.toString();
},
 is$AnchorElement: function() { return true; }
});

$.$defineNativeClass('HTMLAppletElement', {
 get$height: function() { return this.height; },
 set$height: function(v) { this.height = v; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; }
});

$.$defineNativeClass('HTMLAreaElement', {
 get$hash: function() { return this.hash; },
 get$href: function() { return this.href; }
});

$.$defineNativeClass('Attr', {
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
});

$.$defineNativeClass('HTMLBRElement', {
 clear$0: function() {
  return this.clear.call$0();
},
 clear$1: function(arg0) {
  return this.clear.call$1(arg0);
}
});

$.$defineNativeClass('HTMLBaseElement', {
 get$href: function() { return this.href; }
});

$.$defineNativeClass('HTMLBaseFontElement', {
 get$size: function() { return this.size; },
 set$size: function(v) { this.size = v; }
});

$.$defineNativeClass('BeforeLoadEvent', {
 get$url: function() { return this.url; }
});

$.$defineNativeClass('Blob', {
 get$size: function() { return this.size; }
});

$.$defineNativeClass('HTMLBodyElement', {
 get$on: function() {
  return $.BodyElementEvents$(this);
}
});

$.$defineNativeClass('HTMLButtonElement', {
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
});

$.$defineNativeClass('HTMLCanvasElement', {
 get$height: function() { return this.height; },
 set$height: function(v) { this.height = v; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; },
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 get$context2d: function() {
  return this.getContext$1("2d");
}
});

$.$defineNativeClass('CanvasRenderingContext2D', {
 set$fillStyle: function(v) { this.fillStyle = v; },
 set$font: function(v) { this.font = v; },
 get$globalAlpha: function() { return this.globalAlpha; },
 set$globalAlpha: function(v) { this.globalAlpha = v; },
 set$textAlign: function(v) { this.textAlign = v; },
 set$textBaseline: function(v) { this.textBaseline = v; },
 beginPath$0: function() {
  return this.beginPath();
},
 bezierCurveTo$6: function(cp1x, cp1y, cp2x, cp2y, x, y) {
  return this.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);
},
 clearRect$4: function(x, y, width, height) {
  return this.clearRect(x,y,width,height);
},
 closePath$0: function() {
  return this.closePath();
},
 drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
},
 drawImage$3: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y) {
  return this.drawImage(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y);
},
 fill$0: function() {
  return this.fill();
},
 fillRect$4: function(x, y, width, height) {
  return this.fillRect(x,y,width,height);
},
 fillText$4: function(text, x, y, maxWidth) {
  return this.fillText(text,x,y,maxWidth);
},
 fillText$3: function(text, x, y) {
  return this.fillText(text, x, y);
},
 measureText$1: function(text) {
  return this.measureText(text);
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 restore$0: function() {
  return this.restore();
},
 save$0: function() {
  return this.save();
},
 scale$2: function(sx, sy) {
  return this.scale(sx,sy);
},
 transform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.transform(m11,m12,m21,m22,dx,dy);
},
 translate$2: function(tx, ty) {
  return this.translate(tx,ty);
}
});

$.$defineNativeClass('CharacterData', {
 get$length: function() { return this.length; },
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', {
 get$height: function() { return this.height; },
 get$left: function() { return this.left; },
 get$top: function() { return this.top; },
 get$width: function() { return this.width; }
});

$.$defineNativeClass('CSSStyleDeclaration', {
 get$length: function() { return this.length; },
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : "";
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 get$clear: function() {
  return this.getPropertyValue$1("clear");
},
 clear$0: function() {
  return this.get$clear().call$0();
},
 clear$1: function(arg0) {
  return this.get$clear().call$1(arg0);
},
 set$cursor: function(value) {
  this.setProperty$3("cursor", value, "");
},
 set$display: function(value) {
  this.setProperty$3("display", value, "");
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "filter");
},
 filter$1: function(arg0) {
  return this.get$filter().call$1(arg0);
},
 set$font: function(value) {
  this.setProperty$3("font", value, "");
},
 get$height: function() {
  return this.getPropertyValue$1("height");
},
 set$height: function(value) {
  this.setProperty$3("height", value, "");
},
 get$left: function() {
  return this.getPropertyValue$1("left");
},
 set$left: function(value) {
  this.setProperty$3("left", value, "");
},
 get$resize: function() {
  return this.getPropertyValue$1("resize");
},
 get$size: function() {
  return this.getPropertyValue$1("size");
},
 set$size: function(value) {
  this.setProperty$3("size", value, "");
},
 set$src: function(value) {
  this.setProperty$3("src", value, "");
},
 set$textAlign: function(value) {
  this.setProperty$3("text-align", value, "");
},
 get$top: function() {
  return this.getPropertyValue$1("top");
},
 set$top: function(value) {
  this.setProperty$3("top", value, "");
},
 get$transform: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "transform");
},
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5);
},
 set$userSelect: function(value) {
  this.setProperty$3($.S($._browserPrefix()) + "user-select", value, "");
},
 get$width: function() {
  return this.getPropertyValue$1("width");
},
 set$width: function(value) {
  this.setProperty$3("width", value, "");
}
});

$.$defineNativeClass('HTMLDetailsElement', {
 open$2: function(arg0, arg1) {
  return this.open.call$2(arg0, arg1);
},
 open$3: function(arg0, arg1, arg2) {
  return this.open.call$3(arg0, arg1, arg2);
}
});

$.$defineNativeClass('Document', {
 get$on: function() {
  return $.DocumentEvents$(this);
},
 $$dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $$dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", false, false).hasMatch$1(selectors) === true)
    return this.$$dom_getElementById$1($.CONSTANT5.substring$1(selectors, 1));
  return this.$$dom_querySelector$1(selectors);
}
});

$.$defineNativeClass('DocumentFragment', {
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 get$translate: function() {
  return false;
},
 translate$2: function(arg0, arg1) {
  return this.get$translate().call$2(arg0, arg1);
},
 get$id: function() {
  return "";
},
 get$parent: function() {
  return;
},
 get$style: function() {
  return $.Element_Element$tag("div").get$style();
},
 click$0: function() {
},
 get$click: function() {
  return new $.BoundClosure0(this, 'click$0');
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
}
});

$.$defineNativeClass('DocumentType', {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DOMException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Element', {
 get$id: function() { return this.id; },
 get$style: function() { return this.style; },
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.ElementEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 translate$2: function(arg0, arg1) {
  return this.translate.call$2(arg0, arg1);
},
 click$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('click$0')) {
    return this.click();
  } else {
    return Object.prototype.click$0.call(this);
  }
},
 get$click: function() {
  return new $.BoundClosure0(this, 'click$0');
},
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {
 get$height: function() { return this.height; },
 set$height: function(v) { this.height = v; },
 set$src: function(v) { this.src = v; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; }
});

$.$defineNativeClass('Event', {
 get$currentTarget: function() {
  return $._convertNativeToDart_EventTarget(this.currentTarget);
},
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.target);
},
 preventDefault$0: function() {
  return this.preventDefault();
}
});

$.$defineNativeClass('EventException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventTarget', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.Events$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_removeEventListener$3')) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
}
});

$.$defineNativeClass('FileException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Float32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $.Collections_every(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $.Collections_every(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', {
 get$size: function() { return this.size; },
 set$size: function(v) { this.size = v; }
});

$.$defineNativeClass('HTMLFormElement', {
 get$length: function() { return this.length; }
});

$.$defineNativeClass('HTMLFrameElement', {
 get$height: function() { return this.height; },
 get$location: function() { return this.location; },
 set$src: function(v) { this.src = v; },
 get$width: function() { return this.width; }
});

$.$defineNativeClass('HTMLFrameSetElement', {
 get$on: function() {
  return $.FrameSetElementEvents$(this);
}
});

$.$defineNativeClass('HTMLHRElement', {
 get$size: function() { return this.size; },
 set$size: function(v) { this.size = v; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; }
});

$.$defineNativeClass('HTMLCollection', {
 get$length: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$length')) {
    return this.length;
  } else {
    return Object.prototype.get$length.call(this);
  }
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $.Collections_every(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$length')) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  } else {
    return Object.prototype.set$length.call(this, value);
  }
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('XMLHttpRequest', {
 get$response: function() { return this.response; },
 set$responseType: function(v) { this.responseType = v; },
 get$status: function() { return this.status; },
 get$on: function() {
  return $.HttpRequestEvents$(this);
},
 abort$0: function() {
  return this.abort();
},
 get$abort: function() {
  return new $.BoundClosure0(this, 'abort$0');
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 open$5: function(method, url, async, user, password) {
  return this.open(method,url,async,user,password);
},
 open$2: function(method, url) {
  return this.open(method, url);
},
 open$3: function(method, url, async) {
  return this.open(method, url, async);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
},
 send$0: function() {
  return this.send();
}
});

$.$defineNativeClass('XMLHttpRequestException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', {
 get$totalSize: function() { return this.totalSize; }
});

$.$defineNativeClass('XMLHttpRequestUpload', {
 get$on: function() {
  return $.HttpRequestUploadEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLIFrameElement', {
 get$height: function() { return this.height; },
 set$height: function(v) { this.height = v; },
 set$src: function(v) { this.src = v; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; }
});

$.$defineNativeClass('HTMLImageElement', {
 get$height: function() { return this.height; },
 set$height: function(v) { this.height = v; },
 set$src: function(v) { this.src = v; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('HTMLInputElement', {
 get$height: function() { return this.height; },
 set$height: function(v) { this.height = v; },
 get$pattern: function() { return this.pattern; },
 get$size: function() { return this.size; },
 set$size: function(v) { this.size = v; },
 set$src: function(v) { this.src = v; },
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; },
 get$on: function() {
  return $.InputElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $.Collections_every(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $.Collections_every(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $.Collections_every(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('KeyboardEvent', {
 get$shiftKey: function() { return this.shiftKey; },
 get$keyCode: function() {
  return this.keyCode;
}
});

$.$defineNativeClass('HTMLLIElement', {
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
});

$.$defineNativeClass('HTMLLinkElement', {
 get$href: function() { return this.href; }
});

$.$defineNativeClass('History', {
 get$length: function() { return this.length; },
 get$state: function() {
  return this._convertNativeToDart_SerializedScriptValue$1(this.state);
}
});

$.$defineNativeClass('Location', {
 get$hash: function() { return this.hash; },
 get$href: function() { return this.href; },
 assign$1: function(url) {
  return this.assign(url);
},
 replace$1: function(url) {
  return this.replace(url);
},
 toString$0: function() {
  return this.toString();
},
 is$Location: function() { return true; }
});

$.$defineNativeClass('DOMWindow', {
 get$history: function() { return this.history; },
 get$innerHeight: function() { return this.innerHeight; },
 get$innerWidth: function() { return this.innerWidth; },
 get$localStorage: function() { return this.localStorage; },
 get$navigator: function() { return this.navigator; },
 get$_liblib$_parent: function() { return this.parent; },
 get$status: function() { return this.status; },
 open$3: function(url, name$, options) {
  if (options == null)
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$));
  else
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$,options));
},
 open$2: function(url, name$) {
  return this.open$3(url, name$, null);
},
 get$location: function() {
  var result = this.get$_location();
  if ($.LocalWindow__isDartLocation(result) === true)
    return result;
  if (null == this._location_wrapper)
    this._location_wrapper = $._LocationWrapper$(result);
  return this._location_wrapper;
},
 get$_location: function() {
  return this.location;
},
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
  if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
    return;
    (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 get$parent: function() {
  return $._convertNativeToDart_Window(this.parent);
},
 get$top: function() {
  return $._convertNativeToDart_Window(this.top);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearInterval$1: function(handle) {
  return this.clearInterval(handle);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('HTMLMarqueeElement', {
 get$height: function() { return this.height; },
 set$height: function(v) { this.height = v; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; }
});

$.$defineNativeClass('HTMLMediaElement', {
 get$duration: function() { return this.duration; },
 get$error: function() { return this.error; },
 set$src: function(v) { this.src = v; },
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 load$0: function() {
  return this.load();
},
 get$load: function() {
  return new $.BoundClosure0(this, 'load$0');
}
});

$.$defineNativeClass('HTMLMeterElement', {
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
});

$.$defineNativeClass('MouseEvent', {
 get$shiftKey: function() { return this.shiftKey; },
 get$toElement: function() { return this.toElement; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 get$offsetX: function() {
  if (!!this.offsetX)
    return this.offsetX;
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.UnsupportedError$("offsetX is only supported on elements"));
    return $.sub(this.clientX, this.get$target().getBoundingClientRect$0().get$left());
  }
},
 get$offsetY: function() {
  if (!!this.offsetY)
    return this.offsetY;
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.UnsupportedError$("offsetY is only supported on elements"));
    return $.sub(this.clientY, this.get$target().getBoundingClientRect$0().get$top());
  }
}
});

$.$defineNativeClass('NamedNodeMap', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $.Collections_every(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {
 get$userAgent: function() { return this.userAgent; }
});

$.$defineNativeClass('Node', {
 get$parent: function() { return this.parentElement; },
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
    var t1 = this.parentNode;
    if (!(t1 == null))
      t1.$$dom_removeChild$1(this);
  } else {
    return Object.prototype.remove$0.call(this);
  }
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $$dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('NodeList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $.Collections_every(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOListElement', {
 start$1: function(arg0) {
  return this.start.call$1(arg0);
}
});

$.$defineNativeClass('HTMLObjectElement', {
 get$height: function() { return this.height; },
 set$height: function(v) { this.height = v; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; }
});

$.$defineNativeClass('HTMLOptionElement', {
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
});

$.$defineNativeClass('HTMLOutputElement', {
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
});

$.$defineNativeClass('HTMLParamElement', {
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
});

$.$defineNativeClass('PopStateEvent', {
 get$state: function() {
  return $.convertNativeToDart_SerializedScriptValue(this.state);
}
});

$.$defineNativeClass('HTMLPreElement', {
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; }
});

$.$defineNativeClass('HTMLProgressElement', {
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
});

$.$defineNativeClass('ProgressEvent', {
 get$loaded: function() { return this.loaded; }
});

$.$defineNativeClass('RadioNodeList', {
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
});

$.$defineNativeClass('RangeException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLScriptElement', {
 set$src: function(v) { this.src = v; }
});

$.$defineNativeClass('HTMLSelectElement', {
 get$length: function() { return this.length; },
 set$length: function(v) { this.length = v; },
 get$size: function() { return this.size; },
 set$size: function(v) { this.size = v; },
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
});

$.$defineNativeClass('HTMLSourceElement', {
 set$src: function(v) { this.src = v; }
});

$.$defineNativeClass('Storage', {
 containsKey$1: function(key) {
  return !(this.$$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  this.$$dom_setItem$2(key, value);
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.$$dom_getItem$1(key) == null)
    this.operator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$length: function() {
  return this.length;
},
 get$isEmpty: function() {
  return this.$$dom_key$1(0) == null;
},
 $$dom_clear$0: function() {
  return this.clear();
},
 $$dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $$dom_key$1: function(index) {
  return this.key(index);
},
 $$dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $$dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {
 get$key: function() { return this.key; },
 get$url: function() { return this.url; }
});

$.$defineNativeClass('HTMLTableCellElement', {
 get$height: function() { return this.height; },
 set$height: function(v) { this.height = v; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; }
});

$.$defineNativeClass('HTMLTableColElement', {
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; }
});

$.$defineNativeClass('HTMLTableElement', {
 get$frame: function() { return this.frame; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; }
});

$.$defineNativeClass('HTMLTextAreaElement', {
 get$value: function() { return this.value; },
 set$value: function(v) { this.value = v; }
});

$.$defineNativeClass('TextMetrics', {
 get$width: function() { return this.width; }
});

$.$defineNativeClass('TouchEvent', {
 get$shiftKey: function() { return this.shiftKey; }
});

$.$defineNativeClass('HTMLTrackElement', {
 set$src: function(v) { this.src = v; }
});

$.$defineNativeClass('Uint16Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $.Collections_every(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $.Collections_every(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 map$1: function(f) {
  return $.Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $.Collections_every(this, f);
},
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', {
 get$height: function() { return this.height; },
 set$height: function(v) { this.height = v; },
 get$width: function() { return this.width; },
 set$width: function(v) { this.width = v; }
});

$.$defineNativeClass('WebGLRenderingContext', {
 clear$1: function(mask) {
  return this.clear(mask);
}
});

$.$defineNativeClass('XPathException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBDatabaseException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGAElement', {
 get$href: function() { return this.href; },
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGAltGlyphElement', {
 get$href: function() { return this.href; }
});

$.$defineNativeClass('SVGCircleElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGClipPathElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGCursorElement', {
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 get$href: function() { return this.href; }
});

$.$defineNativeClass('SVGDefsElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGEllipseElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGFEBlendElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFEColorMatrixElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFEComponentTransferElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFECompositeElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 scale$2: function(arg0, arg1) {
  return this.scale.call$2(arg0, arg1);
},
 scale$1: function(arg0) {
  return this.scale.call$1(arg0);
}
});

$.$defineNativeClass('SVGFEDropShadowElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFEFloodElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFEImageElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 get$href: function() { return this.href; }
});

$.$defineNativeClass('SVGFEMergeElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFEMorphologyElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFEOffsetElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFEPointLightElement', {
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFESpecularLightingElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFESpotLightElement', {
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFETileElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFETurbulenceElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGFilterElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 get$href: function() { return this.href; }
});

$.$defineNativeClass('SVGForeignObjectElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGGElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGGlyphRefElement', {
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 get$href: function() { return this.href; }
});

$.$defineNativeClass('SVGGradientElement', {
 get$href: function() { return this.href; }
});

$.$defineNativeClass('SVGImageElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 get$href: function() { return this.href; },
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGLineElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGMPathElement', {
 get$href: function() { return this.href; }
});

$.$defineNativeClass('SVGMaskElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGPathElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGPatternElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 get$href: function() { return this.href; }
});

$.$defineNativeClass('SVGPolygonElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGPolylineElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGRectElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGScriptElement', {
 get$href: function() { return this.href; }
});

$.$defineNativeClass('SVGElement', {
 click$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot invoke click SVG."));
},
 get$click: function() {
  return new $.BoundClosure0(this, 'click$0');
},
 get$id: function() {
  return this.id;
}
});

$.$defineNativeClass('SVGException', {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGSVGElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGSwitchElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGTRefElement', {
 get$href: function() { return this.href; }
});

$.$defineNativeClass('SVGTextElement', {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('SVGTextPathElement', {
 get$href: function() { return this.href; }
});

$.$defineNativeClass('SVGTextPositioningElement', {
 get$x: function() { return this.x; },
 get$y: function() { return this.y; }
});

$.$defineNativeClass('SVGUseElement', {
 get$height: function() { return this.height; },
 get$width: function() { return this.width; },
 get$x: function() { return this.x; },
 get$y: function() { return this.y; },
 get$href: function() { return this.href; },
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
}
});

$.$defineNativeClass('AudioBuffer', {
 get$duration: function() { return this.duration; },
 get$length: function() { return this.length; }
});

$.$defineNativeClass('AudioBufferSourceNode', {
 set$buffer: function(v) { this.buffer = v; },
 start$3: function(when, grainOffset, grainDuration) {
  var t1, t2;
  t1 = $ === grainOffset;
  if (t1)
    grainOffset = null;
  t1 = !t1;
  t2 = $ === grainDuration;
  if (t2)
    grainDuration = null;
  t2 = !t2;
  if (!!this.start)
    if (t2)
      this.start(when, grainOffset, grainDuration);
    else if (t1)
      this.start(when, grainOffset);
    else
      this.start(when);
  else if (t2)
    this.noteOn(when, grainOffset, grainDuration);
  else if (t1)
    this.noteOn(when, grainOffset);
  else
    this.noteOn(when);
},
 start$1: function(when) {
  return this.start$3(when, $, $);
}
});

$.$defineNativeClass('AudioContext', {
 get$destination: function() { return this.destination; },
 get$on: function() {
  return $.AudioContextEvents$(this);
},
 createBufferSource$0: function() {
  return this.createBufferSource();
},
 decodeAudioData$3: function(audioData, successCallback, errorCallback) {
  return this.decodeAudioData(audioData,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
}
});

$.$defineNativeClass('AudioNode', {
 get$context: function() { return this.context; },
 connect$3: function(destination, output, input) {
  return this.connect(destination,output,input);
}
});

// 144 dynamic classes.
// 255 classes
// 24 !leaf
(function() {
  var v0_TextPositioningElement = 'SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTextElement|SVGTSpanElement', v1_GradientElement = 'SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement', v2_MediaElement = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement', v3_SvgElement = [v0_TextPositioningElement, v1_GradientElement, 'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGTextContentElement|SVGTextPathElement|SVGAnimationElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimateColorElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGComponentTransferFunctionElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEFuncAElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEConvolveMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEFloodElement|SVGFEDistantLightElement|SVGFEGaussianBlurElement|SVGFEMergeNodeElement|SVGFEDropShadowElement|SVGFEMorphologyElement|SVGFESpotLightElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFilterElement|SVGFontElement|SVGFEOffsetElement|SVGFontFaceFormatElement|SVGFEMergeElement|SVGFontFaceNameElement|SVGFontFaceUriElement|SVGFETurbulenceElement|SVGForeignObjectElement|SVGGlyphElement|SVGGlyphRefElement|SVGHKernElement|SVGImageElement|SVGGElement|SVGFEImageElement|SVGLineElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGFontFaceElement|SVGFETileElement|SVGFontFaceSrcElement|SVGPatternElement|SVGPolylineElement|SVGRectElement|SVGPolygonElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGStyleElement|SVGSwitchElement|SVGTitleElement|SVGSymbolElement|SVGUseElement|SVGVKernElement|SVGViewElement'].join('|'), v4_Element = [v2_MediaElement, v3_SvgElement, 'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLHeadElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|'), v5_CharacterData = 'CharacterData|Comment|Text|CDATASection', v6_Document = 'Document|SVGDocument|HTMLDocument', v7_DocumentFragment = 'DocumentFragment|ShadowRoot', v8_MouseEvent = 'MouseEvent|WheelEvent', v9_ProgressEvent = 'ProgressEvent|XMLHttpRequestProgressEvent', v10_Node = [v4_Element, v5_CharacterData, v6_Document, v7_DocumentFragment, 'Node|Attr|EntityReference|DocumentType|Notation|ProcessingInstruction'].join('|');
  $.dynamicSetMetadata([['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'], ['SVGTextPositioningElement', v0_TextPositioningElement], ['SVGGradientElement', v1_GradientElement], ['SVGElement', v3_SvgElement], ['AudioNode', 'AudioNode|AudioSourceNode|AudioBufferSourceNode|AudioDestinationNode'], ['HTMLMediaElement', v2_MediaElement], ['MouseEvent', v8_MouseEvent], ['Element', v4_Element], ['CharacterData', v5_CharacterData], ['Document', v6_Document], ['DocumentFragment', v7_DocumentFragment], ['Node', v10_Node], ['NodeList', 'NodeList|RadioNodeList'], ['ProgressEvent', v9_ProgressEvent], ['Blob', 'Blob|File'], ['Uint8Array', 'Uint8Array|Uint8ClampedArray'], ['Event', [v8_MouseEvent, v9_ProgressEvent, 'Event|UIEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent|TextEvent|TouchEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|WebKitAnimationEvent|BeforeLoadEvent|CloseEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|AudioProcessingEvent|OfflineAudioCompletionEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|HashChangeEvent|MessageEvent|MutationEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent'].join('|')], ['EventTarget', [v10_Node, 'EventTarget|XMLHttpRequestUpload|AudioContext|XMLHttpRequest|DOMWindow'].join('|')]]);
})();


//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, constructor, prototype) {
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = !!{}.__proto__;
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue, getter) {
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  function Isolate() {
    for (var staticName in isolateProperties) {
      if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
        this[staticName] = isolateProperties[staticName];
      }
    }
    // Use the newly created object as prototype. In Chrome this creates a
    // hidden class for the object and makes sure it is fast to access.
    function ForceEfficientMap() {}
    ForceEfficientMap.prototype = this;
    new ForceEfficientMap;
  }
  Isolate.prototype = oldIsolate.prototype;
  Isolate.prototype.constructor = Isolate;
  Isolate.$isolateProperties = isolateProperties;
  return Isolate;
};
}

//@ sourceMappingURL=game.dart.js.map